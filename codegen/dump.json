{
  "colors": [
    {
      "id": "AliceBlue",
      "color": "#f0f8ff"
    },
    {
      "id": "AntiqueWhite",
      "color": "#faebd7"
    },
    {
      "id": "Aqua",
      "color": "#00ffff"
    },
    {
      "id": "Aquamarine",
      "color": "#7fffd4"
    },
    {
      "id": "Azure",
      "color": "#f0ffff"
    },
    {
      "id": "Beige",
      "color": "#f5f5dc"
    },
    {
      "id": "Bisque",
      "color": "#ffe4c4"
    },
    {
      "id": "Black",
      "color": "#000000"
    },
    {
      "id": "BlanchedAlmond",
      "color": "#ffebcd"
    },
    {
      "id": "Blue",
      "color": "#0000ff"
    },
    {
      "id": "BlueViolet",
      "color": "#8a2be2"
    },
    {
      "id": "Brown",
      "color": "#a52a2a"
    },
    {
      "id": "BurlyWood",
      "color": "#deb887"
    },
    {
      "id": "CadetBlue",
      "color": "#5f9ea0"
    },
    {
      "id": "Chartreuse",
      "color": "#7fff00"
    },
    {
      "id": "Chocolate",
      "color": "#d2691e"
    },
    {
      "id": "Coral",
      "color": "#ff7f50"
    },
    {
      "id": "CornflowerBlue",
      "color": "#6495ed"
    },
    {
      "id": "Cornsilk",
      "color": "#fff8dc"
    },
    {
      "id": "Crimson",
      "color": "#dc143c"
    },
    {
      "id": "Cyan",
      "color": "#00ffff"
    },
    {
      "id": "DarkBlue",
      "color": "#00008b"
    },
    {
      "id": "DarkCyan",
      "color": "#008b8b"
    },
    {
      "id": "DarkGoldenRod",
      "color": "#b8860b"
    },
    {
      "id": "DarkGray",
      "color": "#a9a9a9"
    },
    {
      "id": "DarkGreen",
      "color": "#006400"
    },
    {
      "id": "DarkKhaki",
      "color": "#bdb76b"
    },
    {
      "id": "DarkMagenta",
      "color": "#8b008b"
    },
    {
      "id": "DarkOliveGreen",
      "color": "#556b2f"
    },
    {
      "id": "Darkorange",
      "color": "#ff8c00"
    },
    {
      "id": "DarkOrchid",
      "color": "#9932cc"
    },
    {
      "id": "DarkRed",
      "color": "#8b0000"
    },
    {
      "id": "DarkSalmon",
      "color": "#e9967a"
    },
    {
      "id": "DarkSeaGreen",
      "color": "#8fbc8f"
    },
    {
      "id": "DarkSlateBlue",
      "color": "#483d8b"
    },
    {
      "id": "DarkSlateGray",
      "color": "#2f4f4f"
    },
    {
      "id": "DarkTurquoise",
      "color": "#00ced1"
    },
    {
      "id": "DarkViolet",
      "color": "#9400d3"
    },
    {
      "id": "DeepPink",
      "color": "#ff1493"
    },
    {
      "id": "DeepSkyBlue",
      "color": "#00bfff"
    },
    {
      "id": "DimGray",
      "color": "#696969"
    },
    {
      "id": "DodgerBlue",
      "color": "#1e90ff"
    },
    {
      "id": "FireBrick",
      "color": "#b22222"
    },
    {
      "id": "FloralWhite",
      "color": "#fffaf0"
    },
    {
      "id": "ForestGreen",
      "color": "#228b22"
    },
    {
      "id": "Fuchsia",
      "color": "#ff00ff"
    },
    {
      "id": "Gainsboro",
      "color": "#dcdcdc"
    },
    {
      "id": "GhostWhite",
      "color": "#f8f8ff"
    },
    {
      "id": "Gold",
      "color": "#ffd700"
    },
    {
      "id": "GoldenRod",
      "color": "#daa520"
    },
    {
      "id": "Gray",
      "color": "#808080"
    },
    {
      "id": "Green",
      "color": "#008000"
    },
    {
      "id": "GreenYellow",
      "color": "#adff2f"
    },
    {
      "id": "HoneyDew",
      "color": "#f0fff0"
    },
    {
      "id": "HotPink",
      "color": "#ff69b4"
    },
    {
      "id": "IndianRed",
      "color": "#cd5c5c"
    },
    {
      "id": "Indigo",
      "color": "#4b0082"
    },
    {
      "id": "Ivory",
      "color": "#fffff0"
    },
    {
      "id": "Khaki",
      "color": "#f0e68c"
    },
    {
      "id": "Lavender",
      "color": "#e6e6fa"
    },
    {
      "id": "LavenderBlush",
      "color": "#fff0f5"
    },
    {
      "id": "LawnGreen",
      "color": "#7cfc00"
    },
    {
      "id": "LemonChiffon",
      "color": "#fffacd"
    },
    {
      "id": "LightBlue",
      "color": "#add8e6"
    },
    {
      "id": "LightCoral",
      "color": "#f08080"
    },
    {
      "id": "LightCyan",
      "color": "#e0ffff"
    },
    {
      "id": "LightGoldenRodYellow",
      "color": "#fafad2"
    },
    {
      "id": "LightGreen",
      "color": "#90ee90"
    },
    {
      "id": "LightGrey",
      "color": "#d3d3d3"
    },
    {
      "id": "LightPink",
      "color": "#ffb6c1"
    },
    {
      "id": "LightSalmon",
      "color": "#ffa07a"
    },
    {
      "id": "LightSeaGreen",
      "color": "#20b2aa"
    },
    {
      "id": "LightSkyBlue",
      "color": "#87cefa"
    },
    {
      "id": "LightSlateGray",
      "color": "#778899"
    },
    {
      "id": "LightSteelBlue",
      "color": "#b0c4de"
    },
    {
      "id": "LightYellow",
      "color": "#ffffe0"
    },
    {
      "id": "Lime",
      "color": "#00ff00"
    },
    {
      "id": "LimeGreen",
      "color": "#32cd32"
    },
    {
      "id": "Linen",
      "color": "#faf0e6"
    },
    {
      "id": "Magenta",
      "color": "#ff00ff"
    },
    {
      "id": "Maroon",
      "color": "#800000"
    },
    {
      "id": "MediumAquaMarine",
      "color": "#66cdaa"
    },
    {
      "id": "MediumBlue",
      "color": "#0000cd"
    },
    {
      "id": "MediumOrchid",
      "color": "#ba55d3"
    },
    {
      "id": "MediumPurple",
      "color": "#9370d8"
    },
    {
      "id": "MediumSeaGreen",
      "color": "#3cb371"
    },
    {
      "id": "MediumSlateBlue",
      "color": "#7b68ee"
    },
    {
      "id": "MediumSpringGreen",
      "color": "#00fa9a"
    },
    {
      "id": "MediumTurquoise",
      "color": "#48d1cc"
    },
    {
      "id": "MediumVioletRed",
      "color": "#c71585"
    },
    {
      "id": "MidnightBlue",
      "color": "#191970"
    },
    {
      "id": "MintCream",
      "color": "#f5fffa"
    },
    {
      "id": "MistyRose",
      "color": "#ffe4e1"
    },
    {
      "id": "Moccasin",
      "color": "#ffe4b5"
    },
    {
      "id": "NavajoWhite",
      "color": "#ffdead"
    },
    {
      "id": "Navy",
      "color": "#000080"
    },
    {
      "id": "OldLace",
      "color": "#fdf5e6"
    },
    {
      "id": "Olive",
      "color": "#808000"
    },
    {
      "id": "OliveDrab",
      "color": "#6b8e23"
    },
    {
      "id": "Orange",
      "color": "#ffa500"
    },
    {
      "id": "OrangeRed",
      "color": "#ff4500"
    },
    {
      "id": "Orchid",
      "color": "#da70d6"
    },
    {
      "id": "PaleGoldenRod",
      "color": "#eee8aa"
    },
    {
      "id": "PaleGreen",
      "color": "#98fb98"
    },
    {
      "id": "PaleTurquoise",
      "color": "#afeeee"
    },
    {
      "id": "PaleVioletRed",
      "color": "#d87093"
    },
    {
      "id": "PapayaWhip",
      "color": "#ffefd5"
    },
    {
      "id": "PeachPuff",
      "color": "#ffdab9"
    },
    {
      "id": "Peru",
      "color": "#cd853f"
    },
    {
      "id": "Pink",
      "color": "#ffc0cb"
    },
    {
      "id": "Plum",
      "color": "#dda0dd"
    },
    {
      "id": "PowderBlue",
      "color": "#b0e0e6"
    },
    {
      "id": "Purple",
      "color": "#800080"
    },
    {
      "id": "Red",
      "color": "#ff0000"
    },
    {
      "id": "RosyBrown",
      "color": "#bc8f8f"
    },
    {
      "id": "RoyalBlue",
      "color": "#4169e1"
    },
    {
      "id": "SaddleBrown",
      "color": "#8b4513"
    },
    {
      "id": "Salmon",
      "color": "#fa8072"
    },
    {
      "id": "SandyBrown",
      "color": "#f4a460"
    },
    {
      "id": "SeaGreen",
      "color": "#2e8b57"
    },
    {
      "id": "SeaShell",
      "color": "#fff5ee"
    },
    {
      "id": "Sienna",
      "color": "#a0522d"
    },
    {
      "id": "Silver",
      "color": "#c0c0c0"
    },
    {
      "id": "SkyBlue",
      "color": "#87ceeb"
    },
    {
      "id": "SlateBlue",
      "color": "#6a5acd"
    },
    {
      "id": "SlateGray",
      "color": "#708090"
    },
    {
      "id": "Snow",
      "color": "#fffafa"
    },
    {
      "id": "SpringGreen",
      "color": "#00ff7f"
    },
    {
      "id": "SteelBlue",
      "color": "#4682b4"
    },
    {
      "id": "Tan",
      "color": "#d2b48c"
    },
    {
      "id": "Teal",
      "color": "#008080"
    },
    {
      "id": "Thistle",
      "color": "#d8bfd8"
    },
    {
      "id": "Tomato",
      "color": "#ff6347"
    },
    {
      "id": "Turquoise",
      "color": "#40e0d0"
    },
    {
      "id": "Violet",
      "color": "#ee82ee"
    },
    {
      "id": "Wheat",
      "color": "#f5deb3"
    },
    {
      "id": "White",
      "color": "#ffffff"
    },
    {
      "id": "WhiteSmoke",
      "color": "#f5f5f5"
    },
    {
      "id": "Yellow",
      "color": "#ffff00"
    },
    {
      "id": "YellowGreen",
      "color": "#9acd32"
    }
  ],
  "hwaccels": [
    "vdpau",
    "cuda",
    "vaapi",
    "qsv",
    "drm",
    "opencl"
  ],
  "sample_fmts": [
    {
      "id": "u8",
      "depth": 8
    },
    {
      "id": "s16",
      "depth": 16
    },
    {
      "id": "s32",
      "depth": 32
    },
    {
      "id": "flt",
      "depth": 32
    },
    {
      "id": "dbl",
      "depth": 64
    },
    {
      "id": "u8p",
      "depth": 8
    },
    {
      "id": "s16p",
      "depth": 16
    },
    {
      "id": "s32p",
      "depth": 32
    },
    {
      "id": "fltp",
      "depth": 32
    },
    {
      "id": "dblp",
      "depth": 64
    },
    {
      "id": "s64",
      "depth": 64
    },
    {
      "id": "s64p",
      "depth": 64
    }
  ],
  "pix_fmts": [
    {
      "id": "yuv420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "yuyv422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "bgr24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuv444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv410p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 9
    },
    {
      "id": "yuv411p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "gray",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 8
    },
    {
      "id": "monow",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 1,
      "bitsPerPixel": 1
    },
    {
      "id": "monob",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 1,
      "bitsPerPixel": 1
    },
    {
      "id": "pal8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": true,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 8
    },
    {
      "id": "yuvj420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "yuvj422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuvj444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "uyvy422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "uyyvyy411",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bgr4",
      "input": false,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "bgr4_byte",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "rgb8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "rgb4",
      "input": false,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "rgb4_byte",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "nv12",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "nv21",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "argb",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "rgba",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "abgr",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "bgra",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "gray16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 16
    },
    {
      "id": "gray16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 16
    },
    {
      "id": "yuv440p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuvj440p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuva420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 20
    },
    {
      "id": "rgb48be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "rgb48le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "rgb565be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb565le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb555be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "rgb555le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "bgr565be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr565le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr555be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "bgr555le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "vaapi_moco",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "vaapi_idct",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "vaapi_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "yuv420p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv420p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 32
    },
    {
      "id": "yuv422p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 32
    },
    {
      "id": "yuv444p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuv444p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "dxva2_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "rgb444le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "rgb444be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr444le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr444be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "ya8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr48be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "bgr48le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuv420p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 13
    },
    {
      "id": "yuv420p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 13
    },
    {
      "id": "yuv420p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "yuv420p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "yuv422p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv422p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv444p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "yuv444p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "yuv444p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "yuv444p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "yuv422p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv422p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "gbrp",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "gbrp9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "gbrp9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "gbrp10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "gbrp10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "gbrp16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrp16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 24
    },
    {
      "id": "yuva444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "yuva420p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 22
    },
    {
      "id": "yuva420p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 22
    },
    {
      "id": "yuva422p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 27
    },
    {
      "id": "yuva422p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 27
    },
    {
      "id": "yuva444p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva444p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva420p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 25
    },
    {
      "id": "yuva420p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 25
    },
    {
      "id": "yuva422p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 30
    },
    {
      "id": "yuva422p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 30
    },
    {
      "id": "yuva444p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva444p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva420p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva420p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva422p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva422p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva444p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "yuva444p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "vdpau",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "xyz12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "xyz12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "nv16",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "nv20le",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "nv20be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "rgba64be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "rgba64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "bgra64be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "bgra64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "yvyu422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "ya16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 32
    },
    {
      "id": "ya16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 32
    },
    {
      "id": "gbrap",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "gbrap16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "gbrap16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "qsv",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "mmal",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "d3d11va_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "cuda",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "0rgb",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "rgb0",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "0bgr",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "bgr0",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv420p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv420p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv420p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 21
    },
    {
      "id": "yuv420p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 21
    },
    {
      "id": "yuv422p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 28
    },
    {
      "id": "yuv422p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 28
    },
    {
      "id": "yuv444p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "yuv444p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "yuv444p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "yuv444p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "gbrp12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "gbrp12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "gbrp14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "gbrp14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "yuvj411p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bayer_bggr8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_rggb8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_gbrg8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_grbg8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_bggr16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_bggr16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_rggb16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_rggb16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_gbrg16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_gbrg16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_grbg16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_grbg16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "xvmc",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "yuv440p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv440p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv440p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv440p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "ayuv64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "ayuv64be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "videotoolbox_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "p010le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "p010be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "gbrap12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrap12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrap10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "gbrap10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "mediacodec",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 12
    },
    {
      "id": "gray12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 12
    },
    {
      "id": "gray10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 10
    },
    {
      "id": "gray10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 10
    },
    {
      "id": "p016le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "p016be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "d3d11",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 9
    },
    {
      "id": "gray9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 9
    },
    {
      "id": "gbrpf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 96
    },
    {
      "id": "gbrpf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 96
    },
    {
      "id": "gbrapf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 128
    },
    {
      "id": "gbrapf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 128
    },
    {
      "id": "drm_prime",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "opencl",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 14
    },
    {
      "id": "gray14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 14
    },
    {
      "id": "grayf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 32
    },
    {
      "id": "grayf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 32
    },
    {
      "id": "yuva422p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva422p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva444p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva444p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "nv24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "nv42",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "vulkan",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "y210be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "y210le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "x2rgb10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "x2rgb10be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    }
  ],
  "layouts": {
    "channels": [
      {
        "id": "FL",
        "label": "front left"
      },
      {
        "id": "FR",
        "label": "front right"
      },
      {
        "id": "FC",
        "label": "front center"
      },
      {
        "id": "LFE",
        "label": "low frequency"
      },
      {
        "id": "BL",
        "label": "back left"
      },
      {
        "id": "BR",
        "label": "back right"
      },
      {
        "id": "FLC",
        "label": "front left-of-center"
      },
      {
        "id": "FRC",
        "label": "front right-of-center"
      },
      {
        "id": "BC",
        "label": "back center"
      },
      {
        "id": "SL",
        "label": "side left"
      },
      {
        "id": "SR",
        "label": "side right"
      },
      {
        "id": "TC",
        "label": "top center"
      },
      {
        "id": "TFL",
        "label": "top front left"
      },
      {
        "id": "TFC",
        "label": "top front center"
      },
      {
        "id": "TFR",
        "label": "top front right"
      },
      {
        "id": "TBL",
        "label": "top back left"
      },
      {
        "id": "TBC",
        "label": "top back center"
      },
      {
        "id": "TBR",
        "label": "top back right"
      },
      {
        "id": "DL",
        "label": "downmix left"
      },
      {
        "id": "DR",
        "label": "downmix right"
      },
      {
        "id": "WL",
        "label": "wide left"
      },
      {
        "id": "WR",
        "label": "wide right"
      },
      {
        "id": "SDL",
        "label": "surround direct left"
      },
      {
        "id": "SDR",
        "label": "surround direct right"
      },
      {
        "id": "LFE2",
        "label": "low frequency 2"
      },
      {
        "id": "TSL",
        "label": "top side left"
      },
      {
        "id": "TSR",
        "label": "top side right"
      },
      {
        "id": "BFC",
        "label": "bottom front center"
      },
      {
        "id": "BFL",
        "label": "bottom front left"
      },
      {
        "id": "BFR",
        "label": "bottom front right"
      }
    ],
    "aliases": [
      {
        "id": "mono",
        "value": "FC"
      },
      {
        "id": "stereo",
        "value": "FL+FR"
      },
      {
        "id": "2.1",
        "value": "FL+FR+LFE"
      },
      {
        "id": "3.0",
        "value": "FL+FR+FC"
      },
      {
        "id": "3.0(back)",
        "value": "FL+FR+BC"
      },
      {
        "id": "4.0",
        "value": "FL+FR+FC+BC"
      },
      {
        "id": "quad",
        "value": "FL+FR+BL+BR"
      },
      {
        "id": "quad(side)",
        "value": "FL+FR+SL+SR"
      },
      {
        "id": "3.1",
        "value": "FL+FR+FC+LFE"
      },
      {
        "id": "5.0",
        "value": "FL+FR+FC+BL+BR"
      },
      {
        "id": "5.0(side)",
        "value": "FL+FR+FC+SL+SR"
      },
      {
        "id": "4.1",
        "value": "FL+FR+FC+LFE+BC"
      },
      {
        "id": "5.1",
        "value": "FL+FR+FC+LFE+BL+BR"
      },
      {
        "id": "5.1(side)",
        "value": "FL+FR+FC+LFE+SL+SR"
      },
      {
        "id": "6.0",
        "value": "FL+FR+FC+BC+SL+SR"
      },
      {
        "id": "6.0(front)",
        "value": "FL+FR+FLC+FRC+SL+SR"
      },
      {
        "id": "hexagonal",
        "value": "FL+FR+FC+BL+BR+BC"
      },
      {
        "id": "6.1",
        "value": "FL+FR+FC+LFE+BC+SL+SR"
      },
      {
        "id": "6.1(back)",
        "value": "FL+FR+FC+LFE+BL+BR+BC"
      },
      {
        "id": "6.1(front)",
        "value": "FL+FR+LFE+FLC+FRC+SL+SR"
      },
      {
        "id": "7.0",
        "value": "FL+FR+FC+BL+BR+SL+SR"
      },
      {
        "id": "7.0(front)",
        "value": "FL+FR+FC+FLC+FRC+SL+SR"
      },
      {
        "id": "7.1",
        "value": "FL+FR+FC+LFE+BL+BR+SL+SR"
      },
      {
        "id": "7.1(wide)",
        "value": "FL+FR+FC+LFE+BL+BR+FLC+FRC"
      },
      {
        "id": "7.1(wide-side)",
        "value": "FL+FR+FC+LFE+FLC+FRC+SL+SR"
      },
      {
        "id": "octagonal",
        "value": "FL+FR+FC+BL+BR+BC+SL+SR"
      },
      {
        "id": "hexadecagonal",
        "value": "FL+FR+FC+BL+BR+BC+SL+SR+TFL+TFC+TFR+TBL+TBC+TBR+WL+WR"
      },
      {
        "id": "downmix",
        "value": "DL+DR"
      },
      {
        "id": "22.2",
        "value": "FL+FR+FC+LFE+BL+BR+FLC+FRC+BC+SL+SR+TC+TFL+TFC+TFR+TBL+TBC+TBR+LFE2+TSL+TSR+BFC+BFL+BFR"
      }
    ]
  },
  "filters": [
    {
      "id": "abench",
      "label": "Benchmark part of a filtergraph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acompressor",
      "label": "Audio compressor.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acontrast",
      "label": "Simple audio dynamic range compression/expansion filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acopy",
      "label": "Copy the input audio unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acue",
      "label": "Delay filtering to match a cue.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acrossfade",
      "label": "Cross fade two input audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "acrossover",
      "label": "Split audio into per-bands streams.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "acrusher",
      "label": "Reduce audio bit resolution.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "adeclick",
      "label": "Remove impulsive noise from input audio.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "adeclip",
      "label": "Remove clipping from input audio.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "adelay",
      "label": "Delay one or more audio channels.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "adenorm",
      "label": "Remedy denormals by adding extremely low-level noise.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aderivative",
      "label": "Compute derivative of input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aecho",
      "label": "Add echoing to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aemphasis",
      "label": "Audio emphasis.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aeval",
      "label": "Filter audio signal according to a specified expression.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aexciter",
      "label": "Enhance high frequency part of audio.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afade",
      "label": "Fade in/out input audio.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afftdn",
      "label": "Denoise audio samples using FFT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afftfilt",
      "label": "Apply arbitrary expressions to samples in frequency domain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afir",
      "label": "Apply Finite Impulse Response filter with supplied coefficients in additional stream(s).",
      "timeline": false,
      "slice": true,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "aformat",
      "label": "Convert the input audio to one of the specified formats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afreqshift",
      "label": "Apply frequency shifting to input audio.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "agate",
      "label": "Audio gate.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aiir",
      "label": "Apply Infinite Impulse Response filter with supplied coefficients.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "aintegral",
      "label": "Compute integral of input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "ainterleave",
      "label": "Temporally interleave audio inputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "alimiter",
      "label": "Audio lookahead limiter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "allpass",
      "label": "Apply a two-pole all-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aloop",
      "label": "Loop audio samples.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "amerge",
      "label": "Merge two or more audio streams into a single multi-channel stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "ametadata",
      "label": "Manipulate audio frame metadata.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "amix",
      "label": "Audio mixing.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "amultiply",
      "label": "Multiply two audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anequalizer",
      "label": "Apply high-order audio parametric multi band equalizer.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "anlmdn",
      "label": "Reduce broadband noise from stream using Non-Local Means.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anlms",
      "label": "Apply Normalized Least-Mean-Squares algorithm to first audio stream.",
      "timeline": false,
      "slice": true,
      "command": true,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anull",
      "label": "Pass the source unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "apad",
      "label": "Pad audio with silence.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aperms",
      "label": "Set permissions for the output audio frame.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aphaser",
      "label": "Add a phasing effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aphaseshift",
      "label": "Apply phase shifting to input audio.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "apulsator",
      "label": "Audio pulsator.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "arealtime",
      "label": "Slow down filtering to match realtime.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aresample",
      "label": "Resample audio data.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "areverse",
      "label": "Reverse an audio clip.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "arnndn",
      "label": "Reduce noise from speech using Recurrent Neural Networks.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aselect",
      "label": "Select audio frames to pass in output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "asendcmd",
      "label": "Send commands to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asetnsamples",
      "label": "Set the number of samples for each output audio frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asetpts",
      "label": "Set PTS for the output audio frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asetrate",
      "label": "Change the sample rate without altering the data.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asettb",
      "label": "Set timebase for the audio output link.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "ashowinfo",
      "label": "Show textual information for each audio frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asidedata",
      "label": "Manipulate audio frame side data.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asoftclip",
      "label": "Audio Soft Clipper.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asplit",
      "label": "Pass on the audio input to N audio outputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "asr",
      "label": "Automatic Speech Recognition.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "astats",
      "label": "Show time domain statistics about audio frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "astreamselect",
      "label": "Select audio streams",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "asubboost",
      "label": "Boost subwoofer frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asubcut",
      "label": "Cut subwoofer frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asupercut",
      "label": "Cut super frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asuperpass",
      "label": "Apply high order Butterworth band-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "asuperstop",
      "label": "Apply high order Butterworth band-stop filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "atempo",
      "label": "Adjust audio tempo.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "atrim",
      "label": "Pick one continuous section from the input, drop the rest.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "axcorrelate",
      "label": "Cross-correlate two audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "azmq",
      "label": "Receive commands through ZMQ and broker them to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "bandpass",
      "label": "Apply a two-pole Butterworth band-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "bandreject",
      "label": "Apply a two-pole Butterworth band-reject filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "bass",
      "label": "Boost or cut lower frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "biquad",
      "label": "Apply a biquad IIR filter with the given coefficients.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "bs2b",
      "label": "Bauer stereo-to-binaural filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "channelmap",
      "label": "Remap audio channels.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "channelsplit",
      "label": "Split audio into per-channel streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "chorus",
      "label": "Add a chorus effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "compand",
      "label": "Compress or expand audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "compensationdelay",
      "label": "Audio Compensation Delay Line.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "crossfeed",
      "label": "Apply headphone crossfeed filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "crystalizer",
      "label": "Simple audio noise sharpening filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "dcshift",
      "label": "Apply a DC shift to the audio.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "deesser",
      "label": "Apply de-essing to the audio.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "drmeter",
      "label": "Measure audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "dynaudnorm",
      "label": "Dynamic Audio Normalizer.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "earwax",
      "label": "Widen the stereo image.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "ebur128",
      "label": "EBU R128 scanner.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "equalizer",
      "label": "Apply two-pole peaking equalization (EQ) filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "extrastereo",
      "label": "Increase difference between stereo audio channels.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "firequalizer",
      "label": "Finite Impulse Response Equalizer.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "flanger",
      "label": "Apply a flanging effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "haas",
      "label": "Apply Haas Stereo Enhancer.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "hdcd",
      "label": "Apply High Definition Compatible Digital (HDCD) decoding.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "headphone",
      "label": "Apply headphone binaural spatialization with HRTFs in additional streams.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "highpass",
      "label": "Apply a high-pass filter with 3dB point frequency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "highshelf",
      "label": "Apply a high shelf filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "join",
      "label": "Join multiple audio streams into multi-channel output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "ladspa",
      "label": "Apply LADSPA effect.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "loudnorm",
      "label": "EBU R128 loudness normalization",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "lowpass",
      "label": "Apply a low-pass filter with 3dB point frequency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "lowshelf",
      "label": "Apply a low shelf filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "lv2",
      "label": "Apply LV2 effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "mcompand",
      "label": "Multiband Compress or expand audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "pan",
      "label": "Remix channels with coefficients (panning).",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "replaygain",
      "label": "ReplayGain scanner.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "rubberband",
      "label": "Apply time-stretching and pitch-shifting.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "sidechaincompress",
      "label": "Sidechain compressor.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "sidechaingate",
      "label": "Audio sidechain gate.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio",
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "silencedetect",
      "label": "Detect silence.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "silenceremove",
      "label": "Remove silence.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "sofalizer",
      "label": "SOFAlizer (Spatially Oriented Format for Acoustics).",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "speechnorm",
      "label": "Speech Normalizer.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "stereotools",
      "label": "Apply various stereo tools.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "stereowiden",
      "label": "Apply stereo widening effect.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "superequalizer",
      "label": "Apply 18 band equalization filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "surround",
      "label": "Apply audio surround upmix filter.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "treble",
      "label": "Boost or cut upper frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "tremolo",
      "label": "Apply tremolo effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "vibrato",
      "label": "Apply vibrato effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "volume",
      "label": "Change input volume.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "volumedetect",
      "label": "Detect audio volume.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "aevalsrc",
      "label": "Generate an audio signal generated by an expression.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "afirsrc",
      "label": "Generate a FIR coefficients audio stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anoisesrc",
      "label": "Generate a noise audio signal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anullsrc",
      "label": "Null audio source, return empty audio frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "flite",
      "label": "Synthesize voice from text using libflite.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "hilbert",
      "label": "Generate a Hilbert transform FIR coefficients.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "sinc",
      "label": "Generate a sinc kaiser-windowed low-pass, high-pass, band-pass, or band-reject FIR coefficients.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "sine",
      "label": "Generate sine wave audio signal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "anullsink",
      "label": "Do absolutely nothing with the input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": []
    },
    {
      "id": "addroi",
      "label": "Add region of interest to frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "alphaextract",
      "label": "Extract an alpha channel as a grayscale image component.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "alphamerge",
      "label": "Copy the luma value of the second input into the alpha channel of the first input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "amplify",
      "label": "Amplify changes between successive video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "ass",
      "label": "Render ASS subtitles onto input video using the libass library.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "atadenoise",
      "label": "Apply an Adaptive Temporal Averaging Denoiser.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "avgblur",
      "label": "Apply Average Blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "avgblur_opencl",
      "label": "Apply average blur filter",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bbox",
      "label": "Compute bounding box for each frame.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bench",
      "label": "Benchmark part of a filtergraph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bilateral",
      "label": "Apply Bilateral filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bitplanenoise",
      "label": "Measure bit plane noise.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "blackdetect",
      "label": "Detect video intervals that are (almost) black.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "blackframe",
      "label": "Detect frames that are (almost) black.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "blend",
      "label": "Blend two video frames into each other.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bm3d",
      "label": "Block-Matching 3D denoiser.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "boxblur",
      "label": "Blur the input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "boxblur_opencl",
      "label": "Apply boxblur filter to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "bwdif",
      "label": "Deinterlace the input image.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "cas",
      "label": "Contrast Adaptive Sharpen.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "chromahold",
      "label": "Turns a certain color range into gray.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "chromakey",
      "label": "Turns a certain color into transparency. Operates on YUV colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "chromanr",
      "label": "Reduce chrominance noise.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "chromashift",
      "label": "Shift chroma.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "ciescope",
      "label": "Video CIE scope.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "codecview",
      "label": "Visualize information about some codecs.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorbalance",
      "label": "Adjust the color balance.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorchannelmixer",
      "label": "Adjust colors by mixing color channels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorcontrast",
      "label": "Adjust color contrast between RGB components.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorcorrect",
      "label": "Adjust color white balance selectively for blacks and whites.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorize",
      "label": "Overlay a solid color on the video stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorkey",
      "label": "Turns a certain color into transparency. Operates on RGB colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorkey_opencl",
      "label": "Turns a certain color into transparency. Operates on RGB colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorhold",
      "label": "Turns a certain color range into gray. Operates on RGB colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorlevels",
      "label": "Adjust the color levels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colormatrix",
      "label": "Convert color matrix.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colorspace",
      "label": "Convert between colorspaces.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "colortemperature",
      "label": "Adjust color temperature of video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "convolution",
      "label": "Apply convolution filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "convolution_opencl",
      "label": "Apply convolution mask to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "convolve",
      "label": "Convolve first video stream with second video stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "copy",
      "label": "Copy the input video unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "cover_rect",
      "label": "Find and cover a user specified object.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "crop",
      "label": "Crop the input video.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "cropdetect",
      "label": "Auto-detect crop size.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "cue",
      "label": "Delay filtering to match a cue.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "curves",
      "label": "Adjust components curves.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "datascope",
      "label": "Video data analysis.",
      "timeline": false,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dblur",
      "label": "Apply Directional Blur filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dctdnoiz",
      "label": "Denoise frames using 2D DCT.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deband",
      "label": "Debands video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deblock",
      "label": "Deblock video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "decimate",
      "label": "Decimate frames (post field matching filter).",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deconvolve",
      "label": "Deconvolve first video stream with second video stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dedot",
      "label": "Reduce cross-luminance and cross-color.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deflate",
      "label": "Apply deflate effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deflicker",
      "label": "Remove temporal frame luminance variations.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deinterlace_qsv",
      "label": "QuickSync video deinterlacing",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deinterlace_vaapi",
      "label": "Deinterlacing of VAAPI surfaces",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dejudder",
      "label": "Remove judder produced by pullup.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "delogo",
      "label": "Remove logo from input video.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "denoise_vaapi",
      "label": "VAAPI VPP for de-noise",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "derain",
      "label": "Apply derain filter to the input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deshake",
      "label": "Stabilize shaky video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "deshake_opencl",
      "label": "Feature-point based video stabilization filter",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "despill",
      "label": "Despill video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "detelecine",
      "label": "Apply an inverse telecine pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dilation",
      "label": "Apply dilation effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dilation_opencl",
      "label": "Apply dilation effect",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "displace",
      "label": "Displace pixels.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "dnn_processing",
      "label": "Apply DNN processing filter to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "doubleweave",
      "label": "Weave input video fields into double number of frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "drawbox",
      "label": "Draw a colored box on the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "drawgraph",
      "label": "Draw a graph using input video metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "drawgrid",
      "label": "Draw a colored grid on the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "drawtext",
      "label": "Draw text on top of video frames using libfreetype library.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "edgedetect",
      "label": "Detect and draw edge.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "elbg",
      "label": "Apply posterize effect, using the ELBG algorithm.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "entropy",
      "label": "Measure video frames entropy.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "epx",
      "label": "Scale the input using EPX algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "eq",
      "label": "Adjust brightness, contrast, gamma, and saturation.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "erosion",
      "label": "Apply erosion effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "erosion_opencl",
      "label": "Apply erosion effect",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "estdif",
      "label": "Apply Edge Slope Tracing deinterlace.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "exposure",
      "label": "Adjust exposure of the video stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "extractplanes",
      "label": "Extract planes as grayscale frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "fade",
      "label": "Fade in/out input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fftdnoiz",
      "label": "Denoise frames using 3D FFT.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fftfilt",
      "label": "Apply arbitrary expressions to pixels in frequency domain.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "field",
      "label": "Extract a field from the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fieldhint",
      "label": "Field matching using hints.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fieldmatch",
      "label": "Field matching for inverse telecine.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fieldorder",
      "label": "Set the field order.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fillborders",
      "label": "Fill borders of the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "find_rect",
      "label": "Find a user specified object.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "floodfill",
      "label": "Fill area with same color with another color.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "format",
      "label": "Convert the input video to one of the specified pixel formats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fps",
      "label": "Force constant framerate.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "framepack",
      "label": "Generate a frame packed stereoscopic video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "framerate",
      "label": "Upsamples or downsamples progressive source between specified frame rates.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "framestep",
      "label": "Select one frame every N frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "freezedetect",
      "label": "Detects frozen video input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "freezeframes",
      "label": "Freeze video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "frei0r",
      "label": "Apply a frei0r effect.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "fspp",
      "label": "Apply Fast Simple Post-processing filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "gblur",
      "label": "Apply Gaussian Blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "geq",
      "label": "Apply generic equation to each pixel.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "gradfun",
      "label": "Debands video quickly using gradients.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "graphmonitor",
      "label": "Show various filtergraph stats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "greyedge",
      "label": "Estimates scene illumination by grey edge assumption.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "haldclut",
      "label": "Adjust colors using a Hald CLUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hflip",
      "label": "Horizontally flip the input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "histeq",
      "label": "Apply global color histogram equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "histogram",
      "label": "Compute and draw a histogram.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hqdn3d",
      "label": "Apply a High Quality 3D Denoiser.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hqx",
      "label": "Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hstack",
      "label": "Stack video inputs horizontally.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hue",
      "label": "Adjust the hue and saturation of the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hwdownload",
      "label": "Download a hardware frame to a normal frame",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hwmap",
      "label": "Map hardware frames",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hwupload",
      "label": "Upload a normal frame to a hardware frame",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hwupload_cuda",
      "label": "Upload a system memory frame to a CUDA device.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "hysteresis",
      "label": "Grow first stream into second stream by connecting components.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "identity",
      "label": "Calculate the Identity between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "idet",
      "label": "Interlace detect Filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "il",
      "label": "Deinterleave or interleave fields.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "inflate",
      "label": "Apply inflate effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "interlace",
      "label": "Convert progressive video into interlaced.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "interleave",
      "label": "Temporally interleave video inputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "kerndeint",
      "label": "Apply kernel deinterlacing to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "kirsch",
      "label": "Apply kirsch operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lagfun",
      "label": "Slowly update darker pixels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lenscorrection",
      "label": "Rectify the image by correcting for lens distortion.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "limiter",
      "label": "Limit pixels components to the specified range.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "loop",
      "label": "Loop video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lumakey",
      "label": "Turns a certain luma into transparency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lut",
      "label": "Compute and apply a lookup table to the RGB/YUV input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lut1d",
      "label": "Adjust colors using a 1D LUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lut2",
      "label": "Compute and apply a lookup table from two video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lut3d",
      "label": "Adjust colors using a 3D LUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lutrgb",
      "label": "Compute and apply a lookup table to the RGB input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "lutyuv",
      "label": "Compute and apply a lookup table to the YUV input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskedclamp",
      "label": "Clamp first stream with second stream and third stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskedmax",
      "label": "Apply filtering with maximum difference of two streams.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskedmerge",
      "label": "Merge first stream with second stream using third stream as mask.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskedmin",
      "label": "Apply filtering with minimum difference of two streams.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskedthreshold",
      "label": "Pick pixels comparing absolute difference of two streams with threshold.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "maskfun",
      "label": "Create Mask.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "mcdeint",
      "label": "Apply motion compensating deinterlacing.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "median",
      "label": "Apply Median filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "mergeplanes",
      "label": "Merge planes.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "mestimate",
      "label": "Generate motion vectors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "metadata",
      "label": "Manipulate video frame metadata.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "midequalizer",
      "label": "Apply Midway Equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "minterpolate",
      "label": "Frame rate conversion using Motion Interpolation.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "mix",
      "label": "Mix video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "monochrome",
      "label": "Convert video to gray using custom color filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "mpdecimate",
      "label": "Remove near-duplicate frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "msad",
      "label": "Calculate the MSAD between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "negate",
      "label": "Negate input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "nlmeans",
      "label": "Non-local means denoiser.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "nlmeans_opencl",
      "label": "Non-local means denoiser through OpenCL",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "nnedi",
      "label": "Apply neural network edge directed interpolation intra-only deinterlacer.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "noformat",
      "label": "Force libavfilter not to use any of the specified pixel formats for the input to the next filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "noise",
      "label": "Add noise.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "normalize",
      "label": "Normalize RGB video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "null",
      "label": "Pass the source unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "oscilloscope",
      "label": "2D Video Oscilloscope.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "overlay",
      "label": "Overlay a video source on top of the input.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "overlay_opencl",
      "label": "Overlay one video on top of another",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "overlay_qsv",
      "label": "Quick Sync Video overlay.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "overlay_cuda",
      "label": "Overlay one video on top of another using CUDA",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "owdenoise",
      "label": "Denoise using wavelets.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pad",
      "label": "Pad the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pad_opencl",
      "label": "Pad the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "palettegen",
      "label": "Find the optimal palette for a given stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "paletteuse",
      "label": "Use a palette to downsample an input video stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "perms",
      "label": "Set permissions for the output video frame.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "perspective",
      "label": "Correct the perspective of video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "phase",
      "label": "Phase shift fields.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "photosensitivity",
      "label": "Filter out photosensitive epilepsy seizure-inducing flashes.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pixdesctest",
      "label": "Test pixel format definitions.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pixscope",
      "label": "Pixel data analysis.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pp",
      "label": "Filter video using libpostproc.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pp7",
      "label": "Apply Postprocessing 7 filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "premultiply",
      "label": "PreMultiply first stream with first plane of second stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "prewitt",
      "label": "Apply prewitt operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "prewitt_opencl",
      "label": "Apply prewitt operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "procamp_vaapi",
      "label": "ProcAmp (color balance) adjustments for hue, saturation, brightness, contrast",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "program_opencl",
      "label": "Filter video using an OpenCL program",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "pseudocolor",
      "label": "Make pseudocolored video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "psnr",
      "label": "Calculate the PSNR between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "pullup",
      "label": "Pullup from field sequence to frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "qp",
      "label": "Change video quantization parameters.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "random",
      "label": "Return random frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "readeia608",
      "label": "Read EIA-608 Closed Caption codes from input video and write them to frame metadata.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "readvitc",
      "label": "Read vertical interval timecode and write it to frame metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "realtime",
      "label": "Slow down filtering to match realtime.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "remap",
      "label": "Remap pixels.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "removegrain",
      "label": "Remove grain.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "removelogo",
      "label": "Remove a TV logo based on a mask image.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "repeatfields",
      "label": "Hard repeat fields based on MPEG repeat field flag.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "reverse",
      "label": "Reverse a clip.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "rgbashift",
      "label": "Shift RGBA.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "roberts",
      "label": "Apply roberts cross operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "roberts_opencl",
      "label": "Apply roberts operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "rotate",
      "label": "Rotate the input image.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sab",
      "label": "Apply shape adaptive blur.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scale",
      "label": "Scale the input video size and/or convert the image format.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scale_cuda",
      "label": "GPU accelerated video resizer",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scale_qsv",
      "label": "QuickSync video scaling and format conversion",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scale_vaapi",
      "label": "Scale to/from VAAPI surfaces.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scale2ref",
      "label": "Scale the input video size and/or convert the image format to the given reference.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video",
        "video"
      ]
    },
    {
      "id": "scdet",
      "label": "Detect video scene change",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "scroll",
      "label": "Scroll input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "select",
      "label": "Select video frames to pass in output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "selectivecolor",
      "label": "Apply CMYK adjustments to specific color ranges.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sendcmd",
      "label": "Send commands to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "separatefields",
      "label": "Split input video frames into fields.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setdar",
      "label": "Set the frame display aspect ratio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setfield",
      "label": "Force field for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setparams",
      "label": "Force field, or color property for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setpts",
      "label": "Set PTS for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setrange",
      "label": "Force color range for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "setsar",
      "label": "Set the pixel sample aspect ratio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "settb",
      "label": "Set timebase for the video output link.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sharpness_vaapi",
      "label": "VAAPI VPP for sharpness",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "shear",
      "label": "Shear transform the input image.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showinfo",
      "label": "Show textual information for each video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showpalette",
      "label": "Display frame palette.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "shuffleframes",
      "label": "Shuffle video frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "shufflepixels",
      "label": "Shuffle video pixels.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "shuffleplanes",
      "label": "Shuffle video planes.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sidedata",
      "label": "Manipulate video frame side data.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "signalstats",
      "label": "Generate statistics from video analysis.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "signature",
      "label": "Calculate the MPEG-7 video signature",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "smartblur",
      "label": "Blur the input video without impacting the outlines.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sobel",
      "label": "Apply sobel operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sobel_opencl",
      "label": "Apply sobel operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "split",
      "label": "Pass on the input to N video outputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "spp",
      "label": "Apply a simple post processing filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "sr",
      "label": "Apply DNN-based image super resolution to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "ssim",
      "label": "Calculate the SSIM between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "stereo3d",
      "label": "Convert video stereoscopic 3D view.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "streamselect",
      "label": "Select video streams",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "subtitles",
      "label": "Render text subtitles onto input video using the libass library.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "super2xsai",
      "label": "Scale the input by 2x using the Super2xSaI pixel art algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "swaprect",
      "label": "Swap 2 rectangular objects in video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "swapuv",
      "label": "Swap U and V components.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tblend",
      "label": "Blend successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "telecine",
      "label": "Apply a telecine pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "thistogram",
      "label": "Compute and draw a temporal histogram.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "threshold",
      "label": "Threshold first video stream using other video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video",
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "thumbnail",
      "label": "Select the most representative frame in a given sequence of consecutive frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "thumbnail_cuda",
      "label": "Select the most representative frame in a given sequence of consecutive frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tile",
      "label": "Tile several successive frames together.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tinterlace",
      "label": "Perform temporal field interlacing.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tlut2",
      "label": "Compute and apply a lookup table from two successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tmedian",
      "label": "Pick median pixels from successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tmidequalizer",
      "label": "Apply Temporal Midway Equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tmix",
      "label": "Mix successive video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tonemap",
      "label": "Conversion to/from different dynamic ranges.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tonemap_opencl",
      "label": "Perform HDR to SDR conversion with tonemapping.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tonemap_vaapi",
      "label": "VAAPI VPP for tone-mapping",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "tpad",
      "label": "Temporarily pad video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "transpose",
      "label": "Transpose input video.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "transpose_opencl",
      "label": "Transpose input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "transpose_vaapi",
      "label": "VAAPI VPP for transpose",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "trim",
      "label": "Pick one continuous section from the input, drop the rest.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "unpremultiply",
      "label": "UnPreMultiply first stream with first plane of second stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "unsharp",
      "label": "Sharpen or blur the input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "unsharp_opencl",
      "label": "Apply unsharp mask to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "untile",
      "label": "Untile a frame into a sequence of frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "uspp",
      "label": "Apply Ultra Simple / Slow Post-processing filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "v360",
      "label": "Convert 360 projection of video.",
      "timeline": false,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vaguedenoiser",
      "label": "Apply a Wavelet based Denoiser.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vectorscope",
      "label": "Video vectorscope.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vflip",
      "label": "Flip the input video vertically.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vfrdet",
      "label": "Variable frame rate detect filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vibrance",
      "label": "Boost or alter saturation.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vidstabdetect",
      "label": "Extract relative transformations, pass 1 of 2 for stabilization (see vidstabtransform for pass 2).",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vidstabtransform",
      "label": "Transform the frames, pass 2 of 2 for stabilization (see vidstabdetect for pass 1).",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vif",
      "label": "Calculate the VIF between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vignette",
      "label": "Make or reverse a vignette effect.",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vmafmotion",
      "label": "Calculate the VMAF Motion score.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vpp_qsv",
      "label": "Quick Sync Video VPP.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "vstack",
      "label": "Stack video inputs vertically.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "w3fdif",
      "label": "Apply Martin Weston three field deinterlace.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "waveform",
      "label": "Video waveform monitor.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "weave",
      "label": "Weave input video fields into frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "xbr",
      "label": "Scale the input using xBR algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "xfade",
      "label": "Cross fade one video with another video.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "xfade_opencl",
      "label": "Cross fade one video with another video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "xmedian",
      "label": "Pick median pixels from several video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "xstack",
      "label": "Stack video inputs into custom layout.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "dynamic"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "yadif",
      "label": "Deinterlace the input image.",
      "timeline": true,
      "slice": true,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "yadif_cuda",
      "label": "Deinterlace CUDA frames",
      "timeline": true,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "yaepblur",
      "label": "Yet another edge preserving blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "zmq",
      "label": "Receive commands through ZMQ and broker them to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "zoompan",
      "label": "Apply Zoom & Pan effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "zscale",
      "label": "Apply resizing, colorspace and bit depth conversion.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "allrgb",
      "label": "Generate all RGB colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "allyuv",
      "label": "Generate all yuv colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "cellauto",
      "label": "Create pattern generated by an elementary cellular automaton.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "color",
      "label": "Provide an uniformly colored input.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "frei0r_src",
      "label": "Generate a frei0r source.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "gradients",
      "label": "Draw a gradients.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "haldclutsrc",
      "label": "Provide an identity Hald CLUT.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "life",
      "label": "Create life.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "mandelbrot",
      "label": "Render a Mandelbrot fractal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "mptestsrc",
      "label": "Generate various test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "nullsrc",
      "label": "Null video source, return unprocessed video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "openclsrc",
      "label": "Generate video using an OpenCL program",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "pal75bars",
      "label": "Generate PAL 75% color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "pal100bars",
      "label": "Generate PAL 100% color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "rgbtestsrc",
      "label": "Generate RGB test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "sierpinski",
      "label": "Render a Sierpinski fractal.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "smptebars",
      "label": "Generate SMPTE color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "smptehdbars",
      "label": "Generate SMPTE HD color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "testsrc",
      "label": "Generate test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "testsrc2",
      "label": "Generate another test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "yuvtestsrc",
      "label": "Generate YUV test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "nullsink",
      "label": "Do absolutely nothing with the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": []
    },
    {
      "id": "abitscope",
      "label": "Convert input audio to audio bit scope video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "adrawgraph",
      "label": "Draw a graph using input audio metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "agraphmonitor",
      "label": "Show various filtergraph stats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "ahistogram",
      "label": "Convert input audio to histogram video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "aphasemeter",
      "label": "Convert input audio to phase meter video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "avectorscope",
      "label": "Convert input audio to vectorscope video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "concat",
      "label": "Concatenate audio and video streams.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [
        "dynamic"
      ],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "showcqt",
      "label": "Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showfreqs",
      "label": "Convert input audio to a frequencies video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showspatial",
      "label": "Convert input audio to a spatial video output.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showspectrum",
      "label": "Convert input audio to a spectrum video output.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showspectrumpic",
      "label": "Convert input audio to a spectrum video output single picture.",
      "timeline": false,
      "slice": true,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showvolume",
      "label": "Convert input audio volume to video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showwaves",
      "label": "Convert input audio to a video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "showwavespic",
      "label": "Convert input audio to a video output single picture.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "spectrumsynth",
      "label": "Convert input spectrum videos to audio output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video",
        "video"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "amovie",
      "label": "Read audio from a movie source.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "movie",
      "label": "Read from a movie source.",
      "timeline": false,
      "slice": false,
      "command": true,
      "input": [],
      "output": [
        "dynamic"
      ]
    },
    {
      "id": "afifo",
      "label": "Buffer input frames and send them when they are requested.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": [
        "audio"
      ]
    },
    {
      "id": "fifo",
      "label": "Buffer input images and send them when they are requested.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": [
        "video"
      ]
    },
    {
      "id": "abuffer",
      "label": "Buffer audio frames, and make them accessible to the filterchain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "audio"
      ]
    },
    {
      "id": "buffer",
      "label": "Buffer video frames, and make them accessible to the filterchain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [],
      "output": [
        "video"
      ]
    },
    {
      "id": "abuffersink",
      "label": "Buffer audio frames, and make them available to the end of the filter graph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "audio"
      ],
      "output": []
    },
    {
      "id": "buffersink",
      "label": "Buffer video frames, and make them available to the end of the filter graph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "input": [
        "video"
      ],
      "output": []
    }
  ],
  "formats": [
    {
      "id": "3dostr",
      "label": "3DO STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "3g2",
      "label": "3GP2 (3GPP2 file format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "3gp",
      "label": "3GP (3GPP file format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "4xm",
      "label": "4X Technologies",
      "demux": true,
      "mux": false
    },
    {
      "id": "a64",
      "label": "a64 - video for Commodore 64",
      "demux": false,
      "mux": true
    },
    {
      "id": "aa",
      "label": "Audible AA format files",
      "demux": true,
      "mux": false
    },
    {
      "id": "aac",
      "label": "raw ADTS AAC (Advanced Audio Coding)",
      "demux": true,
      "mux": false
    },
    {
      "id": "aax",
      "label": "CRI AAX",
      "demux": true,
      "mux": false
    },
    {
      "id": "ac3",
      "label": "raw AC-3",
      "demux": true,
      "mux": true
    },
    {
      "id": "ace",
      "label": "tri-Ace Audio Container",
      "demux": true,
      "mux": false
    },
    {
      "id": "acm",
      "label": "Interplay ACM",
      "demux": true,
      "mux": false
    },
    {
      "id": "act",
      "label": "ACT Voice file format",
      "demux": true,
      "mux": false
    },
    {
      "id": "adf",
      "label": "Artworx Data Format",
      "demux": true,
      "mux": false
    },
    {
      "id": "adp",
      "label": "ADP",
      "demux": true,
      "mux": false
    },
    {
      "id": "ads",
      "label": "Sony PS2 ADS",
      "demux": true,
      "mux": false
    },
    {
      "id": "adts",
      "label": "ADTS AAC (Advanced Audio Coding)",
      "demux": false,
      "mux": true
    },
    {
      "id": "adx",
      "label": "CRI ADX",
      "demux": true,
      "mux": true
    },
    {
      "id": "aea",
      "label": "MD STUDIO audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "afc",
      "label": "AFC",
      "demux": true,
      "mux": false
    },
    {
      "id": "aiff",
      "label": "Audio IFF",
      "demux": true,
      "mux": true
    },
    {
      "id": "aix",
      "label": "CRI AIX",
      "demux": true,
      "mux": false
    },
    {
      "id": "alaw",
      "label": "PCM A-law",
      "demux": true,
      "mux": true
    },
    {
      "id": "alias_pix",
      "label": "Alias/Wavefront PIX image",
      "demux": true,
      "mux": false
    },
    {
      "id": "alp",
      "label": "LEGO Racers ALP",
      "demux": true,
      "mux": true
    },
    {
      "id": "alsa",
      "label": "ALSA audio output",
      "demux": true,
      "mux": true
    },
    {
      "id": "amr",
      "label": "3GPP AMR",
      "demux": true,
      "mux": true
    },
    {
      "id": "amrnb",
      "label": "raw AMR-NB",
      "demux": true,
      "mux": false
    },
    {
      "id": "amrwb",
      "label": "raw AMR-WB",
      "demux": true,
      "mux": false
    },
    {
      "id": "amv",
      "label": "AMV",
      "demux": false,
      "mux": true
    },
    {
      "id": "anm",
      "label": "Deluxe Paint Animation",
      "demux": true,
      "mux": false
    },
    {
      "id": "apc",
      "label": "CRYO APC",
      "demux": true,
      "mux": false
    },
    {
      "id": "ape",
      "label": "Monkey's Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "apm",
      "label": "Ubisoft Rayman 2 APM",
      "demux": true,
      "mux": true
    },
    {
      "id": "apng",
      "label": "Animated Portable Network Graphics",
      "demux": true,
      "mux": true
    },
    {
      "id": "aptx",
      "label": "raw aptX (Audio Processing Technology for Bluetooth)",
      "demux": true,
      "mux": true
    },
    {
      "id": "aptx_hd",
      "label": "raw aptX HD (Audio Processing Technology for Bluetooth)",
      "demux": true,
      "mux": true
    },
    {
      "id": "aqtitle",
      "label": "AQTitle subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "argo_asf",
      "label": "Argonaut Games ASF",
      "demux": true,
      "mux": true
    },
    {
      "id": "argo_brp",
      "label": "Argonaut Games BRP",
      "demux": true,
      "mux": false
    },
    {
      "id": "asf",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "asf_o",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "asf_stream",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "ass",
      "label": "SSA (SubStation Alpha) subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "ast",
      "label": "AST (Audio Stream)",
      "demux": true,
      "mux": true
    },
    {
      "id": "au",
      "label": "Sun AU",
      "demux": true,
      "mux": true
    },
    {
      "id": "av1",
      "label": "AV1 Annex B",
      "demux": true,
      "mux": false
    },
    {
      "id": "avi",
      "label": "AVI (Audio Video Interleaved)",
      "demux": true,
      "mux": true
    },
    {
      "id": "avm2",
      "label": "SWF (ShockWave Flash) (AVM2)",
      "demux": false,
      "mux": true
    },
    {
      "id": "avr",
      "label": "AVR (Audio Visual Research)",
      "demux": true,
      "mux": false
    },
    {
      "id": "avs",
      "label": "Argonaut Games Creature Shock",
      "demux": true,
      "mux": false
    },
    {
      "id": "avs2",
      "label": "raw AVS2-P2/IEEE1857.4 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "avs3",
      "label": "raw AVS3-P2/IEEE1857.10",
      "demux": true,
      "mux": false
    },
    {
      "id": "bethsoftvid",
      "label": "Bethesda Softworks VID",
      "demux": true,
      "mux": false
    },
    {
      "id": "bfi",
      "label": "Brute Force & Ignorance",
      "demux": true,
      "mux": false
    },
    {
      "id": "bfstm",
      "label": "BFSTM (Binary Cafe Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "bin",
      "label": "Binary text",
      "demux": true,
      "mux": false
    },
    {
      "id": "bink",
      "label": "Bink",
      "demux": true,
      "mux": false
    },
    {
      "id": "binka",
      "label": "Bink Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "bit",
      "label": "G.729 BIT file format",
      "demux": true,
      "mux": true
    },
    {
      "id": "bmp_pipe",
      "label": "piped bmp sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "bmv",
      "label": "Discworld II BMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "boa",
      "label": "Black Ops Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "brender_pix",
      "label": "BRender PIX image",
      "demux": true,
      "mux": false
    },
    {
      "id": "brstm",
      "label": "BRSTM (Binary Revolution Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "c93",
      "label": "Interplay C93",
      "demux": true,
      "mux": false
    },
    {
      "id": "caca",
      "label": "caca (color ASCII art) output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "caf",
      "label": "Apple CAF (Core Audio Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "cavsvideo",
      "label": "raw Chinese AVS (Audio Video Standard) video",
      "demux": true,
      "mux": true
    },
    {
      "id": "cdg",
      "label": "CD Graphics",
      "demux": true,
      "mux": false
    },
    {
      "id": "cdxl",
      "label": "Commodore CDXL video",
      "demux": true,
      "mux": false
    },
    {
      "id": "chromaprint",
      "label": "Chromaprint",
      "demux": false,
      "mux": true
    },
    {
      "id": "cine",
      "label": "Phantom Cine",
      "demux": true,
      "mux": false
    },
    {
      "id": "codec2",
      "label": "codec2 .c2 muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "codec2raw",
      "label": "raw codec2 muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "concat",
      "label": "Virtual concatenation script",
      "demux": true,
      "mux": false
    },
    {
      "id": "crc",
      "label": "CRC testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "cri_pipe",
      "label": "piped cri sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "dash",
      "label": "DASH Muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "data",
      "label": "raw data",
      "demux": true,
      "mux": true
    },
    {
      "id": "daud",
      "label": "D-Cinema audio",
      "demux": true,
      "mux": true
    },
    {
      "id": "dcstr",
      "label": "Sega DC STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "dds_pipe",
      "label": "piped dds sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "derf",
      "label": "Xilam DERF",
      "demux": true,
      "mux": false
    },
    {
      "id": "dfa",
      "label": "Chronomaster DFA",
      "demux": true,
      "mux": false
    },
    {
      "id": "dhav",
      "label": "Video DAV",
      "demux": true,
      "mux": false
    },
    {
      "id": "dirac",
      "label": "raw Dirac",
      "demux": true,
      "mux": true
    },
    {
      "id": "dnxhd",
      "label": "raw DNxHD (SMPTE VC-3)",
      "demux": true,
      "mux": true
    },
    {
      "id": "dpx_pipe",
      "label": "piped dpx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "dsf",
      "label": "DSD Stream File (DSF)",
      "demux": true,
      "mux": false
    },
    {
      "id": "dsicin",
      "label": "Delphine Software International CIN",
      "demux": true,
      "mux": false
    },
    {
      "id": "dss",
      "label": "Digital Speech Standard (DSS)",
      "demux": true,
      "mux": false
    },
    {
      "id": "dts",
      "label": "raw DTS",
      "demux": true,
      "mux": true
    },
    {
      "id": "dtshd",
      "label": "raw DTS-HD",
      "demux": true,
      "mux": false
    },
    {
      "id": "dv",
      "label": "DV (Digital Video)",
      "demux": true,
      "mux": true
    },
    {
      "id": "dvbsub",
      "label": "raw dvbsub",
      "demux": true,
      "mux": false
    },
    {
      "id": "dvbtxt",
      "label": "dvbtxt",
      "demux": true,
      "mux": false
    },
    {
      "id": "dvd",
      "label": "MPEG-2 PS (DVD VOB)",
      "demux": false,
      "mux": true
    },
    {
      "id": "dxa",
      "label": "DXA",
      "demux": true,
      "mux": false
    },
    {
      "id": "ea",
      "label": "Electronic Arts Multimedia",
      "demux": true,
      "mux": false
    },
    {
      "id": "ea_cdata",
      "label": "Electronic Arts cdata",
      "demux": true,
      "mux": false
    },
    {
      "id": "eac3",
      "label": "raw E-AC-3",
      "demux": true,
      "mux": true
    },
    {
      "id": "epaf",
      "label": "Ensoniq Paris Audio File",
      "demux": true,
      "mux": false
    },
    {
      "id": "exr_pipe",
      "label": "piped exr sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "f32be",
      "label": "PCM 32-bit floating-point big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f32le",
      "label": "PCM 32-bit floating-point little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f4v",
      "label": "F4V Adobe Flash Video",
      "demux": false,
      "mux": true
    },
    {
      "id": "f64be",
      "label": "PCM 64-bit floating-point big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f64le",
      "label": "PCM 64-bit floating-point little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "fbdev",
      "label": "Linux framebuffer",
      "demux": true,
      "mux": true
    },
    {
      "id": "ffmetadata",
      "label": "FFmpeg metadata in text",
      "demux": true,
      "mux": true
    },
    {
      "id": "fifo",
      "label": "FIFO queue pseudo-muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "fifo_test",
      "label": "Fifo test muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "film_cpk",
      "label": "Sega FILM / CPK",
      "demux": true,
      "mux": true
    },
    {
      "id": "filmstrip",
      "label": "Adobe Filmstrip",
      "demux": true,
      "mux": true
    },
    {
      "id": "fits",
      "label": "Flexible Image Transport System",
      "demux": true,
      "mux": true
    },
    {
      "id": "flac",
      "label": "raw FLAC",
      "demux": true,
      "mux": true
    },
    {
      "id": "flic",
      "label": "FLI/FLC/FLX animation",
      "demux": true,
      "mux": false
    },
    {
      "id": "flv",
      "label": "FLV (Flash Video)",
      "demux": true,
      "mux": true
    },
    {
      "id": "framecrc",
      "label": "framecrc testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "framehash",
      "label": "Per-frame hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "framemd5",
      "label": "Per-frame MD5 testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "frm",
      "label": "Megalux Frame",
      "demux": true,
      "mux": false
    },
    {
      "id": "fsb",
      "label": "FMOD Sample Bank",
      "demux": true,
      "mux": false
    },
    {
      "id": "fwse",
      "label": "Capcom's MT Framework sound",
      "demux": true,
      "mux": false
    },
    {
      "id": "g722",
      "label": "raw G.722",
      "demux": true,
      "mux": true
    },
    {
      "id": "g723_1",
      "label": "raw G.723.1",
      "demux": true,
      "mux": true
    },
    {
      "id": "g726",
      "label": "raw big-endian G.726 (\"left-justified\")",
      "demux": true,
      "mux": true
    },
    {
      "id": "g726le",
      "label": "raw little-endian G.726 (\"right-justified\")",
      "demux": true,
      "mux": true
    },
    {
      "id": "g729",
      "label": "G.729 raw format demuxer",
      "demux": true,
      "mux": false
    },
    {
      "id": "gdv",
      "label": "Gremlin Digital Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "genh",
      "label": "GENeric Header",
      "demux": true,
      "mux": false
    },
    {
      "id": "gif",
      "label": "CompuServe Graphics Interchange Format (GIF)",
      "demux": true,
      "mux": true
    },
    {
      "id": "gif_pipe",
      "label": "piped gif sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "gsm",
      "label": "raw GSM",
      "demux": true,
      "mux": true
    },
    {
      "id": "gxf",
      "label": "GXF (General eXchange Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "h261",
      "label": "raw H.261",
      "demux": true,
      "mux": true
    },
    {
      "id": "h263",
      "label": "raw H.263",
      "demux": true,
      "mux": true
    },
    {
      "id": "h264",
      "label": "raw H.264 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "hash",
      "label": "Hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "hca",
      "label": "CRI HCA",
      "demux": true,
      "mux": false
    },
    {
      "id": "hcom",
      "label": "Macintosh HCOM",
      "demux": true,
      "mux": false
    },
    {
      "id": "hds",
      "label": "HDS Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "hevc",
      "label": "raw HEVC video",
      "demux": true,
      "mux": true
    },
    {
      "id": "hls",
      "label": "Apple HTTP Live Streaming",
      "demux": true,
      "mux": true
    },
    {
      "id": "hnm",
      "label": "Cryo HNM v4",
      "demux": true,
      "mux": false
    },
    {
      "id": "ico",
      "label": "Microsoft Windows ICO",
      "demux": true,
      "mux": true
    },
    {
      "id": "idcin",
      "label": "id Cinematic",
      "demux": true,
      "mux": false
    },
    {
      "id": "idf",
      "label": "iCE Draw File",
      "demux": true,
      "mux": false
    },
    {
      "id": "iec61883",
      "label": "libiec61883 (new DV1394) A/V input device",
      "demux": true,
      "mux": false
    },
    {
      "id": "iff",
      "label": "IFF (Interchange File Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "ifv",
      "label": "IFV CCTV DVR",
      "demux": true,
      "mux": false
    },
    {
      "id": "ilbc",
      "label": "iLBC storage",
      "demux": true,
      "mux": true
    },
    {
      "id": "image2",
      "label": "image2 sequence",
      "demux": true,
      "mux": true
    },
    {
      "id": "image2pipe",
      "label": "piped image2 sequence",
      "demux": true,
      "mux": true
    },
    {
      "id": "ingenient",
      "label": "raw Ingenient MJPEG",
      "demux": true,
      "mux": false
    },
    {
      "id": "ipmovie",
      "label": "Interplay MVE",
      "demux": true,
      "mux": false
    },
    {
      "id": "ipod",
      "label": "iPod H.264 MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "ipu",
      "label": "raw IPU Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "ircam",
      "label": "Berkeley/IRCAM/CARL Sound Format",
      "demux": true,
      "mux": true
    },
    {
      "id": "ismv",
      "label": "ISMV/ISMA (Smooth Streaming)",
      "demux": false,
      "mux": true
    },
    {
      "id": "iss",
      "label": "Funcom ISS",
      "demux": true,
      "mux": false
    },
    {
      "id": "iv8",
      "label": "IndigoVision 8000 video",
      "demux": true,
      "mux": false
    },
    {
      "id": "ivf",
      "label": "On2 IVF",
      "demux": true,
      "mux": true
    },
    {
      "id": "ivr",
      "label": "IVR (Internet Video Recording)",
      "demux": true,
      "mux": false
    },
    {
      "id": "j2k_pipe",
      "label": "piped j2k sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jack",
      "label": "JACK Audio Connection Kit",
      "demux": true,
      "mux": false
    },
    {
      "id": "jacosub",
      "label": "JACOsub subtitle format",
      "demux": true,
      "mux": true
    },
    {
      "id": "jpeg_pipe",
      "label": "piped jpeg sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jpegls_pipe",
      "label": "piped jpegls sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jv",
      "label": "Bitmap Brothers JV",
      "demux": true,
      "mux": false
    },
    {
      "id": "kmsgrab",
      "label": "KMS screen capture",
      "demux": true,
      "mux": false
    },
    {
      "id": "kux",
      "label": "KUX (YouKu)",
      "demux": true,
      "mux": false
    },
    {
      "id": "kvag",
      "label": "Simon & Schuster Interactive VAG",
      "demux": true,
      "mux": true
    },
    {
      "id": "latm",
      "label": "LOAS/LATM",
      "demux": false,
      "mux": true
    },
    {
      "id": "lavfi",
      "label": "Libavfilter virtual input device",
      "demux": true,
      "mux": false
    },
    {
      "id": "libcdio",
      "label": "",
      "demux": true,
      "mux": false
    },
    {
      "id": "libdc1394",
      "label": "dc1394 v.2 A/V grab",
      "demux": true,
      "mux": false
    },
    {
      "id": "libgme",
      "label": "Game Music Emu demuxer",
      "demux": true,
      "mux": false
    },
    {
      "id": "libopenmpt",
      "label": "Tracker formats (libopenmpt)",
      "demux": true,
      "mux": false
    },
    {
      "id": "live_flv",
      "label": "live RTMP FLV (Flash Video)",
      "demux": true,
      "mux": false
    },
    {
      "id": "lmlm4",
      "label": "raw lmlm4",
      "demux": true,
      "mux": false
    },
    {
      "id": "loas",
      "label": "LOAS AudioSyncStream",
      "demux": true,
      "mux": false
    },
    {
      "id": "lrc",
      "label": "LRC lyrics",
      "demux": true,
      "mux": true
    },
    {
      "id": "luodat",
      "label": "Video CCTV DAT",
      "demux": true,
      "mux": false
    },
    {
      "id": "lvf",
      "label": "LVF",
      "demux": true,
      "mux": false
    },
    {
      "id": "lxf",
      "label": "VR native stream (LXF)",
      "demux": true,
      "mux": false
    },
    {
      "id": "m4v",
      "label": "raw MPEG-4 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "matroska",
      "label": "Matroska",
      "demux": false,
      "mux": true
    },
    {
      "id": "matroska,webm",
      "label": "Matroska / WebM",
      "demux": true,
      "mux": false
    },
    {
      "id": "mca",
      "label": "MCA Audio Format",
      "demux": true,
      "mux": false
    },
    {
      "id": "mcc",
      "label": "MacCaption",
      "demux": true,
      "mux": false
    },
    {
      "id": "md5",
      "label": "MD5 testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "mgsts",
      "label": "Metal Gear Solid: The Twin Snakes",
      "demux": true,
      "mux": false
    },
    {
      "id": "microdvd",
      "label": "MicroDVD subtitle format",
      "demux": true,
      "mux": true
    },
    {
      "id": "mjpeg",
      "label": "raw MJPEG video",
      "demux": true,
      "mux": true
    },
    {
      "id": "mjpeg_2000",
      "label": "raw MJPEG 2000 video",
      "demux": true,
      "mux": false
    },
    {
      "id": "mkvtimestamp_v2",
      "label": "extract pts as timecode v2 format, as defined by mkvtoolnix",
      "demux": false,
      "mux": true
    },
    {
      "id": "mlp",
      "label": "raw MLP",
      "demux": true,
      "mux": true
    },
    {
      "id": "mlv",
      "label": "Magic Lantern Video (MLV)",
      "demux": true,
      "mux": false
    },
    {
      "id": "mm",
      "label": "American Laser Games MM",
      "demux": true,
      "mux": false
    },
    {
      "id": "mmf",
      "label": "Yamaha SMAF",
      "demux": true,
      "mux": true
    },
    {
      "id": "mods",
      "label": "MobiClip MODS",
      "demux": true,
      "mux": false
    },
    {
      "id": "moflex",
      "label": "MobiClip MOFLEX",
      "demux": true,
      "mux": false
    },
    {
      "id": "mov",
      "label": "QuickTime / MOV",
      "demux": false,
      "mux": true
    },
    {
      "id": "mov,mp4,m4a,3gp,3g2,mj2",
      "label": "QuickTime / MOV",
      "demux": true,
      "mux": false
    },
    {
      "id": "mp2",
      "label": "MP2 (MPEG audio layer 2)",
      "demux": false,
      "mux": true
    },
    {
      "id": "mp3",
      "label": "MP3 (MPEG audio layer 3)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mp4",
      "label": "MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpc",
      "label": "Musepack",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpc8",
      "label": "Musepack SV8",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpeg",
      "label": "MPEG-1 Systems / MPEG program stream",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpeg1video",
      "label": "raw MPEG-1 video",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpeg2video",
      "label": "raw MPEG-2 video",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpegts",
      "label": "MPEG-TS (MPEG-2 Transport Stream)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpegtsraw",
      "label": "raw MPEG-TS (MPEG-2 Transport Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpegvideo",
      "label": "raw MPEG video",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpjpeg",
      "label": "MIME multipart JPEG",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpl2",
      "label": "MPL2 subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpsub",
      "label": "MPlayer subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "msf",
      "label": "Sony PS3 MSF",
      "demux": true,
      "mux": false
    },
    {
      "id": "msnwctcp",
      "label": "MSN TCP Webcam stream",
      "demux": true,
      "mux": false
    },
    {
      "id": "msp",
      "label": "Microsoft Paint (MSP))",
      "demux": true,
      "mux": false
    },
    {
      "id": "mtaf",
      "label": "Konami PS2 MTAF",
      "demux": true,
      "mux": false
    },
    {
      "id": "mtv",
      "label": "MTV",
      "demux": true,
      "mux": false
    },
    {
      "id": "mulaw",
      "label": "PCM mu-law",
      "demux": true,
      "mux": true
    },
    {
      "id": "musx",
      "label": "Eurocom MUSX",
      "demux": true,
      "mux": false
    },
    {
      "id": "mv",
      "label": "Silicon Graphics Movie",
      "demux": true,
      "mux": false
    },
    {
      "id": "mvi",
      "label": "Motion Pixels MVI",
      "demux": true,
      "mux": false
    },
    {
      "id": "mxf",
      "label": "MXF (Material eXchange Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mxf_d10",
      "label": "MXF (Material eXchange Format) D-10 Mapping",
      "demux": false,
      "mux": true
    },
    {
      "id": "mxf_opatom",
      "label": "MXF (Material eXchange Format) Operational Pattern Atom",
      "demux": false,
      "mux": true
    },
    {
      "id": "mxg",
      "label": "MxPEG clip",
      "demux": true,
      "mux": false
    },
    {
      "id": "nc",
      "label": "NC camera feed",
      "demux": true,
      "mux": false
    },
    {
      "id": "nistsphere",
      "label": "NIST SPeech HEader REsources",
      "demux": true,
      "mux": false
    },
    {
      "id": "nsp",
      "label": "Computerized Speech Lab NSP",
      "demux": true,
      "mux": false
    },
    {
      "id": "nsv",
      "label": "Nullsoft Streaming Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "null",
      "label": "raw null video",
      "demux": false,
      "mux": true
    },
    {
      "id": "nut",
      "label": "NUT",
      "demux": true,
      "mux": true
    },
    {
      "id": "nuv",
      "label": "NuppelVideo",
      "demux": true,
      "mux": false
    },
    {
      "id": "obu",
      "label": "AV1 low overhead OBU",
      "demux": true,
      "mux": false
    },
    {
      "id": "oga",
      "label": "Ogg Audio",
      "demux": false,
      "mux": true
    },
    {
      "id": "ogg",
      "label": "Ogg",
      "demux": true,
      "mux": true
    },
    {
      "id": "ogv",
      "label": "Ogg Video",
      "demux": false,
      "mux": true
    },
    {
      "id": "oma",
      "label": "Sony OpenMG audio",
      "demux": true,
      "mux": true
    },
    {
      "id": "openal",
      "label": "OpenAL audio capture device",
      "demux": true,
      "mux": false
    },
    {
      "id": "opengl",
      "label": "OpenGL output",
      "demux": false,
      "mux": true
    },
    {
      "id": "opus",
      "label": "Ogg Opus",
      "demux": false,
      "mux": true
    },
    {
      "id": "oss",
      "label": "OSS (Open Sound System) playback",
      "demux": true,
      "mux": true
    },
    {
      "id": "paf",
      "label": "Amazing Studio Packed Animation File",
      "demux": true,
      "mux": false
    },
    {
      "id": "pam_pipe",
      "label": "piped pam sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pbm_pipe",
      "label": "piped pbm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pcx_pipe",
      "label": "piped pcx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgm_pipe",
      "label": "piped pgm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgmyuv_pipe",
      "label": "piped pgmyuv sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgx_pipe",
      "label": "piped pgx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "photocd_pipe",
      "label": "piped photocd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pictor_pipe",
      "label": "piped pictor sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pjs",
      "label": "PJS (Phoenix Japanimation Society) subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "pmp",
      "label": "Playstation Portable PMP",
      "demux": true,
      "mux": false
    },
    {
      "id": "png_pipe",
      "label": "piped png sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pp_bnk",
      "label": "Pro Pinball Series Soundbank",
      "demux": true,
      "mux": false
    },
    {
      "id": "ppm_pipe",
      "label": "piped ppm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "psd_pipe",
      "label": "piped psd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "psp",
      "label": "PSP MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "psxstr",
      "label": "Sony Playstation STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "pulse",
      "label": "Pulse audio output",
      "demux": true,
      "mux": true
    },
    {
      "id": "pva",
      "label": "TechnoTrend PVA",
      "demux": true,
      "mux": false
    },
    {
      "id": "pvf",
      "label": "PVF (Portable Voice Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "qcp",
      "label": "QCP",
      "demux": true,
      "mux": false
    },
    {
      "id": "qdraw_pipe",
      "label": "piped qdraw sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "r3d",
      "label": "REDCODE R3D",
      "demux": true,
      "mux": false
    },
    {
      "id": "rawvideo",
      "label": "raw video",
      "demux": true,
      "mux": true
    },
    {
      "id": "realtext",
      "label": "RealText subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "redspark",
      "label": "RedSpark",
      "demux": true,
      "mux": false
    },
    {
      "id": "rl2",
      "label": "RL2",
      "demux": true,
      "mux": false
    },
    {
      "id": "rm",
      "label": "RealMedia",
      "demux": true,
      "mux": true
    },
    {
      "id": "roq",
      "label": "raw id RoQ",
      "demux": true,
      "mux": true
    },
    {
      "id": "rpl",
      "label": "RPL / ARMovie",
      "demux": true,
      "mux": false
    },
    {
      "id": "rsd",
      "label": "GameCube RSD",
      "demux": true,
      "mux": false
    },
    {
      "id": "rso",
      "label": "Lego Mindstorms RSO",
      "demux": true,
      "mux": true
    },
    {
      "id": "rtp",
      "label": "RTP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "rtp_mpegts",
      "label": "RTP/mpegts output format",
      "demux": false,
      "mux": true
    },
    {
      "id": "rtsp",
      "label": "RTSP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "s16be",
      "label": "PCM signed 16-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s16le",
      "label": "PCM signed 16-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s24be",
      "label": "PCM signed 24-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s24le",
      "label": "PCM signed 24-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s32be",
      "label": "PCM signed 32-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s32le",
      "label": "PCM signed 32-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s337m",
      "label": "SMPTE 337M",
      "demux": true,
      "mux": false
    },
    {
      "id": "s8",
      "label": "PCM signed 8-bit",
      "demux": true,
      "mux": true
    },
    {
      "id": "sami",
      "label": "SAMI subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "sap",
      "label": "SAP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "sbc",
      "label": "raw SBC",
      "demux": true,
      "mux": true
    },
    {
      "id": "sbg",
      "label": "SBaGen binaural beats script",
      "demux": true,
      "mux": false
    },
    {
      "id": "scc",
      "label": "Scenarist Closed Captions",
      "demux": true,
      "mux": true
    },
    {
      "id": "sdl,sdl2",
      "label": "SDL2 output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "sdp",
      "label": "SDP",
      "demux": true,
      "mux": false
    },
    {
      "id": "sdr2",
      "label": "SDR2",
      "demux": true,
      "mux": false
    },
    {
      "id": "sds",
      "label": "MIDI Sample Dump Standard",
      "demux": true,
      "mux": false
    },
    {
      "id": "sdx",
      "label": "Sample Dump eXchange",
      "demux": true,
      "mux": false
    },
    {
      "id": "segment",
      "label": "segment",
      "demux": false,
      "mux": true
    },
    {
      "id": "ser",
      "label": "SER (Simple uncompressed video format for astronomical capturing)",
      "demux": true,
      "mux": false
    },
    {
      "id": "sga",
      "label": "Digital Pictures SGA",
      "demux": true,
      "mux": false
    },
    {
      "id": "sgi_pipe",
      "label": "piped sgi sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "shn",
      "label": "raw Shorten",
      "demux": true,
      "mux": false
    },
    {
      "id": "siff",
      "label": "Beam Software SIFF",
      "demux": true,
      "mux": false
    },
    {
      "id": "simbiosis_imx",
      "label": "Simbiosis Interactive IMX",
      "demux": true,
      "mux": false
    },
    {
      "id": "singlejpeg",
      "label": "JPEG single image",
      "demux": false,
      "mux": true
    },
    {
      "id": "sln",
      "label": "Asterisk raw pcm",
      "demux": true,
      "mux": false
    },
    {
      "id": "smjpeg",
      "label": "Loki SDL MJPEG",
      "demux": true,
      "mux": true
    },
    {
      "id": "smk",
      "label": "Smacker",
      "demux": true,
      "mux": false
    },
    {
      "id": "smoothstreaming",
      "label": "Smooth Streaming Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "smush",
      "label": "LucasArts Smush",
      "demux": true,
      "mux": false
    },
    {
      "id": "sndio",
      "label": "sndio audio playback",
      "demux": true,
      "mux": true
    },
    {
      "id": "sol",
      "label": "Sierra SOL",
      "demux": true,
      "mux": false
    },
    {
      "id": "sox",
      "label": "SoX native",
      "demux": true,
      "mux": true
    },
    {
      "id": "spdif",
      "label": "IEC 61937 (used on S/PDIF - IEC958)",
      "demux": true,
      "mux": true
    },
    {
      "id": "spx",
      "label": "Ogg Speex",
      "demux": false,
      "mux": true
    },
    {
      "id": "srt",
      "label": "SubRip subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "stl",
      "label": "Spruce subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "stream_segment,ssegment",
      "label": "streaming segment muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "streamhash",
      "label": "Per-stream hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "subviewer",
      "label": "SubViewer subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "subviewer1",
      "label": "SubViewer v1 subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "sunrast_pipe",
      "label": "piped sunrast sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "sup",
      "label": "raw HDMV Presentation Graphic Stream subtitles",
      "demux": true,
      "mux": true
    },
    {
      "id": "svag",
      "label": "Konami PS2 SVAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "svcd",
      "label": "MPEG-2 PS (SVCD)",
      "demux": false,
      "mux": true
    },
    {
      "id": "svg_pipe",
      "label": "piped svg sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "svs",
      "label": "Square SVS",
      "demux": true,
      "mux": false
    },
    {
      "id": "swf",
      "label": "SWF (ShockWave Flash)",
      "demux": true,
      "mux": true
    },
    {
      "id": "tak",
      "label": "raw TAK",
      "demux": true,
      "mux": false
    },
    {
      "id": "tedcaptions",
      "label": "TED Talks captions",
      "demux": true,
      "mux": false
    },
    {
      "id": "tee",
      "label": "Multiple muxer tee",
      "demux": false,
      "mux": true
    },
    {
      "id": "thp",
      "label": "THP",
      "demux": true,
      "mux": false
    },
    {
      "id": "tiertexseq",
      "label": "Tiertex Limited SEQ",
      "demux": true,
      "mux": false
    },
    {
      "id": "tiff_pipe",
      "label": "piped tiff sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "tmv",
      "label": "8088flex TMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "truehd",
      "label": "raw TrueHD",
      "demux": true,
      "mux": true
    },
    {
      "id": "tta",
      "label": "TTA (True Audio)",
      "demux": true,
      "mux": true
    },
    {
      "id": "ttml",
      "label": "TTML subtitle",
      "demux": false,
      "mux": true
    },
    {
      "id": "tty",
      "label": "Tele-typewriter",
      "demux": true,
      "mux": false
    },
    {
      "id": "txd",
      "label": "Renderware TeXture Dictionary",
      "demux": true,
      "mux": false
    },
    {
      "id": "ty",
      "label": "TiVo TY Stream",
      "demux": true,
      "mux": false
    },
    {
      "id": "u16be",
      "label": "PCM unsigned 16-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u16le",
      "label": "PCM unsigned 16-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u24be",
      "label": "PCM unsigned 24-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u24le",
      "label": "PCM unsigned 24-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u32be",
      "label": "PCM unsigned 32-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u32le",
      "label": "PCM unsigned 32-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u8",
      "label": "PCM unsigned 8-bit",
      "demux": true,
      "mux": true
    },
    {
      "id": "uncodedframecrc",
      "label": "uncoded framecrc testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "v210",
      "label": "Uncompressed 4:2:2 10-bit",
      "demux": true,
      "mux": false
    },
    {
      "id": "v210x",
      "label": "Uncompressed 4:2:2 10-bit",
      "demux": true,
      "mux": false
    },
    {
      "id": "vag",
      "label": "Sony PS2 VAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "vc1",
      "label": "raw VC-1 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "vc1test",
      "label": "VC-1 test bitstream",
      "demux": true,
      "mux": true
    },
    {
      "id": "vcd",
      "label": "MPEG-1 Systems / MPEG program stream (VCD)",
      "demux": false,
      "mux": true
    },
    {
      "id": "vidc",
      "label": "PCM Archimedes VIDC",
      "demux": true,
      "mux": true
    },
    {
      "id": "video4linux2,v4l2",
      "label": "Video4Linux2 output device",
      "demux": true,
      "mux": true
    },
    {
      "id": "vividas",
      "label": "Vividas VIV",
      "demux": true,
      "mux": false
    },
    {
      "id": "vivo",
      "label": "Vivo",
      "demux": true,
      "mux": false
    },
    {
      "id": "vmd",
      "label": "Sierra VMD",
      "demux": true,
      "mux": false
    },
    {
      "id": "vob",
      "label": "MPEG-2 PS (VOB)",
      "demux": false,
      "mux": true
    },
    {
      "id": "vobsub",
      "label": "VobSub subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "voc",
      "label": "Creative Voice",
      "demux": true,
      "mux": true
    },
    {
      "id": "vpk",
      "label": "Sony PS2 VPK",
      "demux": true,
      "mux": false
    },
    {
      "id": "vplayer",
      "label": "VPlayer subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "vqf",
      "label": "Nippon Telegraph and Telephone Corporation (NTT) TwinVQ",
      "demux": true,
      "mux": false
    },
    {
      "id": "w64",
      "label": "Sony Wave64",
      "demux": true,
      "mux": true
    },
    {
      "id": "wav",
      "label": "WAV / WAVE (Waveform Audio)",
      "demux": true,
      "mux": true
    },
    {
      "id": "wc3movie",
      "label": "Wing Commander III movie",
      "demux": true,
      "mux": false
    },
    {
      "id": "webm",
      "label": "WebM",
      "demux": false,
      "mux": true
    },
    {
      "id": "webm_chunk",
      "label": "WebM Chunk Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "webm_dash_manifest",
      "label": "WebM DASH Manifest",
      "demux": true,
      "mux": true
    },
    {
      "id": "webp",
      "label": "WebP",
      "demux": false,
      "mux": true
    },
    {
      "id": "webp_pipe",
      "label": "piped webp sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "webvtt",
      "label": "WebVTT subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "wsaud",
      "label": "Westwood Studios audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "wsd",
      "label": "Wideband Single-bit Data (WSD)",
      "demux": true,
      "mux": false
    },
    {
      "id": "wsvqa",
      "label": "Westwood Studios VQA",
      "demux": true,
      "mux": false
    },
    {
      "id": "wtv",
      "label": "Windows Television (WTV)",
      "demux": true,
      "mux": true
    },
    {
      "id": "wv",
      "label": "raw WavPack",
      "demux": true,
      "mux": true
    },
    {
      "id": "wve",
      "label": "Psion 3 audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "x11grab",
      "label": "X11 screen capture, using XCB",
      "demux": true,
      "mux": false
    },
    {
      "id": "xa",
      "label": "Maxis XA",
      "demux": true,
      "mux": false
    },
    {
      "id": "xbin",
      "label": "eXtended BINary text (XBIN)",
      "demux": true,
      "mux": false
    },
    {
      "id": "xbm_pipe",
      "label": "piped xbm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xmv",
      "label": "Microsoft XMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "xpm_pipe",
      "label": "piped xpm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xv",
      "label": "XV (XVideo) output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "xvag",
      "label": "Sony PS3 XVAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "xwd_pipe",
      "label": "piped xwd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xwma",
      "label": "Microsoft xWMA",
      "demux": true,
      "mux": false
    },
    {
      "id": "yop",
      "label": "Psygnosis YOP",
      "demux": true,
      "mux": false
    },
    {
      "id": "yuv4mpegpipe",
      "label": "YUV4MPEG pipe",
      "demux": true,
      "mux": true
    }
  ],
  "codecs": [
    {
      "id": "012v",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "4xm",
      "label": "4X Movie",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8bps",
      "label": "QuickTime 8BPS video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "a64_multi",
      "label": "Multicolor charset for Commodore 64 (encoders: a64multi )",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "a64_multi5",
      "label": "Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5 )",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aasc",
      "label": "Autodesk RLE",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "agm",
      "label": "Amuse Graphics Movie",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aic",
      "label": "Apple Intermediate Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "alias_pix",
      "label": "Alias/Wavefront PIX image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amv",
      "label": "AMV Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "anm",
      "label": "Deluxe Paint Animation",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ansi",
      "label": "ASCII/ANSI art",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "apng",
      "label": "APNG (Animated Portable Network Graphics) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "arbc",
      "label": "Gryphon's Anim Compressor",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "argo",
      "label": "Argonaut Games Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "asv1",
      "label": "ASUS V1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "asv2",
      "label": "ASUS V2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aura",
      "label": "Auravision AURA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aura2",
      "label": "Auravision Aura 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "av1",
      "label": "Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid av1_qsv ) (encoders: libaom-av1 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avrn",
      "label": "Avid AVI Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avrp",
      "label": "Avid 1:1 10-bit RGB Packer",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs",
      "label": "AVS (Audio Video Standard) video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs2",
      "label": "AVS2-P2/IEEE1857.4",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs3",
      "label": "AVS3-P2/IEEE1857.10",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avui",
      "label": "Avid Meridien Uncompressed",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ayuv",
      "label": "Uncompressed packed MS 4:4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bethsoftvid",
      "label": "Bethesda VID video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bfi",
      "label": "Brute Force & Ignorance",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkvideo",
      "label": "Bink video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bintext",
      "label": "Binary text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bitpacked",
      "label": "Bitpacked",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmp",
      "label": "BMP (Windows and OS/2 bitmap)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmv_video",
      "label": "Discworld II BMV video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "brender_pix",
      "label": "BRender PIX image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "c93",
      "label": "Interplay C93",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cavs",
      "label": "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdgraphics",
      "label": "CD Graphics video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdtoons",
      "label": "CDToons video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdxl",
      "label": "Commodore CDXL video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cfhd",
      "label": "GoPro CineForm HD",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cinepak",
      "label": "Cinepak",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "clearvideo",
      "label": "Iterated Systems ClearVideo",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cljr",
      "label": "Cirrus Logic AccuPak",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cllc",
      "label": "Canopus Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cmv",
      "label": "Electronic Arts CMV video (decoders: eacmv )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cpia",
      "label": "CPiA video format",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cri",
      "label": "Cintel RAW",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cscd",
      "label": "CamStudio (decoders: camstudio )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cyuv",
      "label": "Creative YUV (CYUV)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "daala",
      "label": "Daala",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dds",
      "label": "DirectDraw Surface image decoder",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dfa",
      "label": "Chronomaster DFA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dirac",
      "label": "Dirac (encoders: vc2 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dnxhd",
      "label": "VC3/DNxHD",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dpx",
      "label": "DPX (Digital Picture Exchange) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsicinvideo",
      "label": "Delphine Software International CIN video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvvideo",
      "label": "DV (Digital Video)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxa",
      "label": "Feeble Files/ScummVM DXA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxtory",
      "label": "Dxtory",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxv",
      "label": "Resolume DXV",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "escape124",
      "label": "Escape 124",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "escape130",
      "label": "Escape 130",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "exr",
      "label": "OpenEXR image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ffv1",
      "label": "FFmpeg video codec #1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ffvhuff",
      "label": "Huffyuv FFmpeg variant",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fic",
      "label": "Mirillis FIC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fits",
      "label": "FITS (Flexible Image Transport System)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flashsv",
      "label": "Flash Screen Video v1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flashsv2",
      "label": "Flash Screen Video v2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flic",
      "label": "Autodesk Animator Flic video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flv1",
      "label": "FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv ) (encoders: flv )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fmvc",
      "label": "FM Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fraps",
      "label": "Fraps",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "frwu",
      "label": "Forward Uncompressed",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g2m",
      "label": "Go2Meeting",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gdv",
      "label": "Gremlin Digital Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gif",
      "label": "CompuServe GIF (Graphics Interchange Format)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h261",
      "label": "H.261",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263",
      "label": "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2 (decoders: h263 h263_v4l2m2m ) (encoders: h263 h263_v4l2m2m )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263i",
      "label": "Intel H.263",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263p",
      "label": "H.263+ / H.263-1998 / H.263 version 2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h264",
      "label": "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_qsv h264_cuvid ) (encoders: libx264 libx264rgb h264_nvenc h264_omx h264_qsv h264_v4l2m2m h264_vaapi nvenc nvenc_h264 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hap",
      "label": "Vidvox Hap",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hevc",
      "label": "H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_qsv hevc_v4l2m2m hevc_cuvid ) (encoders: libx265 nvenc_hevc hevc_nvenc hevc_qsv hevc_v4l2m2m hevc_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hnm4video",
      "label": "HNM 4 video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hq_hqa",
      "label": "Canopus HQ/HQA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hqx",
      "label": "Canopus HQX",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "huffyuv",
      "label": "HuffYUV",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hymt",
      "label": "HuffYUV MT",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "idcin",
      "label": "id Quake II CIN video (decoders: idcinvideo )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "idf",
      "label": "iCEDraw text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "iff_ilbm",
      "label": "IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imm4",
      "label": "Infinity IMM4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imm5",
      "label": "Infinity IMM5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo2",
      "label": "Intel Indeo 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo3",
      "label": "Intel Indeo 3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo4",
      "label": "Intel Indeo Video Interactive 4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo5",
      "label": "Intel Indeo Video Interactive 5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplayvideo",
      "label": "Interplay MVE video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ipu",
      "label": "IPU Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jpeg2000",
      "label": "JPEG 2000 (decoders: jpeg2000 libopenjpeg ) (encoders: jpeg2000 libopenjpeg )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jpegls",
      "label": "JPEG-LS",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jv",
      "label": "Bitmap Brothers JV video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "kgv1",
      "label": "Kega Game Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "kmvc",
      "label": "Karl Morton's video codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "lagarith",
      "label": "Lagarith lossless",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ljpeg",
      "label": "Lossless JPEG",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "loco",
      "label": "LOCO",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "lscr",
      "label": "LEAD Screen Capture",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "m101",
      "label": "Matrox Uncompressed SD",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mad",
      "label": "Electronic Arts Madcow Video (decoders: eamad )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "magicyuv",
      "label": "MagicYUV video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mdec",
      "label": "Sony PlayStation MDEC (Motion DECoder)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mimic",
      "label": "Mimic",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mjpeg",
      "label": "Motion JPEG (decoders: mjpeg mjpeg_cuvid mjpeg_qsv ) (encoders: mjpeg mjpeg_qsv mjpeg_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mjpegb",
      "label": "Apple MJPEG-B",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mmvideo",
      "label": "American Laser Games MM Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mobiclip",
      "label": "MobiClip Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "motionpixels",
      "label": "Motion Pixels video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg1video",
      "label": "MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg2video",
      "label": "MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_qsv mpeg2_cuvid ) (encoders: mpeg2video mpeg2_qsv mpeg2_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg4",
      "label": "MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid ) (encoders: mpeg4 libxvid mpeg4_omx mpeg4_v4l2m2m )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msa1",
      "label": "MS ATC Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mscc",
      "label": "Mandsoft Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v1",
      "label": "MPEG-4 part 2 Microsoft variant version 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v2",
      "label": "MPEG-4 part 2 Microsoft variant version 2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v3",
      "label": "MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4 ) (encoders: msmpeg4 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msp2",
      "label": "Microsoft Paint (MSP) version 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msrle",
      "label": "Microsoft RLE",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mss1",
      "label": "MS Screen 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mss2",
      "label": "MS Windows Media Video V9 Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msvideo1",
      "label": "Microsoft Video 1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mszh",
      "label": "LCL (LossLess Codec Library) MSZH",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mts2",
      "label": "MS Expression Encoder Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mv30",
      "label": "MidiVid 3.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvc1",
      "label": "Silicon Graphics Motion Video Compressor 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvc2",
      "label": "Silicon Graphics Motion Video Compressor 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvdv",
      "label": "MidiVid VQ",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvha",
      "label": "MidiVid Archive Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mwsc",
      "label": "MatchWare Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mxpeg",
      "label": "Mobotix MxPEG video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "notchlc",
      "label": "NotchLC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "nuv",
      "label": "NuppelVideo/RTJPEG",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "paf_video",
      "label": "Amazing Studio Packed Animation File Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pam",
      "label": "PAM (Portable AnyMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pbm",
      "label": "PBM (Portable BitMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcx",
      "label": "PC Paintbrush PCX image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pfm",
      "label": "PFM (Portable FloatMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgm",
      "label": "PGM (Portable GrayMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgmyuv",
      "label": "PGMYUV (Portable GrayMap YUV) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgx",
      "label": "PGX (JPEG2000 Test Format)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "photocd",
      "label": "Kodak Photo CD",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pictor",
      "label": "Pictor/PC Paint",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pixlet",
      "label": "Apple Pixlet",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "png",
      "label": "PNG (Portable Network Graphics) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ppm",
      "label": "PPM (Portable PixelMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "prores",
      "label": "Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "prosumer",
      "label": "Brooktree ProSumer Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "psd",
      "label": "Photoshop PSD file",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ptx",
      "label": "V.Flash PTX image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdraw",
      "label": "Apple QuickDraw",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qpeg",
      "label": "Q-team QPEG",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qtrle",
      "label": "QuickTime Animation (RLE) video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "r10k",
      "label": "AJA Kona 10-bit RGB Codec",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "r210",
      "label": "Uncompressed RGB 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rasc",
      "label": "RemotelyAnywhere Screen Capture",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rawvideo",
      "label": "raw video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rl2",
      "label": "RL2 video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "roq",
      "label": "id RoQ video (decoders: roqvideo ) (encoders: roqvideo )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rpza",
      "label": "QuickTime video (RPZA)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rscc",
      "label": "innoHeim/Rsupport Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv10",
      "label": "RealVideo 1.0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv20",
      "label": "RealVideo 2.0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv30",
      "label": "RealVideo 3.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv40",
      "label": "RealVideo 4.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sanm",
      "label": "LucasArts SANM/SMUSH video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "scpr",
      "label": "ScreenPressor",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "screenpresso",
      "label": "Screenpresso",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sga",
      "label": "Digital Pictures SGA Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sgi",
      "label": "SGI image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sgirle",
      "label": "SGI RLE 8-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sheervideo",
      "label": "BitJazz SheerVideo",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "simbiosis_imx",
      "label": "Simbiosis Interactive IMX Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smackvideo",
      "label": "Smacker video (decoders: smackvid )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smc",
      "label": "QuickTime Graphics (SMC)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smvjpeg",
      "label": "Sigmatel Motion Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "snow",
      "label": "Snow",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sp5x",
      "label": "Sunplus JPEG (SP5X)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "speedhq",
      "label": "NewTek SpeedHQ",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "srgc",
      "label": "Screen Recorder Gold Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sunrast",
      "label": "Sun Rasterfile image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svg",
      "label": "Scalable Vector Graphics (decoders: librsvg )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svq1",
      "label": "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svq3",
      "label": "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "targa",
      "label": "Truevision Targa image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "targa_y216",
      "label": "Pinnacle TARGA CineWave YUV16",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tdsc",
      "label": "TDSC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tgq",
      "label": "Electronic Arts TGQ video (decoders: eatgq )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tgv",
      "label": "Electronic Arts TGV video (decoders: eatgv )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "theora",
      "label": "Theora (encoders: libtheora )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "thp",
      "label": "Nintendo Gamecube THP video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tiertexseqvideo",
      "label": "Tiertex Limited SEQ video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tiff",
      "label": "TIFF image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tmv",
      "label": "8088flex TMV",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tqi",
      "label": "Electronic Arts TQI video (decoders: eatqi )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion1",
      "label": "Duck TrueMotion 1.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion2",
      "label": "Duck TrueMotion 2.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion2rt",
      "label": "Duck TrueMotion 2.0 Real Time",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tscc",
      "label": "TechSmith Screen Capture Codec (decoders: camtasia )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tscc2",
      "label": "TechSmith Screen Codec 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "txd",
      "label": "Renderware TXD (TeXture Dictionary) image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ulti",
      "label": "IBM UltiMotion (decoders: ultimotion )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "utvideo",
      "label": "Ut Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v210",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v210x",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v308",
      "label": "Uncompressed packed 4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v408",
      "label": "Uncompressed packed QT 4:4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v410",
      "label": "Uncompressed 4:4:4 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vb",
      "label": "Beam Software VB",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vble",
      "label": "VBLE Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vc1",
      "label": "SMPTE VC-1 (decoders: vc1 vc1_qsv vc1_v4l2m2m vc1_cuvid )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vc1image",
      "label": "Windows Media Video 9 Image v2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vcr1",
      "label": "ATI VCR1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vixl",
      "label": "Miro VideoXL (decoders: xl )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmdvideo",
      "label": "Sierra VMD video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmnc",
      "label": "VMware Screen Codec / VMware Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp3",
      "label": "On2 VP3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp4",
      "label": "On2 VP4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp5",
      "label": "On2 VP5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6",
      "label": "On2 VP6",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6a",
      "label": "On2 VP6 (Flash version, with alpha channel)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6f",
      "label": "On2 VP6 (Flash version)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp7",
      "label": "On2 VP7",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp8",
      "label": "On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid vp8_qsv ) (encoders: libvpx vp8_v4l2m2m vp8_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp9",
      "label": "Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid vp9_qsv ) (encoders: libvpx-vp9 vp9_vaapi vp9_qsv )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vvc",
      "label": "H.266 / VVC (Versatile Video Coding)",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wcmv",
      "label": "WinCAM Motion Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "webp",
      "label": "WebP (encoders: libwebp_anim libwebp )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv1",
      "label": "Windows Media Video 7",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv2",
      "label": "Windows Media Video 8",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv3",
      "label": "Windows Media Video 9",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv3image",
      "label": "Windows Media Video 9 Image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wnv1",
      "label": "Winnov WNV1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wrapped_avframe",
      "label": "AVFrame to AVPacket passthrough",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ws_vqa",
      "label": "Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_wc3",
      "label": "Wing Commander III / Xan",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_wc4",
      "label": "Wing Commander IV / Xxan",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xbin",
      "label": "eXtended BINary text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xbm",
      "label": "XBM (X BitMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xface",
      "label": "X-face image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xpm",
      "label": "XPM (X PixMap) image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xwd",
      "label": "XWD (X Window Dump) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "y41p",
      "label": "Uncompressed YUV 4:1:1 12-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ylc",
      "label": "YUY2 Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "yop",
      "label": "Psygnosis YOP Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "yuv4",
      "label": "Uncompressed packed 4:2:0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zerocodec",
      "label": "ZeroCodec Lossless Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zlib",
      "label": "LCL (LossLess Codec Library) ZLIB",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zmbv",
      "label": "Zip Motion Blocks Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "4gv",
      "label": "4GV (Fourth Generation Vocoder)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8svx_exp",
      "label": "8SVX exponential",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8svx_fib",
      "label": "8SVX fibonacci",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aac",
      "label": "AAC (Advanced Audio Coding) (decoders: aac aac_fixed )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aac_latm",
      "label": "AAC LATM (Advanced Audio Coding LATM syntax)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ac3",
      "label": "ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed ) (encoders: ac3 ac3_fixed )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "acelp.kelvin",
      "label": "Sipro ACELP.KELVIN",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_4xm",
      "label": "ADPCM 4X Movie",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_adx",
      "label": "SEGA CRI ADX ADPCM",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_afc",
      "label": "ADPCM Nintendo Gamecube AFC",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_agm",
      "label": "ADPCM AmuseGraphics Movie AGM",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_aica",
      "label": "ADPCM Yamaha AICA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_argo",
      "label": "ADPCM Argonaut Games",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ct",
      "label": "ADPCM Creative Technology",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_dtk",
      "label": "ADPCM Nintendo Gamecube DTK",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea",
      "label": "ADPCM Electronic Arts",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_maxis_xa",
      "label": "ADPCM Electronic Arts Maxis CDROM XA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r1",
      "label": "ADPCM Electronic Arts R1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r2",
      "label": "ADPCM Electronic Arts R2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r3",
      "label": "ADPCM Electronic Arts R3",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_xas",
      "label": "ADPCM Electronic Arts XAS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g722",
      "label": "G.722 ADPCM (decoders: g722 ) (encoders: g722 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g726",
      "label": "G.726 ADPCM (decoders: g726 ) (encoders: g726 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g726le",
      "label": "G.726 ADPCM little-endian (decoders: g726le ) (encoders: g726le )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_alp",
      "label": "ADPCM IMA High Voltage Software ALP",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_amv",
      "label": "ADPCM IMA AMV",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_apc",
      "label": "ADPCM IMA CRYO APC",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_apm",
      "label": "ADPCM IMA Ubisoft APM",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_cunning",
      "label": "ADPCM IMA Cunning Developments",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dat4",
      "label": "ADPCM IMA Eurocom DAT4",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dk3",
      "label": "ADPCM IMA Duck DK3",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dk4",
      "label": "ADPCM IMA Duck DK4",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ea_eacs",
      "label": "ADPCM IMA Electronic Arts EACS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ea_sead",
      "label": "ADPCM IMA Electronic Arts SEAD",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_iss",
      "label": "ADPCM IMA Funcom ISS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_moflex",
      "label": "ADPCM IMA MobiClip MOFLEX",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_mtf",
      "label": "ADPCM IMA Capcom's MT Framework",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_oki",
      "label": "ADPCM IMA Dialogic OKI",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_qt",
      "label": "ADPCM IMA QuickTime",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_rad",
      "label": "ADPCM IMA Radical",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_smjpeg",
      "label": "ADPCM IMA Loki SDL MJPEG",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ssi",
      "label": "ADPCM IMA Simon & Schuster Interactive",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_wav",
      "label": "ADPCM IMA WAV",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ws",
      "label": "ADPCM IMA Westwood",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ms",
      "label": "ADPCM Microsoft",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_mtaf",
      "label": "ADPCM MTAF",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_psx",
      "label": "ADPCM Playstation",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_2",
      "label": "ADPCM Sound Blaster Pro 2-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_3",
      "label": "ADPCM Sound Blaster Pro 2.6-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_4",
      "label": "ADPCM Sound Blaster Pro 4-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_swf",
      "label": "ADPCM Shockwave Flash",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_thp",
      "label": "ADPCM Nintendo THP",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_thp_le",
      "label": "ADPCM Nintendo THP (Little-Endian)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_vima",
      "label": "LucasArts VIMA audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_xa",
      "label": "ADPCM CDROM XA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_yamaha",
      "label": "ADPCM Yamaha",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_zork",
      "label": "ADPCM Zork",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "alac",
      "label": "ALAC (Apple Lossless Audio Codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amr_nb",
      "label": "AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amr_wb",
      "label": "AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ape",
      "label": "Monkey's Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aptx",
      "label": "aptX (Audio Processing Technology for Bluetooth)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aptx_hd",
      "label": "aptX HD (Audio Processing Technology for Bluetooth)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac1",
      "label": "ATRAC1 (Adaptive TRansform Acoustic Coding)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3",
      "label": "ATRAC3 (Adaptive TRansform Acoustic Coding 3)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3al",
      "label": "ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3p",
      "label": "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3pal",
      "label": "ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac9",
      "label": "ATRAC9 (Adaptive TRansform Acoustic Coding 9)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avc",
      "label": "On2 Audio for Video Codec (decoders: on2avc )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkaudio_dct",
      "label": "Bink Audio (DCT)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkaudio_rdft",
      "label": "Bink Audio (RDFT)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmv_audio",
      "label": "Discworld II BMV audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "celt",
      "label": "Constrained Energy Lapped Transform (CELT)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "codec2",
      "label": "codec2 (very low bitrate speech codec) (decoders: libcodec2 ) (encoders: libcodec2 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "comfortnoise",
      "label": "RFC 3389 Comfort Noise",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cook",
      "label": "Cook / Cooker / Gecko (RealAudio G2)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "derf_dpcm",
      "label": "DPCM Xilam DERF",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dolby_e",
      "label": "Dolby E",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_lsbf",
      "label": "DSD (Direct Stream Digital), least significant bit first",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_lsbf_planar",
      "label": "DSD (Direct Stream Digital), least significant bit first, planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_msbf",
      "label": "DSD (Direct Stream Digital), most significant bit first",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_msbf_planar",
      "label": "DSD (Direct Stream Digital), most significant bit first, planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsicinaudio",
      "label": "Delphine Software International CIN audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dss_sp",
      "label": "Digital Speech Standard - Standard Play mode (DSS SP)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dst",
      "label": "DST (Direct Stream Transfer)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dts",
      "label": "DCA (DTS Coherent Acoustics) (decoders: dca ) (encoders: dca )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvaudio",
      "label": "DV audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "eac3",
      "label": "ATSC A/52B (AC-3, E-AC-3)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "evrc",
      "label": "EVRC (Enhanced Variable Rate Codec)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fastaudio",
      "label": "MobiClip FastAudio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flac",
      "label": "FLAC (Free Lossless Audio Codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g723_1",
      "label": "G.723.1",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g729",
      "label": "G.729",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gremlin_dpcm",
      "label": "DPCM Gremlin",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gsm",
      "label": "GSM (decoders: gsm libgsm ) (encoders: libgsm )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gsm_ms",
      "label": "GSM Microsoft variant (decoders: gsm_ms libgsm_ms ) (encoders: libgsm_ms )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hca",
      "label": "CRI HCA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hcom",
      "label": "HCOM Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "iac",
      "label": "IAC (Indeo Audio Coder)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ilbc",
      "label": "iLBC (Internet Low Bitrate Codec)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imc",
      "label": "IMC (Intel Music Coder)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplay_dpcm",
      "label": "DPCM Interplay",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplayacm",
      "label": "Interplay ACM",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mace3",
      "label": "MACE (Macintosh Audio Compression/Expansion) 3:1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mace6",
      "label": "MACE (Macintosh Audio Compression/Expansion) 6:1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "metasound",
      "label": "Voxware MetaSound",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mlp",
      "label": "MLP (Meridian Lossless Packing)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp1",
      "label": "MP1 (MPEG audio layer 1) (decoders: mp1 mp1float )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp2",
      "label": "MP2 (MPEG audio layer 2) (decoders: mp2 mp2float ) (encoders: mp2 mp2fixed libtwolame )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3",
      "label": "MP3 (MPEG audio layer 3) (decoders: mp3float mp3 ) (encoders: libmp3lame libshine )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3adu",
      "label": "ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3on4",
      "label": "MP3onMP4 (decoders: mp3on4float mp3on4 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp4als",
      "label": "MPEG-4 Audio Lossless Coding (ALS) (decoders: als )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpegh_3d_audio",
      "label": "MPEG-H 3D Audio",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "musepack7",
      "label": "Musepack SV7 (decoders: mpc7 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "musepack8",
      "label": "Musepack SV8 (decoders: mpc8 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "nellymoser",
      "label": "Nellymoser Asao",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "opus",
      "label": "Opus (Opus Interactive Audio Codec) (decoders: opus libopus ) (encoders: opus libopus )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "paf_audio",
      "label": "Amazing Studio Packed Animation File Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_alaw",
      "label": "PCM A-law / G.711 A-law",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_bluray",
      "label": "PCM signed 16|20|24-bit big-endian for Blu-ray media",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_dvd",
      "label": "PCM signed 20|24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f16le",
      "label": "PCM 16.8 floating point little-endian",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f24le",
      "label": "PCM 24.0 floating point little-endian",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f32be",
      "label": "PCM 32-bit floating point big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f32le",
      "label": "PCM 32-bit floating point little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f64be",
      "label": "PCM 64-bit floating point big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f64le",
      "label": "PCM 64-bit floating point little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_lxf",
      "label": "PCM signed 20-bit little-endian planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_mulaw",
      "label": "PCM mu-law / G.711 mu-law",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16be",
      "label": "PCM signed 16-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16be_planar",
      "label": "PCM signed 16-bit big-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16le",
      "label": "PCM signed 16-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16le_planar",
      "label": "PCM signed 16-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24be",
      "label": "PCM signed 24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24daud",
      "label": "PCM D-Cinema audio signed 24-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24le",
      "label": "PCM signed 24-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24le_planar",
      "label": "PCM signed 24-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32be",
      "label": "PCM signed 32-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32le",
      "label": "PCM signed 32-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32le_planar",
      "label": "PCM signed 32-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s64be",
      "label": "PCM signed 64-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s64le",
      "label": "PCM signed 64-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s8",
      "label": "PCM signed 8-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s8_planar",
      "label": "PCM signed 8-bit planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_sga",
      "label": "PCM SGA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u16be",
      "label": "PCM unsigned 16-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u16le",
      "label": "PCM unsigned 16-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u24be",
      "label": "PCM unsigned 24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u24le",
      "label": "PCM unsigned 24-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u32be",
      "label": "PCM unsigned 32-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u32le",
      "label": "PCM unsigned 32-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u8",
      "label": "PCM unsigned 8-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_vidc",
      "label": "PCM Archimedes VIDC",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qcelp",
      "label": "QCELP / PureVoice",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdm2",
      "label": "QDesign Music Codec 2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdmc",
      "label": "QDesign Music",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ra_144",
      "label": "RealAudio 1.0 (14.4K) (decoders: real_144 ) (encoders: real_144 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ra_288",
      "label": "RealAudio 2.0 (28.8K) (decoders: real_288 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ralf",
      "label": "RealAudio Lossless",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "roq_dpcm",
      "label": "DPCM id RoQ",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "s302m",
      "label": "SMPTE 302M",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sbc",
      "label": "SBC (low-complexity subband codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sdx2_dpcm",
      "label": "DPCM Squareroot-Delta-Exact",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "shorten",
      "label": "Shorten",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sipr",
      "label": "RealAudio SIPR / ACELP.NET",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "siren",
      "label": "Siren",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smackaudio",
      "label": "Smacker audio (decoders: smackaud )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smv",
      "label": "SMV (Selectable Mode Vocoder)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sol_dpcm",
      "label": "DPCM Sol",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sonic",
      "label": "Sonic",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sonicls",
      "label": "Sonic lossless",
      "decode": false,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "speex",
      "label": "Speex (decoders: libspeex ) (encoders: libspeex )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tak",
      "label": "TAK (Tom's lossless Audio Kompressor)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truehd",
      "label": "TrueHD",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truespeech",
      "label": "DSP Group TrueSpeech",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tta",
      "label": "TTA (True Audio)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "twinvq",
      "label": "VQF TwinVQ",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmdaudio",
      "label": "Sierra VMD audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vorbis",
      "label": "Vorbis (decoders: vorbis libvorbis ) (encoders: vorbis libvorbis )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wavesynth",
      "label": "Wave synthesis pseudo-codec",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wavpack",
      "label": "WavPack",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "westwood_snd1",
      "label": "Westwood Audio (SND1) (decoders: ws_snd1 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmalossless",
      "label": "Windows Media Audio Lossless",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmapro",
      "label": "Windows Media Audio 9 Professional",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmav1",
      "label": "Windows Media Audio 1",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmav2",
      "label": "Windows Media Audio 2",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmavoice",
      "label": "Windows Media Audio Voice",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_dpcm",
      "label": "DPCM Xan",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xma1",
      "label": "Xbox Media Audio 1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xma2",
      "label": "Xbox Media Audio 2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bin_data",
      "label": "binary data",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvd_nav_packet",
      "label": "DVD Nav packet",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "epg",
      "label": "Electronic Program Guide",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "klv",
      "label": "SMPTE 336M Key-Length-Value (KLV) metadata",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpegts",
      "label": "raw MPEG-TS stream",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "otf",
      "label": "OpenType font",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "scte_35",
      "label": "SCTE 35 Message Queue",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "timed_id3",
      "label": "timed ID3 metadata",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ttf",
      "label": "TrueType font",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "arib_caption",
      "label": "ARIB STD-B24 caption",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ass",
      "label": "ASS (Advanced SSA) subtitle (decoders: ssa ass ) (encoders: ssa ass )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvb_subtitle",
      "label": "DVB subtitles (decoders: dvbsub ) (encoders: dvbsub )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvb_teletext",
      "label": "DVB teletext (decoders: libzvbi_teletextdec )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvd_subtitle",
      "label": "DVD subtitles (decoders: dvdsub ) (encoders: dvdsub )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "eia_608",
      "label": "EIA-608 closed captions (decoders: cc_dec )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hdmv_pgs_subtitle",
      "label": "HDMV Presentation Graphic Stream subtitles (decoders: pgssub )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hdmv_text_subtitle",
      "label": "HDMV Text subtitle",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jacosub",
      "label": "JACOsub subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "microdvd",
      "label": "MicroDVD subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mov_text",
      "label": "MOV text",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpl2",
      "label": "MPL2 subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pjs",
      "label": "PJS (Phoenix Japanimation Society) subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "realtext",
      "label": "RealText subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sami",
      "label": "SAMI subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "srt",
      "label": "SubRip subtitle with embedded timing",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ssa",
      "label": "SSA (SubStation Alpha) subtitle",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "stl",
      "label": "Spruce subtitle format",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subrip",
      "label": "SubRip subtitle (decoders: srt subrip ) (encoders: srt subrip )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subviewer",
      "label": "SubViewer subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subviewer1",
      "label": "SubViewer v1 subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "text",
      "label": "raw UTF-8 text",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ttml",
      "label": "Timed Text Markup Language",
      "decode": false,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vplayer",
      "label": "VPlayer subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "webvtt",
      "label": "WebVTT subtitle",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xsub",
      "label": "XSUB",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    }
  ],
  "protocols": [
    {
      "id": "async",
      "type": "input"
    },
    {
      "id": "bluray",
      "type": "input"
    },
    {
      "id": "cache",
      "type": "input"
    },
    {
      "id": "concat",
      "type": "input"
    },
    {
      "id": "crypto",
      "type": "input"
    },
    {
      "id": "data",
      "type": "input"
    },
    {
      "id": "ffrtmphttp",
      "type": "input"
    },
    {
      "id": "file",
      "type": "input"
    },
    {
      "id": "ftp",
      "type": "input"
    },
    {
      "id": "gopher",
      "type": "input"
    },
    {
      "id": "gophers",
      "type": "input"
    },
    {
      "id": "hls",
      "type": "input"
    },
    {
      "id": "http",
      "type": "input"
    },
    {
      "id": "httpproxy",
      "type": "input"
    },
    {
      "id": "https",
      "type": "input"
    },
    {
      "id": "mmsh",
      "type": "input"
    },
    {
      "id": "mmst",
      "type": "input"
    },
    {
      "id": "pipe",
      "type": "input"
    },
    {
      "id": "rtmp",
      "type": "input"
    },
    {
      "id": "rtmps",
      "type": "input"
    },
    {
      "id": "rtmpt",
      "type": "input"
    },
    {
      "id": "rtmpts",
      "type": "input"
    },
    {
      "id": "rtp",
      "type": "input"
    },
    {
      "id": "sctp",
      "type": "input"
    },
    {
      "id": "srtp",
      "type": "input"
    },
    {
      "id": "subfile",
      "type": "input"
    },
    {
      "id": "tcp",
      "type": "input"
    },
    {
      "id": "tls",
      "type": "input"
    },
    {
      "id": "udp",
      "type": "input"
    },
    {
      "id": "udplite",
      "type": "input"
    },
    {
      "id": "unix",
      "type": "input"
    },
    {
      "id": "amqp",
      "type": "input"
    },
    {
      "id": "srt",
      "type": "input"
    },
    {
      "id": "sftp",
      "type": "input"
    },
    {
      "id": "zmq",
      "type": "input"
    },
    {
      "id": "crypto",
      "type": "output"
    },
    {
      "id": "ffrtmphttp",
      "type": "output"
    },
    {
      "id": "file",
      "type": "output"
    },
    {
      "id": "ftp",
      "type": "output"
    },
    {
      "id": "gopher",
      "type": "output"
    },
    {
      "id": "gophers",
      "type": "output"
    },
    {
      "id": "http",
      "type": "output"
    },
    {
      "id": "httpproxy",
      "type": "output"
    },
    {
      "id": "https",
      "type": "output"
    },
    {
      "id": "icecast",
      "type": "output"
    },
    {
      "id": "md5",
      "type": "output"
    },
    {
      "id": "pipe",
      "type": "output"
    },
    {
      "id": "prompeg",
      "type": "output"
    },
    {
      "id": "rtmp",
      "type": "output"
    },
    {
      "id": "rtmps",
      "type": "output"
    },
    {
      "id": "rtmpt",
      "type": "output"
    },
    {
      "id": "rtmpts",
      "type": "output"
    },
    {
      "id": "rtp",
      "type": "output"
    },
    {
      "id": "sctp",
      "type": "output"
    },
    {
      "id": "srtp",
      "type": "output"
    },
    {
      "id": "tee",
      "type": "output"
    },
    {
      "id": "tcp",
      "type": "output"
    },
    {
      "id": "tls",
      "type": "output"
    },
    {
      "id": "udp",
      "type": "output"
    },
    {
      "id": "udplite",
      "type": "output"
    },
    {
      "id": "unix",
      "type": "output"
    },
    {
      "id": "amqp",
      "type": "output"
    },
    {
      "id": "srt",
      "type": "output"
    },
    {
      "id": "sftp",
      "type": "output"
    },
    {
      "id": "zmq",
      "type": "output"
    }
  ]
}