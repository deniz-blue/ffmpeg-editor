{
  "options": {
    "audio": [
      {
        "name": "-aframes",
        "type": "number",
        "advanced": false,
        "desc": " set the number of audio frames to output"
      },
      {
        "name": "-aq",
        "type": "quality",
        "advanced": false,
        "desc": " set audio quality (codec-specific)"
      },
      {
        "name": "-ar",
        "type": "rate",
        "advanced": false,
        "desc": "set audio sampling rate (in Hz)"
      },
      {
        "name": "-ac",
        "type": "channels",
        "advanced": false,
        "desc": "set number of audio channels"
      },
      {
        "name": "-an",
        "type": "boolean",
        "advanced": false,
        "desc": " disable audio"
      },
      {
        "name": "-acodec",
        "type": "codec",
        "advanced": false,
        "desc": " force audio codec ('copy' to copy stream)"
      },
      {
        "name": "-vol",
        "type": "volume",
        "advanced": false,
        "desc": " change audio volume (256=normal)"
      },
      {
        "name": "-af",
        "type": "filter_graph",
        "advanced": false,
        "desc": "set audio filters"
      }
    ],
    "file": [
      {
        "name": "-f",
        "type": "fmt",
        "advanced": false,
        "desc": "force format"
      },
      {
        "name": "-c",
        "type": "codec",
        "advanced": false,
        "desc": "codec name"
      },
      {
        "name": "-codec",
        "type": "codec",
        "advanced": false,
        "desc": "codec name"
      },
      {
        "name": "-pre",
        "type": "preset",
        "advanced": false,
        "desc": " preset name"
      },
      {
        "name": "-map_metadata",
        "type": "outfile[,metadata]:infile[,metadata]",
        "advanced": false,
        "desc": "set metadata information of outfile from infile"
      },
      {
        "name": "-t",
        "type": "duration",
        "advanced": false,
        "desc": " record or transcode \"duration\" seconds of audio/video"
      },
      {
        "name": "-to",
        "type": "time_stop",
        "advanced": false,
        "desc": " record or transcode stop time"
      },
      {
        "name": "-fs",
        "type": "limit_size",
        "advanced": false,
        "desc": "set the limit file size in bytes"
      },
      {
        "name": "-ss",
        "type": "time_off",
        "advanced": false,
        "desc": "set the start time offset"
      },
      {
        "name": "-sseof",
        "type": "time_off",
        "advanced": false,
        "desc": " set the start time offset relative to EOF"
      },
      {
        "name": "-seek_timestamp",
        "type": "boolean",
        "advanced": false,
        "desc": " enable/disable seeking by timestamp with -ss"
      },
      {
        "name": "-timestamp",
        "type": "time",
        "advanced": false,
        "desc": " set the recording timestamp ('now' to set the current time)"
      },
      {
        "name": "-metadata",
        "type": "string=string",
        "advanced": false,
        "desc": "add metadata"
      },
      {
        "name": "-program",
        "type": "title=string:st=number...",
        "advanced": false,
        "desc": "add program with specified streams"
      },
      {
        "name": "-target",
        "type": "type",
        "advanced": false,
        "desc": "specify target file type (\"vcd\", \"svcd\", \"dvd\", \"dv\" or \"dv50\" with optional prefixes \"pal-\", \"ntsc-\" or \"film-\")"
      },
      {
        "name": "-apad",
        "type": "boolean",
        "advanced": false,
        "desc": " audio pad"
      },
      {
        "name": "-frames",
        "type": "number",
        "advanced": false,
        "desc": "set the number of frames to output"
      },
      {
        "name": "-filter",
        "type": "filter_graph",
        "advanced": false,
        "desc": "set stream filtergraph"
      },
      {
        "name": "-filter_script",
        "type": "filename",
        "advanced": false,
        "desc": "read stream filtergraph description from a file"
      },
      {
        "name": "-reinit_filter",
        "type": "boolean",
        "advanced": false,
        "desc": "reinit filtergraph on input parameter changes"
      },
      {
        "name": "-discard",
        "type": "boolean",
        "advanced": false,
        "desc": "discard"
      },
      {
        "name": "-disposition",
        "type": "boolean",
        "advanced": false,
        "desc": "disposition"
      }
    ],
    "global": [
      {
        "name": "-loglevel",
        "type": "loglevel",
        "advanced": false,
        "desc": "set logging level"
      },
      {
        "name": "-v",
        "type": "loglevel",
        "advanced": false,
        "desc": " set logging level"
      },
      {
        "name": "-report",
        "type": "boolean",
        "advanced": false,
        "desc": " generate a report"
      },
      {
        "name": "-max_alloc",
        "type": "bytes",
        "advanced": false,
        "desc": "set maximum size of a single allocated block"
      },
      {
        "name": "-y",
        "type": "boolean",
        "advanced": false,
        "desc": "overwrite output files"
      },
      {
        "name": "-n",
        "type": "boolean",
        "advanced": false,
        "desc": "never overwrite output files"
      },
      {
        "name": "-ignore_unknown",
        "type": "boolean",
        "advanced": false,
        "desc": " Ignore unknown stream types"
      },
      {
        "name": "-filter_threads",
        "type": "boolean",
        "advanced": false,
        "desc": " number of non-complex filter threads"
      },
      {
        "name": "-filter_complex_threads",
        "type": "boolean",
        "advanced": false,
        "desc": "number of threads for -filter_complex"
      },
      {
        "name": "-stats",
        "type": "boolean",
        "advanced": false,
        "desc": "print progress report during encoding"
      },
      {
        "name": "-max_error_rate",
        "type": "maximum",
        "advanced": false,
        "desc": "ratio of decoding errors (0.0: no errors, 1.0: 100% errors) above which ffmpeg returns an error instead of success."
      },
      {
        "name": "-bits_per_raw_sample",
        "type": "number",
        "advanced": false,
        "desc": "set the number of bits per raw sample"
      },
      {
        "name": "-vol",
        "type": "volume",
        "advanced": false,
        "desc": " change audio volume (256=normal)"
      }
    ],
    "subtitle": [
      {
        "name": "-s",
        "type": "size",
        "advanced": false,
        "desc": " set frame size (WxH or abbreviation)"
      },
      {
        "name": "-sn",
        "type": "boolean",
        "advanced": false,
        "desc": " disable subtitle"
      },
      {
        "name": "-scodec",
        "type": "codec",
        "advanced": false,
        "desc": " force subtitle codec ('copy' to copy stream)"
      },
      {
        "name": "-stag",
        "type": "fourcc/tag",
        "advanced": false,
        "desc": "force subtitle tag/fourcc"
      },
      {
        "name": "-fix_sub_duration",
        "type": "boolean",
        "advanced": false,
        "desc": " fix subtitles duration"
      },
      {
        "name": "-canvas_size",
        "type": "size",
        "advanced": false,
        "desc": " set canvas size (WxH or abbreviation)"
      },
      {
        "name": "-spre",
        "type": "preset",
        "advanced": false,
        "desc": "set the subtitle options to the indicated preset"
      }
    ],
    "video": [
      {
        "name": "-vframes",
        "type": "number",
        "advanced": false,
        "desc": " set the number of video frames to output"
      },
      {
        "name": "-r",
        "type": "rate",
        "advanced": false,
        "desc": " set frame rate (Hz value, fraction or abbreviation)"
      },
      {
        "name": "-fpsmax",
        "type": "rate",
        "advanced": false,
        "desc": "set max frame rate (Hz value, fraction or abbreviation)"
      },
      {
        "name": "-s",
        "type": "size",
        "advanced": false,
        "desc": " set frame size (WxH or abbreviation)"
      },
      {
        "name": "-aspect",
        "type": "aspect",
        "advanced": false,
        "desc": "set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)"
      },
      {
        "name": "-bits_per_raw_sample",
        "type": "number",
        "advanced": false,
        "desc": "set the number of bits per raw sample"
      },
      {
        "name": "-vn",
        "type": "boolean",
        "advanced": false,
        "desc": " disable video"
      },
      {
        "name": "-vcodec",
        "type": "codec",
        "advanced": false,
        "desc": " force video codec ('copy' to copy stream)"
      },
      {
        "name": "-timecode",
        "type": "hh:mm:ss[:;.]ff",
        "advanced": false,
        "desc": "set initial TimeCode value."
      },
      {
        "name": "-pass",
        "type": "n",
        "advanced": false,
        "desc": " select the pass number (1 to 3)"
      },
      {
        "name": "-vf",
        "type": "filter_graph",
        "advanced": false,
        "desc": "set video filters"
      },
      {
        "name": "-ab",
        "type": "bitrate",
        "advanced": false,
        "desc": " audio bitrate (please use -b:a)"
      },
      {
        "name": "-b",
        "type": "bitrate",
        "advanced": false,
        "desc": "video bitrate (please use -b:v)"
      },
      {
        "name": "-dn",
        "type": "boolean",
        "advanced": false,
        "desc": " disable data"
      }
    ]
  },
  "formats": [
    {
      "id": "3dostr",
      "label": "3DO STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "3g2",
      "label": "3GP2 (3GPP2 file format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "3gp",
      "label": "3GP (3GPP file format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "4xm",
      "label": "4X Technologies",
      "demux": true,
      "mux": false
    },
    {
      "id": "a64",
      "label": "a64 - video for Commodore 64",
      "demux": false,
      "mux": true
    },
    {
      "id": "aa",
      "label": "Audible AA format files",
      "demux": true,
      "mux": false
    },
    {
      "id": "aac",
      "label": "raw ADTS AAC (Advanced Audio Coding)",
      "demux": true,
      "mux": false
    },
    {
      "id": "aax",
      "label": "CRI AAX",
      "demux": true,
      "mux": false
    },
    {
      "id": "ac3",
      "label": "raw AC-3",
      "demux": true,
      "mux": true
    },
    {
      "id": "ace",
      "label": "tri-Ace Audio Container",
      "demux": true,
      "mux": false
    },
    {
      "id": "acm",
      "label": "Interplay ACM",
      "demux": true,
      "mux": false
    },
    {
      "id": "act",
      "label": "ACT Voice file format",
      "demux": true,
      "mux": false
    },
    {
      "id": "adf",
      "label": "Artworx Data Format",
      "demux": true,
      "mux": false
    },
    {
      "id": "adp",
      "label": "ADP",
      "demux": true,
      "mux": false
    },
    {
      "id": "ads",
      "label": "Sony PS2 ADS",
      "demux": true,
      "mux": false
    },
    {
      "id": "adts",
      "label": "ADTS AAC (Advanced Audio Coding)",
      "demux": false,
      "mux": true
    },
    {
      "id": "adx",
      "label": "CRI ADX",
      "demux": true,
      "mux": true
    },
    {
      "id": "aea",
      "label": "MD STUDIO audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "afc",
      "label": "AFC",
      "demux": true,
      "mux": false
    },
    {
      "id": "aiff",
      "label": "Audio IFF",
      "demux": true,
      "mux": true
    },
    {
      "id": "aix",
      "label": "CRI AIX",
      "demux": true,
      "mux": false
    },
    {
      "id": "alaw",
      "label": "PCM A-law",
      "demux": true,
      "mux": true
    },
    {
      "id": "alias_pix",
      "label": "Alias/Wavefront PIX image",
      "demux": true,
      "mux": false
    },
    {
      "id": "alp",
      "label": "LEGO Racers ALP",
      "demux": true,
      "mux": true
    },
    {
      "id": "alsa",
      "label": "ALSA audio output",
      "demux": true,
      "mux": true
    },
    {
      "id": "amr",
      "label": "3GPP AMR",
      "demux": true,
      "mux": true
    },
    {
      "id": "amrnb",
      "label": "raw AMR-NB",
      "demux": true,
      "mux": false
    },
    {
      "id": "amrwb",
      "label": "raw AMR-WB",
      "demux": true,
      "mux": false
    },
    {
      "id": "amv",
      "label": "AMV",
      "demux": false,
      "mux": true
    },
    {
      "id": "anm",
      "label": "Deluxe Paint Animation",
      "demux": true,
      "mux": false
    },
    {
      "id": "apc",
      "label": "CRYO APC",
      "demux": true,
      "mux": false
    },
    {
      "id": "ape",
      "label": "Monkey's Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "apm",
      "label": "Ubisoft Rayman 2 APM",
      "demux": true,
      "mux": true
    },
    {
      "id": "apng",
      "label": "Animated Portable Network Graphics",
      "demux": true,
      "mux": true
    },
    {
      "id": "aptx",
      "label": "raw aptX (Audio Processing Technology for Bluetooth)",
      "demux": true,
      "mux": true
    },
    {
      "id": "aptx_hd",
      "label": "raw aptX HD (Audio Processing Technology for Bluetooth)",
      "demux": true,
      "mux": true
    },
    {
      "id": "aqtitle",
      "label": "AQTitle subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "argo_asf",
      "label": "Argonaut Games ASF",
      "demux": true,
      "mux": true
    },
    {
      "id": "argo_brp",
      "label": "Argonaut Games BRP",
      "demux": true,
      "mux": false
    },
    {
      "id": "asf",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "asf_o",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "asf_stream",
      "label": "ASF (Advanced / Active Streaming Format)",
      "demux": false,
      "mux": true
    },
    {
      "id": "ass",
      "label": "SSA (SubStation Alpha) subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "ast",
      "label": "AST (Audio Stream)",
      "demux": true,
      "mux": true
    },
    {
      "id": "au",
      "label": "Sun AU",
      "demux": true,
      "mux": true
    },
    {
      "id": "av1",
      "label": "AV1 Annex B",
      "demux": true,
      "mux": false
    },
    {
      "id": "avi",
      "label": "AVI (Audio Video Interleaved)",
      "demux": true,
      "mux": true
    },
    {
      "id": "avm2",
      "label": "SWF (ShockWave Flash) (AVM2)",
      "demux": false,
      "mux": true
    },
    {
      "id": "avr",
      "label": "AVR (Audio Visual Research)",
      "demux": true,
      "mux": false
    },
    {
      "id": "avs",
      "label": "Argonaut Games Creature Shock",
      "demux": true,
      "mux": false
    },
    {
      "id": "avs2",
      "label": "raw AVS2-P2/IEEE1857.4 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "avs3",
      "label": "raw AVS3-P2/IEEE1857.10",
      "demux": true,
      "mux": false
    },
    {
      "id": "bethsoftvid",
      "label": "Bethesda Softworks VID",
      "demux": true,
      "mux": false
    },
    {
      "id": "bfi",
      "label": "Brute Force & Ignorance",
      "demux": true,
      "mux": false
    },
    {
      "id": "bfstm",
      "label": "BFSTM (Binary Cafe Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "bin",
      "label": "Binary text",
      "demux": true,
      "mux": false
    },
    {
      "id": "bink",
      "label": "Bink",
      "demux": true,
      "mux": false
    },
    {
      "id": "binka",
      "label": "Bink Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "bit",
      "label": "G.729 BIT file format",
      "demux": true,
      "mux": true
    },
    {
      "id": "bmp_pipe",
      "label": "piped bmp sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "bmv",
      "label": "Discworld II BMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "boa",
      "label": "Black Ops Audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "brender_pix",
      "label": "BRender PIX image",
      "demux": true,
      "mux": false
    },
    {
      "id": "brstm",
      "label": "BRSTM (Binary Revolution Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "c93",
      "label": "Interplay C93",
      "demux": true,
      "mux": false
    },
    {
      "id": "caca",
      "label": "caca (color ASCII art) output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "caf",
      "label": "Apple CAF (Core Audio Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "cavsvideo",
      "label": "raw Chinese AVS (Audio Video Standard) video",
      "demux": true,
      "mux": true
    },
    {
      "id": "cdg",
      "label": "CD Graphics",
      "demux": true,
      "mux": false
    },
    {
      "id": "cdxl",
      "label": "Commodore CDXL video",
      "demux": true,
      "mux": false
    },
    {
      "id": "chromaprint",
      "label": "Chromaprint",
      "demux": false,
      "mux": true
    },
    {
      "id": "cine",
      "label": "Phantom Cine",
      "demux": true,
      "mux": false
    },
    {
      "id": "codec2",
      "label": "codec2 .c2 muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "codec2raw",
      "label": "raw codec2 muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "concat",
      "label": "Virtual concatenation script",
      "demux": true,
      "mux": false
    },
    {
      "id": "crc",
      "label": "CRC testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "cri_pipe",
      "label": "piped cri sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "dash",
      "label": "DASH Muxer",
      "demux": true,
      "mux": true
    },
    {
      "id": "data",
      "label": "raw data",
      "demux": true,
      "mux": true
    },
    {
      "id": "daud",
      "label": "D-Cinema audio",
      "demux": true,
      "mux": true
    },
    {
      "id": "dcstr",
      "label": "Sega DC STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "dds_pipe",
      "label": "piped dds sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "derf",
      "label": "Xilam DERF",
      "demux": true,
      "mux": false
    },
    {
      "id": "dfa",
      "label": "Chronomaster DFA",
      "demux": true,
      "mux": false
    },
    {
      "id": "dhav",
      "label": "Video DAV",
      "demux": true,
      "mux": false
    },
    {
      "id": "dirac",
      "label": "raw Dirac",
      "demux": true,
      "mux": true
    },
    {
      "id": "dnxhd",
      "label": "raw DNxHD (SMPTE VC-3)",
      "demux": true,
      "mux": true
    },
    {
      "id": "dpx_pipe",
      "label": "piped dpx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "dsf",
      "label": "DSD Stream File (DSF)",
      "demux": true,
      "mux": false
    },
    {
      "id": "dsicin",
      "label": "Delphine Software International CIN",
      "demux": true,
      "mux": false
    },
    {
      "id": "dss",
      "label": "Digital Speech Standard (DSS)",
      "demux": true,
      "mux": false
    },
    {
      "id": "dts",
      "label": "raw DTS",
      "demux": true,
      "mux": true
    },
    {
      "id": "dtshd",
      "label": "raw DTS-HD",
      "demux": true,
      "mux": false
    },
    {
      "id": "dv",
      "label": "DV (Digital Video)",
      "demux": true,
      "mux": true
    },
    {
      "id": "dvbsub",
      "label": "raw dvbsub",
      "demux": true,
      "mux": false
    },
    {
      "id": "dvbtxt",
      "label": "dvbtxt",
      "demux": true,
      "mux": false
    },
    {
      "id": "dvd",
      "label": "MPEG-2 PS (DVD VOB)",
      "demux": false,
      "mux": true
    },
    {
      "id": "dxa",
      "label": "DXA",
      "demux": true,
      "mux": false
    },
    {
      "id": "ea",
      "label": "Electronic Arts Multimedia",
      "demux": true,
      "mux": false
    },
    {
      "id": "ea_cdata",
      "label": "Electronic Arts cdata",
      "demux": true,
      "mux": false
    },
    {
      "id": "eac3",
      "label": "raw E-AC-3",
      "demux": true,
      "mux": true
    },
    {
      "id": "epaf",
      "label": "Ensoniq Paris Audio File",
      "demux": true,
      "mux": false
    },
    {
      "id": "exr_pipe",
      "label": "piped exr sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "f32be",
      "label": "PCM 32-bit floating-point big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f32le",
      "label": "PCM 32-bit floating-point little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f4v",
      "label": "F4V Adobe Flash Video",
      "demux": false,
      "mux": true
    },
    {
      "id": "f64be",
      "label": "PCM 64-bit floating-point big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "f64le",
      "label": "PCM 64-bit floating-point little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "fbdev",
      "label": "Linux framebuffer",
      "demux": true,
      "mux": true
    },
    {
      "id": "ffmetadata",
      "label": "FFmpeg metadata in text",
      "demux": true,
      "mux": true
    },
    {
      "id": "fifo",
      "label": "FIFO queue pseudo-muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "fifo_test",
      "label": "Fifo test muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "film_cpk",
      "label": "Sega FILM / CPK",
      "demux": true,
      "mux": true
    },
    {
      "id": "filmstrip",
      "label": "Adobe Filmstrip",
      "demux": true,
      "mux": true
    },
    {
      "id": "fits",
      "label": "Flexible Image Transport System",
      "demux": true,
      "mux": true
    },
    {
      "id": "flac",
      "label": "raw FLAC",
      "demux": true,
      "mux": true
    },
    {
      "id": "flic",
      "label": "FLI/FLC/FLX animation",
      "demux": true,
      "mux": false
    },
    {
      "id": "flv",
      "label": "FLV (Flash Video)",
      "demux": true,
      "mux": true
    },
    {
      "id": "framecrc",
      "label": "framecrc testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "framehash",
      "label": "Per-frame hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "framemd5",
      "label": "Per-frame MD5 testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "frm",
      "label": "Megalux Frame",
      "demux": true,
      "mux": false
    },
    {
      "id": "fsb",
      "label": "FMOD Sample Bank",
      "demux": true,
      "mux": false
    },
    {
      "id": "fwse",
      "label": "Capcom's MT Framework sound",
      "demux": true,
      "mux": false
    },
    {
      "id": "g722",
      "label": "raw G.722",
      "demux": true,
      "mux": true
    },
    {
      "id": "g723_1",
      "label": "raw G.723.1",
      "demux": true,
      "mux": true
    },
    {
      "id": "g726",
      "label": "raw big-endian G.726 (\"left-justified\")",
      "demux": true,
      "mux": true
    },
    {
      "id": "g726le",
      "label": "raw little-endian G.726 (\"right-justified\")",
      "demux": true,
      "mux": true
    },
    {
      "id": "g729",
      "label": "G.729 raw format demuxer",
      "demux": true,
      "mux": false
    },
    {
      "id": "gdv",
      "label": "Gremlin Digital Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "genh",
      "label": "GENeric Header",
      "demux": true,
      "mux": false
    },
    {
      "id": "gif",
      "label": "CompuServe Graphics Interchange Format (GIF)",
      "demux": true,
      "mux": true
    },
    {
      "id": "gif_pipe",
      "label": "piped gif sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "gsm",
      "label": "raw GSM",
      "demux": true,
      "mux": true
    },
    {
      "id": "gxf",
      "label": "GXF (General eXchange Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "h261",
      "label": "raw H.261",
      "demux": true,
      "mux": true
    },
    {
      "id": "h263",
      "label": "raw H.263",
      "demux": true,
      "mux": true
    },
    {
      "id": "h264",
      "label": "raw H.264 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "hash",
      "label": "Hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "hca",
      "label": "CRI HCA",
      "demux": true,
      "mux": false
    },
    {
      "id": "hcom",
      "label": "Macintosh HCOM",
      "demux": true,
      "mux": false
    },
    {
      "id": "hds",
      "label": "HDS Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "hevc",
      "label": "raw HEVC video",
      "demux": true,
      "mux": true
    },
    {
      "id": "hls",
      "label": "Apple HTTP Live Streaming",
      "demux": true,
      "mux": true
    },
    {
      "id": "hnm",
      "label": "Cryo HNM v4",
      "demux": true,
      "mux": false
    },
    {
      "id": "ico",
      "label": "Microsoft Windows ICO",
      "demux": true,
      "mux": true
    },
    {
      "id": "idcin",
      "label": "id Cinematic",
      "demux": true,
      "mux": false
    },
    {
      "id": "idf",
      "label": "iCE Draw File",
      "demux": true,
      "mux": false
    },
    {
      "id": "iec61883",
      "label": "libiec61883 (new DV1394) A/V input device",
      "demux": true,
      "mux": false
    },
    {
      "id": "iff",
      "label": "IFF (Interchange File Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "ifv",
      "label": "IFV CCTV DVR",
      "demux": true,
      "mux": false
    },
    {
      "id": "ilbc",
      "label": "iLBC storage",
      "demux": true,
      "mux": true
    },
    {
      "id": "image2",
      "label": "image2 sequence",
      "demux": true,
      "mux": true
    },
    {
      "id": "image2pipe",
      "label": "piped image2 sequence",
      "demux": true,
      "mux": true
    },
    {
      "id": "ingenient",
      "label": "raw Ingenient MJPEG",
      "demux": true,
      "mux": false
    },
    {
      "id": "ipmovie",
      "label": "Interplay MVE",
      "demux": true,
      "mux": false
    },
    {
      "id": "ipod",
      "label": "iPod H.264 MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "ipu",
      "label": "raw IPU Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "ircam",
      "label": "Berkeley/IRCAM/CARL Sound Format",
      "demux": true,
      "mux": true
    },
    {
      "id": "ismv",
      "label": "ISMV/ISMA (Smooth Streaming)",
      "demux": false,
      "mux": true
    },
    {
      "id": "iss",
      "label": "Funcom ISS",
      "demux": true,
      "mux": false
    },
    {
      "id": "iv8",
      "label": "IndigoVision 8000 video",
      "demux": true,
      "mux": false
    },
    {
      "id": "ivf",
      "label": "On2 IVF",
      "demux": true,
      "mux": true
    },
    {
      "id": "ivr",
      "label": "IVR (Internet Video Recording)",
      "demux": true,
      "mux": false
    },
    {
      "id": "j2k_pipe",
      "label": "piped j2k sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jack",
      "label": "JACK Audio Connection Kit",
      "demux": true,
      "mux": false
    },
    {
      "id": "jacosub",
      "label": "JACOsub subtitle format",
      "demux": true,
      "mux": true
    },
    {
      "id": "jpeg_pipe",
      "label": "piped jpeg sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jpegls_pipe",
      "label": "piped jpegls sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "jv",
      "label": "Bitmap Brothers JV",
      "demux": true,
      "mux": false
    },
    {
      "id": "kmsgrab",
      "label": "KMS screen capture",
      "demux": true,
      "mux": false
    },
    {
      "id": "kux",
      "label": "KUX (YouKu)",
      "demux": true,
      "mux": false
    },
    {
      "id": "kvag",
      "label": "Simon & Schuster Interactive VAG",
      "demux": true,
      "mux": true
    },
    {
      "id": "latm",
      "label": "LOAS/LATM",
      "demux": false,
      "mux": true
    },
    {
      "id": "lavfi",
      "label": "Libavfilter virtual input device",
      "demux": true,
      "mux": false
    },
    {
      "id": "libcdio",
      "label": "",
      "demux": true,
      "mux": false
    },
    {
      "id": "libdc1394",
      "label": "dc1394 v.2 A/V grab",
      "demux": true,
      "mux": false
    },
    {
      "id": "libgme",
      "label": "Game Music Emu demuxer",
      "demux": true,
      "mux": false
    },
    {
      "id": "libopenmpt",
      "label": "Tracker formats (libopenmpt)",
      "demux": true,
      "mux": false
    },
    {
      "id": "live_flv",
      "label": "live RTMP FLV (Flash Video)",
      "demux": true,
      "mux": false
    },
    {
      "id": "lmlm4",
      "label": "raw lmlm4",
      "demux": true,
      "mux": false
    },
    {
      "id": "loas",
      "label": "LOAS AudioSyncStream",
      "demux": true,
      "mux": false
    },
    {
      "id": "lrc",
      "label": "LRC lyrics",
      "demux": true,
      "mux": true
    },
    {
      "id": "luodat",
      "label": "Video CCTV DAT",
      "demux": true,
      "mux": false
    },
    {
      "id": "lvf",
      "label": "LVF",
      "demux": true,
      "mux": false
    },
    {
      "id": "lxf",
      "label": "VR native stream (LXF)",
      "demux": true,
      "mux": false
    },
    {
      "id": "m4v",
      "label": "raw MPEG-4 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "matroska",
      "label": "Matroska",
      "demux": false,
      "mux": true
    },
    {
      "id": "matroska,webm",
      "label": "Matroska / WebM",
      "demux": true,
      "mux": false
    },
    {
      "id": "mca",
      "label": "MCA Audio Format",
      "demux": true,
      "mux": false
    },
    {
      "id": "mcc",
      "label": "MacCaption",
      "demux": true,
      "mux": false
    },
    {
      "id": "md5",
      "label": "MD5 testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "mgsts",
      "label": "Metal Gear Solid: The Twin Snakes",
      "demux": true,
      "mux": false
    },
    {
      "id": "microdvd",
      "label": "MicroDVD subtitle format",
      "demux": true,
      "mux": true
    },
    {
      "id": "mjpeg",
      "label": "raw MJPEG video",
      "demux": true,
      "mux": true
    },
    {
      "id": "mjpeg_2000",
      "label": "raw MJPEG 2000 video",
      "demux": true,
      "mux": false
    },
    {
      "id": "mkvtimestamp_v2",
      "label": "extract pts as timecode v2 format, as defined by mkvtoolnix",
      "demux": false,
      "mux": true
    },
    {
      "id": "mlp",
      "label": "raw MLP",
      "demux": true,
      "mux": true
    },
    {
      "id": "mlv",
      "label": "Magic Lantern Video (MLV)",
      "demux": true,
      "mux": false
    },
    {
      "id": "mm",
      "label": "American Laser Games MM",
      "demux": true,
      "mux": false
    },
    {
      "id": "mmf",
      "label": "Yamaha SMAF",
      "demux": true,
      "mux": true
    },
    {
      "id": "mods",
      "label": "MobiClip MODS",
      "demux": true,
      "mux": false
    },
    {
      "id": "moflex",
      "label": "MobiClip MOFLEX",
      "demux": true,
      "mux": false
    },
    {
      "id": "mov",
      "label": "QuickTime / MOV",
      "demux": false,
      "mux": true
    },
    {
      "id": "mov,mp4,m4a,3gp,3g2,mj2",
      "label": "QuickTime / MOV",
      "demux": true,
      "mux": false
    },
    {
      "id": "mp2",
      "label": "MP2 (MPEG audio layer 2)",
      "demux": false,
      "mux": true
    },
    {
      "id": "mp3",
      "label": "MP3 (MPEG audio layer 3)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mp4",
      "label": "MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpc",
      "label": "Musepack",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpc8",
      "label": "Musepack SV8",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpeg",
      "label": "MPEG-1 Systems / MPEG program stream",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpeg1video",
      "label": "raw MPEG-1 video",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpeg2video",
      "label": "raw MPEG-2 video",
      "demux": false,
      "mux": true
    },
    {
      "id": "mpegts",
      "label": "MPEG-TS (MPEG-2 Transport Stream)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpegtsraw",
      "label": "raw MPEG-TS (MPEG-2 Transport Stream)",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpegvideo",
      "label": "raw MPEG video",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpjpeg",
      "label": "MIME multipart JPEG",
      "demux": true,
      "mux": true
    },
    {
      "id": "mpl2",
      "label": "MPL2 subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "mpsub",
      "label": "MPlayer subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "msf",
      "label": "Sony PS3 MSF",
      "demux": true,
      "mux": false
    },
    {
      "id": "msnwctcp",
      "label": "MSN TCP Webcam stream",
      "demux": true,
      "mux": false
    },
    {
      "id": "msp",
      "label": "Microsoft Paint (MSP))",
      "demux": true,
      "mux": false
    },
    {
      "id": "mtaf",
      "label": "Konami PS2 MTAF",
      "demux": true,
      "mux": false
    },
    {
      "id": "mtv",
      "label": "MTV",
      "demux": true,
      "mux": false
    },
    {
      "id": "mulaw",
      "label": "PCM mu-law",
      "demux": true,
      "mux": true
    },
    {
      "id": "musx",
      "label": "Eurocom MUSX",
      "demux": true,
      "mux": false
    },
    {
      "id": "mv",
      "label": "Silicon Graphics Movie",
      "demux": true,
      "mux": false
    },
    {
      "id": "mvi",
      "label": "Motion Pixels MVI",
      "demux": true,
      "mux": false
    },
    {
      "id": "mxf",
      "label": "MXF (Material eXchange Format)",
      "demux": true,
      "mux": true
    },
    {
      "id": "mxf_d10",
      "label": "MXF (Material eXchange Format) D-10 Mapping",
      "demux": false,
      "mux": true
    },
    {
      "id": "mxf_opatom",
      "label": "MXF (Material eXchange Format) Operational Pattern Atom",
      "demux": false,
      "mux": true
    },
    {
      "id": "mxg",
      "label": "MxPEG clip",
      "demux": true,
      "mux": false
    },
    {
      "id": "nc",
      "label": "NC camera feed",
      "demux": true,
      "mux": false
    },
    {
      "id": "nistsphere",
      "label": "NIST SPeech HEader REsources",
      "demux": true,
      "mux": false
    },
    {
      "id": "nsp",
      "label": "Computerized Speech Lab NSP",
      "demux": true,
      "mux": false
    },
    {
      "id": "nsv",
      "label": "Nullsoft Streaming Video",
      "demux": true,
      "mux": false
    },
    {
      "id": "null",
      "label": "raw null video",
      "demux": false,
      "mux": true
    },
    {
      "id": "nut",
      "label": "NUT",
      "demux": true,
      "mux": true
    },
    {
      "id": "nuv",
      "label": "NuppelVideo",
      "demux": true,
      "mux": false
    },
    {
      "id": "obu",
      "label": "AV1 low overhead OBU",
      "demux": true,
      "mux": false
    },
    {
      "id": "oga",
      "label": "Ogg Audio",
      "demux": false,
      "mux": true
    },
    {
      "id": "ogg",
      "label": "Ogg",
      "demux": true,
      "mux": true
    },
    {
      "id": "ogv",
      "label": "Ogg Video",
      "demux": false,
      "mux": true
    },
    {
      "id": "oma",
      "label": "Sony OpenMG audio",
      "demux": true,
      "mux": true
    },
    {
      "id": "openal",
      "label": "OpenAL audio capture device",
      "demux": true,
      "mux": false
    },
    {
      "id": "opengl",
      "label": "OpenGL output",
      "demux": false,
      "mux": true
    },
    {
      "id": "opus",
      "label": "Ogg Opus",
      "demux": false,
      "mux": true
    },
    {
      "id": "oss",
      "label": "OSS (Open Sound System) playback",
      "demux": true,
      "mux": true
    },
    {
      "id": "paf",
      "label": "Amazing Studio Packed Animation File",
      "demux": true,
      "mux": false
    },
    {
      "id": "pam_pipe",
      "label": "piped pam sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pbm_pipe",
      "label": "piped pbm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pcx_pipe",
      "label": "piped pcx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgm_pipe",
      "label": "piped pgm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgmyuv_pipe",
      "label": "piped pgmyuv sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pgx_pipe",
      "label": "piped pgx sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "photocd_pipe",
      "label": "piped photocd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pictor_pipe",
      "label": "piped pictor sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pjs",
      "label": "PJS (Phoenix Japanimation Society) subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "pmp",
      "label": "Playstation Portable PMP",
      "demux": true,
      "mux": false
    },
    {
      "id": "png_pipe",
      "label": "piped png sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "pp_bnk",
      "label": "Pro Pinball Series Soundbank",
      "demux": true,
      "mux": false
    },
    {
      "id": "ppm_pipe",
      "label": "piped ppm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "psd_pipe",
      "label": "piped psd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "psp",
      "label": "PSP MP4 (MPEG-4 Part 14)",
      "demux": false,
      "mux": true
    },
    {
      "id": "psxstr",
      "label": "Sony Playstation STR",
      "demux": true,
      "mux": false
    },
    {
      "id": "pulse",
      "label": "Pulse audio output",
      "demux": true,
      "mux": true
    },
    {
      "id": "pva",
      "label": "TechnoTrend PVA",
      "demux": true,
      "mux": false
    },
    {
      "id": "pvf",
      "label": "PVF (Portable Voice Format)",
      "demux": true,
      "mux": false
    },
    {
      "id": "qcp",
      "label": "QCP",
      "demux": true,
      "mux": false
    },
    {
      "id": "qdraw_pipe",
      "label": "piped qdraw sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "r3d",
      "label": "REDCODE R3D",
      "demux": true,
      "mux": false
    },
    {
      "id": "rawvideo",
      "label": "raw video",
      "demux": true,
      "mux": true
    },
    {
      "id": "realtext",
      "label": "RealText subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "redspark",
      "label": "RedSpark",
      "demux": true,
      "mux": false
    },
    {
      "id": "rl2",
      "label": "RL2",
      "demux": true,
      "mux": false
    },
    {
      "id": "rm",
      "label": "RealMedia",
      "demux": true,
      "mux": true
    },
    {
      "id": "roq",
      "label": "raw id RoQ",
      "demux": true,
      "mux": true
    },
    {
      "id": "rpl",
      "label": "RPL / ARMovie",
      "demux": true,
      "mux": false
    },
    {
      "id": "rsd",
      "label": "GameCube RSD",
      "demux": true,
      "mux": false
    },
    {
      "id": "rso",
      "label": "Lego Mindstorms RSO",
      "demux": true,
      "mux": true
    },
    {
      "id": "rtp",
      "label": "RTP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "rtp_mpegts",
      "label": "RTP/mpegts output format",
      "demux": false,
      "mux": true
    },
    {
      "id": "rtsp",
      "label": "RTSP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "s16be",
      "label": "PCM signed 16-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s16le",
      "label": "PCM signed 16-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s24be",
      "label": "PCM signed 24-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s24le",
      "label": "PCM signed 24-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s32be",
      "label": "PCM signed 32-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s32le",
      "label": "PCM signed 32-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "s337m",
      "label": "SMPTE 337M",
      "demux": true,
      "mux": false
    },
    {
      "id": "s8",
      "label": "PCM signed 8-bit",
      "demux": true,
      "mux": true
    },
    {
      "id": "sami",
      "label": "SAMI subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "sap",
      "label": "SAP output",
      "demux": true,
      "mux": true
    },
    {
      "id": "sbc",
      "label": "raw SBC",
      "demux": true,
      "mux": true
    },
    {
      "id": "sbg",
      "label": "SBaGen binaural beats script",
      "demux": true,
      "mux": false
    },
    {
      "id": "scc",
      "label": "Scenarist Closed Captions",
      "demux": true,
      "mux": true
    },
    {
      "id": "sdl,sdl2",
      "label": "SDL2 output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "sdp",
      "label": "SDP",
      "demux": true,
      "mux": false
    },
    {
      "id": "sdr2",
      "label": "SDR2",
      "demux": true,
      "mux": false
    },
    {
      "id": "sds",
      "label": "MIDI Sample Dump Standard",
      "demux": true,
      "mux": false
    },
    {
      "id": "sdx",
      "label": "Sample Dump eXchange",
      "demux": true,
      "mux": false
    },
    {
      "id": "segment",
      "label": "segment",
      "demux": false,
      "mux": true
    },
    {
      "id": "ser",
      "label": "SER (Simple uncompressed video format for astronomical capturing)",
      "demux": true,
      "mux": false
    },
    {
      "id": "sga",
      "label": "Digital Pictures SGA",
      "demux": true,
      "mux": false
    },
    {
      "id": "sgi_pipe",
      "label": "piped sgi sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "shn",
      "label": "raw Shorten",
      "demux": true,
      "mux": false
    },
    {
      "id": "siff",
      "label": "Beam Software SIFF",
      "demux": true,
      "mux": false
    },
    {
      "id": "simbiosis_imx",
      "label": "Simbiosis Interactive IMX",
      "demux": true,
      "mux": false
    },
    {
      "id": "singlejpeg",
      "label": "JPEG single image",
      "demux": false,
      "mux": true
    },
    {
      "id": "sln",
      "label": "Asterisk raw pcm",
      "demux": true,
      "mux": false
    },
    {
      "id": "smjpeg",
      "label": "Loki SDL MJPEG",
      "demux": true,
      "mux": true
    },
    {
      "id": "smk",
      "label": "Smacker",
      "demux": true,
      "mux": false
    },
    {
      "id": "smoothstreaming",
      "label": "Smooth Streaming Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "smush",
      "label": "LucasArts Smush",
      "demux": true,
      "mux": false
    },
    {
      "id": "sndio",
      "label": "sndio audio playback",
      "demux": true,
      "mux": true
    },
    {
      "id": "sol",
      "label": "Sierra SOL",
      "demux": true,
      "mux": false
    },
    {
      "id": "sox",
      "label": "SoX native",
      "demux": true,
      "mux": true
    },
    {
      "id": "spdif",
      "label": "IEC 61937 (used on S/PDIF - IEC958)",
      "demux": true,
      "mux": true
    },
    {
      "id": "spx",
      "label": "Ogg Speex",
      "demux": false,
      "mux": true
    },
    {
      "id": "srt",
      "label": "SubRip subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "stl",
      "label": "Spruce subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "stream_segment,ssegment",
      "label": "streaming segment muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "streamhash",
      "label": "Per-stream hash testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "subviewer",
      "label": "SubViewer subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "subviewer1",
      "label": "SubViewer v1 subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "sunrast_pipe",
      "label": "piped sunrast sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "sup",
      "label": "raw HDMV Presentation Graphic Stream subtitles",
      "demux": true,
      "mux": true
    },
    {
      "id": "svag",
      "label": "Konami PS2 SVAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "svcd",
      "label": "MPEG-2 PS (SVCD)",
      "demux": false,
      "mux": true
    },
    {
      "id": "svg_pipe",
      "label": "piped svg sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "svs",
      "label": "Square SVS",
      "demux": true,
      "mux": false
    },
    {
      "id": "swf",
      "label": "SWF (ShockWave Flash)",
      "demux": true,
      "mux": true
    },
    {
      "id": "tak",
      "label": "raw TAK",
      "demux": true,
      "mux": false
    },
    {
      "id": "tedcaptions",
      "label": "TED Talks captions",
      "demux": true,
      "mux": false
    },
    {
      "id": "tee",
      "label": "Multiple muxer tee",
      "demux": false,
      "mux": true
    },
    {
      "id": "thp",
      "label": "THP",
      "demux": true,
      "mux": false
    },
    {
      "id": "tiertexseq",
      "label": "Tiertex Limited SEQ",
      "demux": true,
      "mux": false
    },
    {
      "id": "tiff_pipe",
      "label": "piped tiff sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "tmv",
      "label": "8088flex TMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "truehd",
      "label": "raw TrueHD",
      "demux": true,
      "mux": true
    },
    {
      "id": "tta",
      "label": "TTA (True Audio)",
      "demux": true,
      "mux": true
    },
    {
      "id": "ttml",
      "label": "TTML subtitle",
      "demux": false,
      "mux": true
    },
    {
      "id": "tty",
      "label": "Tele-typewriter",
      "demux": true,
      "mux": false
    },
    {
      "id": "txd",
      "label": "Renderware TeXture Dictionary",
      "demux": true,
      "mux": false
    },
    {
      "id": "ty",
      "label": "TiVo TY Stream",
      "demux": true,
      "mux": false
    },
    {
      "id": "u16be",
      "label": "PCM unsigned 16-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u16le",
      "label": "PCM unsigned 16-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u24be",
      "label": "PCM unsigned 24-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u24le",
      "label": "PCM unsigned 24-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u32be",
      "label": "PCM unsigned 32-bit big-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u32le",
      "label": "PCM unsigned 32-bit little-endian",
      "demux": true,
      "mux": true
    },
    {
      "id": "u8",
      "label": "PCM unsigned 8-bit",
      "demux": true,
      "mux": true
    },
    {
      "id": "uncodedframecrc",
      "label": "uncoded framecrc testing",
      "demux": false,
      "mux": true
    },
    {
      "id": "v210",
      "label": "Uncompressed 4:2:2 10-bit",
      "demux": true,
      "mux": false
    },
    {
      "id": "v210x",
      "label": "Uncompressed 4:2:2 10-bit",
      "demux": true,
      "mux": false
    },
    {
      "id": "vag",
      "label": "Sony PS2 VAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "vc1",
      "label": "raw VC-1 video",
      "demux": true,
      "mux": true
    },
    {
      "id": "vc1test",
      "label": "VC-1 test bitstream",
      "demux": true,
      "mux": true
    },
    {
      "id": "vcd",
      "label": "MPEG-1 Systems / MPEG program stream (VCD)",
      "demux": false,
      "mux": true
    },
    {
      "id": "vidc",
      "label": "PCM Archimedes VIDC",
      "demux": true,
      "mux": true
    },
    {
      "id": "video4linux2,v4l2",
      "label": "Video4Linux2 output device",
      "demux": true,
      "mux": true
    },
    {
      "id": "vividas",
      "label": "Vividas VIV",
      "demux": true,
      "mux": false
    },
    {
      "id": "vivo",
      "label": "Vivo",
      "demux": true,
      "mux": false
    },
    {
      "id": "vmd",
      "label": "Sierra VMD",
      "demux": true,
      "mux": false
    },
    {
      "id": "vob",
      "label": "MPEG-2 PS (VOB)",
      "demux": false,
      "mux": true
    },
    {
      "id": "vobsub",
      "label": "VobSub subtitle format",
      "demux": true,
      "mux": false
    },
    {
      "id": "voc",
      "label": "Creative Voice",
      "demux": true,
      "mux": true
    },
    {
      "id": "vpk",
      "label": "Sony PS2 VPK",
      "demux": true,
      "mux": false
    },
    {
      "id": "vplayer",
      "label": "VPlayer subtitles",
      "demux": true,
      "mux": false
    },
    {
      "id": "vqf",
      "label": "Nippon Telegraph and Telephone Corporation (NTT) TwinVQ",
      "demux": true,
      "mux": false
    },
    {
      "id": "w64",
      "label": "Sony Wave64",
      "demux": true,
      "mux": true
    },
    {
      "id": "wav",
      "label": "WAV / WAVE (Waveform Audio)",
      "demux": true,
      "mux": true
    },
    {
      "id": "wc3movie",
      "label": "Wing Commander III movie",
      "demux": true,
      "mux": false
    },
    {
      "id": "webm",
      "label": "WebM",
      "demux": false,
      "mux": true
    },
    {
      "id": "webm_chunk",
      "label": "WebM Chunk Muxer",
      "demux": false,
      "mux": true
    },
    {
      "id": "webm_dash_manifest",
      "label": "WebM DASH Manifest",
      "demux": true,
      "mux": true
    },
    {
      "id": "webp",
      "label": "WebP",
      "demux": false,
      "mux": true
    },
    {
      "id": "webp_pipe",
      "label": "piped webp sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "webvtt",
      "label": "WebVTT subtitle",
      "demux": true,
      "mux": true
    },
    {
      "id": "wsaud",
      "label": "Westwood Studios audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "wsd",
      "label": "Wideband Single-bit Data (WSD)",
      "demux": true,
      "mux": false
    },
    {
      "id": "wsvqa",
      "label": "Westwood Studios VQA",
      "demux": true,
      "mux": false
    },
    {
      "id": "wtv",
      "label": "Windows Television (WTV)",
      "demux": true,
      "mux": true
    },
    {
      "id": "wv",
      "label": "raw WavPack",
      "demux": true,
      "mux": true
    },
    {
      "id": "wve",
      "label": "Psion 3 audio",
      "demux": true,
      "mux": false
    },
    {
      "id": "x11grab",
      "label": "X11 screen capture, using XCB",
      "demux": true,
      "mux": false
    },
    {
      "id": "xa",
      "label": "Maxis XA",
      "demux": true,
      "mux": false
    },
    {
      "id": "xbin",
      "label": "eXtended BINary text (XBIN)",
      "demux": true,
      "mux": false
    },
    {
      "id": "xbm_pipe",
      "label": "piped xbm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xmv",
      "label": "Microsoft XMV",
      "demux": true,
      "mux": false
    },
    {
      "id": "xpm_pipe",
      "label": "piped xpm sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xv",
      "label": "XV (XVideo) output device",
      "demux": false,
      "mux": true
    },
    {
      "id": "xvag",
      "label": "Sony PS3 XVAG",
      "demux": true,
      "mux": false
    },
    {
      "id": "xwd_pipe",
      "label": "piped xwd sequence",
      "demux": true,
      "mux": false
    },
    {
      "id": "xwma",
      "label": "Microsoft xWMA",
      "demux": true,
      "mux": false
    },
    {
      "id": "yop",
      "label": "Psygnosis YOP",
      "demux": true,
      "mux": false
    },
    {
      "id": "yuv4mpegpipe",
      "label": "YUV4MPEG pipe",
      "demux": true,
      "mux": true
    }
  ],
  "codecs": [
    {
      "id": "012v",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "4xm",
      "label": "4X Movie",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8bps",
      "label": "QuickTime 8BPS video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "a64_multi",
      "label": "Multicolor charset for Commodore 64 (encoders: a64multi )",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "a64_multi5",
      "label": "Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5 )",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aasc",
      "label": "Autodesk RLE",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "agm",
      "label": "Amuse Graphics Movie",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aic",
      "label": "Apple Intermediate Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "alias_pix",
      "label": "Alias/Wavefront PIX image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amv",
      "label": "AMV Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "anm",
      "label": "Deluxe Paint Animation",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ansi",
      "label": "ASCII/ANSI art",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "apng",
      "label": "APNG (Animated Portable Network Graphics) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "arbc",
      "label": "Gryphon's Anim Compressor",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "argo",
      "label": "Argonaut Games Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "asv1",
      "label": "ASUS V1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "asv2",
      "label": "ASUS V2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aura",
      "label": "Auravision AURA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aura2",
      "label": "Auravision Aura 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "av1",
      "label": "Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid av1_qsv ) (encoders: libaom-av1 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avrn",
      "label": "Avid AVI Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avrp",
      "label": "Avid 1:1 10-bit RGB Packer",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs",
      "label": "AVS (Audio Video Standard) video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs2",
      "label": "AVS2-P2/IEEE1857.4",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avs3",
      "label": "AVS3-P2/IEEE1857.10",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avui",
      "label": "Avid Meridien Uncompressed",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ayuv",
      "label": "Uncompressed packed MS 4:4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bethsoftvid",
      "label": "Bethesda VID video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bfi",
      "label": "Brute Force & Ignorance",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkvideo",
      "label": "Bink video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bintext",
      "label": "Binary text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bitpacked",
      "label": "Bitpacked",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmp",
      "label": "BMP (Windows and OS/2 bitmap)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmv_video",
      "label": "Discworld II BMV video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "brender_pix",
      "label": "BRender PIX image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "c93",
      "label": "Interplay C93",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cavs",
      "label": "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdgraphics",
      "label": "CD Graphics video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdtoons",
      "label": "CDToons video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cdxl",
      "label": "Commodore CDXL video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cfhd",
      "label": "GoPro CineForm HD",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cinepak",
      "label": "Cinepak",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "clearvideo",
      "label": "Iterated Systems ClearVideo",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cljr",
      "label": "Cirrus Logic AccuPak",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cllc",
      "label": "Canopus Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cmv",
      "label": "Electronic Arts CMV video (decoders: eacmv )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cpia",
      "label": "CPiA video format",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cri",
      "label": "Cintel RAW",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cscd",
      "label": "CamStudio (decoders: camstudio )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cyuv",
      "label": "Creative YUV (CYUV)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "daala",
      "label": "Daala",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dds",
      "label": "DirectDraw Surface image decoder",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dfa",
      "label": "Chronomaster DFA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dirac",
      "label": "Dirac (encoders: vc2 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dnxhd",
      "label": "VC3/DNxHD",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dpx",
      "label": "DPX (Digital Picture Exchange) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsicinvideo",
      "label": "Delphine Software International CIN video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvvideo",
      "label": "DV (Digital Video)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxa",
      "label": "Feeble Files/ScummVM DXA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxtory",
      "label": "Dxtory",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dxv",
      "label": "Resolume DXV",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "escape124",
      "label": "Escape 124",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "escape130",
      "label": "Escape 130",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "exr",
      "label": "OpenEXR image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ffv1",
      "label": "FFmpeg video codec #1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ffvhuff",
      "label": "Huffyuv FFmpeg variant",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fic",
      "label": "Mirillis FIC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fits",
      "label": "FITS (Flexible Image Transport System)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flashsv",
      "label": "Flash Screen Video v1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flashsv2",
      "label": "Flash Screen Video v2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flic",
      "label": "Autodesk Animator Flic video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flv1",
      "label": "FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv ) (encoders: flv )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fmvc",
      "label": "FM Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fraps",
      "label": "Fraps",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "frwu",
      "label": "Forward Uncompressed",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g2m",
      "label": "Go2Meeting",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gdv",
      "label": "Gremlin Digital Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gif",
      "label": "CompuServe GIF (Graphics Interchange Format)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h261",
      "label": "H.261",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263",
      "label": "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2 (decoders: h263 h263_v4l2m2m ) (encoders: h263 h263_v4l2m2m )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263i",
      "label": "Intel H.263",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h263p",
      "label": "H.263+ / H.263-1998 / H.263 version 2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "h264",
      "label": "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_qsv h264_cuvid ) (encoders: libx264 libx264rgb h264_nvenc h264_omx h264_qsv h264_v4l2m2m h264_vaapi nvenc nvenc_h264 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hap",
      "label": "Vidvox Hap",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hevc",
      "label": "H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_qsv hevc_v4l2m2m hevc_cuvid ) (encoders: libx265 nvenc_hevc hevc_nvenc hevc_qsv hevc_v4l2m2m hevc_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hnm4video",
      "label": "HNM 4 video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hq_hqa",
      "label": "Canopus HQ/HQA",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hqx",
      "label": "Canopus HQX",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "huffyuv",
      "label": "HuffYUV",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hymt",
      "label": "HuffYUV MT",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "idcin",
      "label": "id Quake II CIN video (decoders: idcinvideo )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "idf",
      "label": "iCEDraw text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "iff_ilbm",
      "label": "IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imm4",
      "label": "Infinity IMM4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imm5",
      "label": "Infinity IMM5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo2",
      "label": "Intel Indeo 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo3",
      "label": "Intel Indeo 3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo4",
      "label": "Intel Indeo Video Interactive 4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "indeo5",
      "label": "Intel Indeo Video Interactive 5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplayvideo",
      "label": "Interplay MVE video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ipu",
      "label": "IPU Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jpeg2000",
      "label": "JPEG 2000 (decoders: jpeg2000 libopenjpeg ) (encoders: jpeg2000 libopenjpeg )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jpegls",
      "label": "JPEG-LS",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jv",
      "label": "Bitmap Brothers JV video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "kgv1",
      "label": "Kega Game Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "kmvc",
      "label": "Karl Morton's video codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "lagarith",
      "label": "Lagarith lossless",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ljpeg",
      "label": "Lossless JPEG",
      "decode": false,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "loco",
      "label": "LOCO",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "lscr",
      "label": "LEAD Screen Capture",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "m101",
      "label": "Matrox Uncompressed SD",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mad",
      "label": "Electronic Arts Madcow Video (decoders: eamad )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "magicyuv",
      "label": "MagicYUV video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mdec",
      "label": "Sony PlayStation MDEC (Motion DECoder)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mimic",
      "label": "Mimic",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mjpeg",
      "label": "Motion JPEG (decoders: mjpeg mjpeg_cuvid mjpeg_qsv ) (encoders: mjpeg mjpeg_qsv mjpeg_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mjpegb",
      "label": "Apple MJPEG-B",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mmvideo",
      "label": "American Laser Games MM Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mobiclip",
      "label": "MobiClip Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "motionpixels",
      "label": "Motion Pixels video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg1video",
      "label": "MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg2video",
      "label": "MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_qsv mpeg2_cuvid ) (encoders: mpeg2video mpeg2_qsv mpeg2_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpeg4",
      "label": "MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid ) (encoders: mpeg4 libxvid mpeg4_omx mpeg4_v4l2m2m )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msa1",
      "label": "MS ATC Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mscc",
      "label": "Mandsoft Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v1",
      "label": "MPEG-4 part 2 Microsoft variant version 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v2",
      "label": "MPEG-4 part 2 Microsoft variant version 2",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msmpeg4v3",
      "label": "MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4 ) (encoders: msmpeg4 )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msp2",
      "label": "Microsoft Paint (MSP) version 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msrle",
      "label": "Microsoft RLE",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mss1",
      "label": "MS Screen 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mss2",
      "label": "MS Windows Media Video V9 Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "msvideo1",
      "label": "Microsoft Video 1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mszh",
      "label": "LCL (LossLess Codec Library) MSZH",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mts2",
      "label": "MS Expression Encoder Screen",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mv30",
      "label": "MidiVid 3.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvc1",
      "label": "Silicon Graphics Motion Video Compressor 1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvc2",
      "label": "Silicon Graphics Motion Video Compressor 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvdv",
      "label": "MidiVid VQ",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mvha",
      "label": "MidiVid Archive Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mwsc",
      "label": "MatchWare Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mxpeg",
      "label": "Mobotix MxPEG video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "notchlc",
      "label": "NotchLC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "nuv",
      "label": "NuppelVideo/RTJPEG",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "paf_video",
      "label": "Amazing Studio Packed Animation File Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pam",
      "label": "PAM (Portable AnyMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pbm",
      "label": "PBM (Portable BitMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcx",
      "label": "PC Paintbrush PCX image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pfm",
      "label": "PFM (Portable FloatMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgm",
      "label": "PGM (Portable GrayMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgmyuv",
      "label": "PGMYUV (Portable GrayMap YUV) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pgx",
      "label": "PGX (JPEG2000 Test Format)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "photocd",
      "label": "Kodak Photo CD",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pictor",
      "label": "Pictor/PC Paint",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pixlet",
      "label": "Apple Pixlet",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "png",
      "label": "PNG (Portable Network Graphics) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ppm",
      "label": "PPM (Portable PixelMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "prores",
      "label": "Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "prosumer",
      "label": "Brooktree ProSumer Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "psd",
      "label": "Photoshop PSD file",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ptx",
      "label": "V.Flash PTX image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdraw",
      "label": "Apple QuickDraw",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qpeg",
      "label": "Q-team QPEG",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qtrle",
      "label": "QuickTime Animation (RLE) video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "r10k",
      "label": "AJA Kona 10-bit RGB Codec",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "r210",
      "label": "Uncompressed RGB 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rasc",
      "label": "RemotelyAnywhere Screen Capture",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rawvideo",
      "label": "raw video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rl2",
      "label": "RL2 video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "roq",
      "label": "id RoQ video (decoders: roqvideo ) (encoders: roqvideo )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rpza",
      "label": "QuickTime video (RPZA)",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rscc",
      "label": "innoHeim/Rsupport Screen Capture Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv10",
      "label": "RealVideo 1.0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv20",
      "label": "RealVideo 2.0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv30",
      "label": "RealVideo 3.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "rv40",
      "label": "RealVideo 4.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sanm",
      "label": "LucasArts SANM/SMUSH video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "scpr",
      "label": "ScreenPressor",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "screenpresso",
      "label": "Screenpresso",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sga",
      "label": "Digital Pictures SGA Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sgi",
      "label": "SGI image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sgirle",
      "label": "SGI RLE 8-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sheervideo",
      "label": "BitJazz SheerVideo",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "simbiosis_imx",
      "label": "Simbiosis Interactive IMX Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smackvideo",
      "label": "Smacker video (decoders: smackvid )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smc",
      "label": "QuickTime Graphics (SMC)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smvjpeg",
      "label": "Sigmatel Motion Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "snow",
      "label": "Snow",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sp5x",
      "label": "Sunplus JPEG (SP5X)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "speedhq",
      "label": "NewTek SpeedHQ",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "srgc",
      "label": "Screen Recorder Gold Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sunrast",
      "label": "Sun Rasterfile image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svg",
      "label": "Scalable Vector Graphics (decoders: librsvg )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svq1",
      "label": "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "svq3",
      "label": "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "targa",
      "label": "Truevision Targa image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "targa_y216",
      "label": "Pinnacle TARGA CineWave YUV16",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tdsc",
      "label": "TDSC",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tgq",
      "label": "Electronic Arts TGQ video (decoders: eatgq )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tgv",
      "label": "Electronic Arts TGV video (decoders: eatgv )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "theora",
      "label": "Theora (encoders: libtheora )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "thp",
      "label": "Nintendo Gamecube THP video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tiertexseqvideo",
      "label": "Tiertex Limited SEQ video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tiff",
      "label": "TIFF image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tmv",
      "label": "8088flex TMV",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tqi",
      "label": "Electronic Arts TQI video (decoders: eatqi )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion1",
      "label": "Duck TrueMotion 1.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion2",
      "label": "Duck TrueMotion 2.0",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truemotion2rt",
      "label": "Duck TrueMotion 2.0 Real Time",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tscc",
      "label": "TechSmith Screen Capture Codec (decoders: camtasia )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tscc2",
      "label": "TechSmith Screen Codec 2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "txd",
      "label": "Renderware TXD (TeXture Dictionary) image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ulti",
      "label": "IBM UltiMotion (decoders: ultimotion )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "utvideo",
      "label": "Ut Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v210",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v210x",
      "label": "Uncompressed 4:2:2 10-bit",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v308",
      "label": "Uncompressed packed 4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v408",
      "label": "Uncompressed packed QT 4:4:4:4",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "v410",
      "label": "Uncompressed 4:4:4 10-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vb",
      "label": "Beam Software VB",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vble",
      "label": "VBLE Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vc1",
      "label": "SMPTE VC-1 (decoders: vc1 vc1_qsv vc1_v4l2m2m vc1_cuvid )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vc1image",
      "label": "Windows Media Video 9 Image v2",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vcr1",
      "label": "ATI VCR1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vixl",
      "label": "Miro VideoXL (decoders: xl )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmdvideo",
      "label": "Sierra VMD video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmnc",
      "label": "VMware Screen Codec / VMware Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp3",
      "label": "On2 VP3",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp4",
      "label": "On2 VP4",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp5",
      "label": "On2 VP5",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6",
      "label": "On2 VP6",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6a",
      "label": "On2 VP6 (Flash version, with alpha channel)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp6f",
      "label": "On2 VP6 (Flash version)",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp7",
      "label": "On2 VP7",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp8",
      "label": "On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid vp8_qsv ) (encoders: libvpx vp8_v4l2m2m vp8_vaapi )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vp9",
      "label": "Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid vp9_qsv ) (encoders: libvpx-vp9 vp9_vaapi vp9_qsv )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vvc",
      "label": "H.266 / VVC (Versatile Video Coding)",
      "decode": false,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wcmv",
      "label": "WinCAM Motion Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "webp",
      "label": "WebP (encoders: libwebp_anim libwebp )",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv1",
      "label": "Windows Media Video 7",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv2",
      "label": "Windows Media Video 8",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv3",
      "label": "Windows Media Video 9",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmv3image",
      "label": "Windows Media Video 9 Image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wnv1",
      "label": "Winnov WNV1",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wrapped_avframe",
      "label": "AVFrame to AVPacket passthrough",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ws_vqa",
      "label": "Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo )",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_wc3",
      "label": "Wing Commander III / Xan",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_wc4",
      "label": "Wing Commander IV / Xxan",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xbin",
      "label": "eXtended BINary text",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xbm",
      "label": "XBM (X BitMap) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xface",
      "label": "X-face image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xpm",
      "label": "XPM (X PixMap) image",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xwd",
      "label": "XWD (X Window Dump) image",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "y41p",
      "label": "Uncompressed YUV 4:1:1 12-bit",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ylc",
      "label": "YUY2 Lossless Codec",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "yop",
      "label": "Psygnosis YOP Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "yuv4",
      "label": "Uncompressed packed 4:2:0",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zerocodec",
      "label": "ZeroCodec Lossless Video",
      "decode": true,
      "encode": false,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zlib",
      "label": "LCL (LossLess Codec Library) ZLIB",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "zmbv",
      "label": "Zip Motion Blocks Video",
      "decode": true,
      "encode": true,
      "type": "video",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "4gv",
      "label": "4GV (Fourth Generation Vocoder)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8svx_exp",
      "label": "8SVX exponential",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "8svx_fib",
      "label": "8SVX fibonacci",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aac",
      "label": "AAC (Advanced Audio Coding) (decoders: aac aac_fixed )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aac_latm",
      "label": "AAC LATM (Advanced Audio Coding LATM syntax)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ac3",
      "label": "ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed ) (encoders: ac3 ac3_fixed )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "acelp.kelvin",
      "label": "Sipro ACELP.KELVIN",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_4xm",
      "label": "ADPCM 4X Movie",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_adx",
      "label": "SEGA CRI ADX ADPCM",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_afc",
      "label": "ADPCM Nintendo Gamecube AFC",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_agm",
      "label": "ADPCM AmuseGraphics Movie AGM",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_aica",
      "label": "ADPCM Yamaha AICA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_argo",
      "label": "ADPCM Argonaut Games",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ct",
      "label": "ADPCM Creative Technology",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_dtk",
      "label": "ADPCM Nintendo Gamecube DTK",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea",
      "label": "ADPCM Electronic Arts",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_maxis_xa",
      "label": "ADPCM Electronic Arts Maxis CDROM XA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r1",
      "label": "ADPCM Electronic Arts R1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r2",
      "label": "ADPCM Electronic Arts R2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_r3",
      "label": "ADPCM Electronic Arts R3",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ea_xas",
      "label": "ADPCM Electronic Arts XAS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g722",
      "label": "G.722 ADPCM (decoders: g722 ) (encoders: g722 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g726",
      "label": "G.726 ADPCM (decoders: g726 ) (encoders: g726 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_g726le",
      "label": "G.726 ADPCM little-endian (decoders: g726le ) (encoders: g726le )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_alp",
      "label": "ADPCM IMA High Voltage Software ALP",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_amv",
      "label": "ADPCM IMA AMV",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_apc",
      "label": "ADPCM IMA CRYO APC",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_apm",
      "label": "ADPCM IMA Ubisoft APM",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_cunning",
      "label": "ADPCM IMA Cunning Developments",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dat4",
      "label": "ADPCM IMA Eurocom DAT4",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dk3",
      "label": "ADPCM IMA Duck DK3",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_dk4",
      "label": "ADPCM IMA Duck DK4",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ea_eacs",
      "label": "ADPCM IMA Electronic Arts EACS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ea_sead",
      "label": "ADPCM IMA Electronic Arts SEAD",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_iss",
      "label": "ADPCM IMA Funcom ISS",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_moflex",
      "label": "ADPCM IMA MobiClip MOFLEX",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_mtf",
      "label": "ADPCM IMA Capcom's MT Framework",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_oki",
      "label": "ADPCM IMA Dialogic OKI",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_qt",
      "label": "ADPCM IMA QuickTime",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_rad",
      "label": "ADPCM IMA Radical",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_smjpeg",
      "label": "ADPCM IMA Loki SDL MJPEG",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ssi",
      "label": "ADPCM IMA Simon & Schuster Interactive",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_wav",
      "label": "ADPCM IMA WAV",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ima_ws",
      "label": "ADPCM IMA Westwood",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_ms",
      "label": "ADPCM Microsoft",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_mtaf",
      "label": "ADPCM MTAF",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_psx",
      "label": "ADPCM Playstation",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_2",
      "label": "ADPCM Sound Blaster Pro 2-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_3",
      "label": "ADPCM Sound Blaster Pro 2.6-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_sbpro_4",
      "label": "ADPCM Sound Blaster Pro 4-bit",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_swf",
      "label": "ADPCM Shockwave Flash",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_thp",
      "label": "ADPCM Nintendo THP",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_thp_le",
      "label": "ADPCM Nintendo THP (Little-Endian)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_vima",
      "label": "LucasArts VIMA audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_xa",
      "label": "ADPCM CDROM XA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_yamaha",
      "label": "ADPCM Yamaha",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "adpcm_zork",
      "label": "ADPCM Zork",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "alac",
      "label": "ALAC (Apple Lossless Audio Codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amr_nb",
      "label": "AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "amr_wb",
      "label": "AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ape",
      "label": "Monkey's Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aptx",
      "label": "aptX (Audio Processing Technology for Bluetooth)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "aptx_hd",
      "label": "aptX HD (Audio Processing Technology for Bluetooth)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac1",
      "label": "ATRAC1 (Adaptive TRansform Acoustic Coding)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3",
      "label": "ATRAC3 (Adaptive TRansform Acoustic Coding 3)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3al",
      "label": "ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3p",
      "label": "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac3pal",
      "label": "ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "atrac9",
      "label": "ATRAC9 (Adaptive TRansform Acoustic Coding 9)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "avc",
      "label": "On2 Audio for Video Codec (decoders: on2avc )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkaudio_dct",
      "label": "Bink Audio (DCT)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "binkaudio_rdft",
      "label": "Bink Audio (RDFT)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bmv_audio",
      "label": "Discworld II BMV audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "celt",
      "label": "Constrained Energy Lapped Transform (CELT)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "codec2",
      "label": "codec2 (very low bitrate speech codec) (decoders: libcodec2 ) (encoders: libcodec2 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "comfortnoise",
      "label": "RFC 3389 Comfort Noise",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "cook",
      "label": "Cook / Cooker / Gecko (RealAudio G2)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "derf_dpcm",
      "label": "DPCM Xilam DERF",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dolby_e",
      "label": "Dolby E",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_lsbf",
      "label": "DSD (Direct Stream Digital), least significant bit first",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_lsbf_planar",
      "label": "DSD (Direct Stream Digital), least significant bit first, planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_msbf",
      "label": "DSD (Direct Stream Digital), most significant bit first",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsd_msbf_planar",
      "label": "DSD (Direct Stream Digital), most significant bit first, planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dsicinaudio",
      "label": "Delphine Software International CIN audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dss_sp",
      "label": "Digital Speech Standard - Standard Play mode (DSS SP)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dst",
      "label": "DST (Direct Stream Transfer)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dts",
      "label": "DCA (DTS Coherent Acoustics) (decoders: dca ) (encoders: dca )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvaudio",
      "label": "DV audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "eac3",
      "label": "ATSC A/52B (AC-3, E-AC-3)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "evrc",
      "label": "EVRC (Enhanced Variable Rate Codec)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "fastaudio",
      "label": "MobiClip FastAudio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "flac",
      "label": "FLAC (Free Lossless Audio Codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g723_1",
      "label": "G.723.1",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "g729",
      "label": "G.729",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gremlin_dpcm",
      "label": "DPCM Gremlin",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gsm",
      "label": "GSM (decoders: gsm libgsm ) (encoders: libgsm )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "gsm_ms",
      "label": "GSM Microsoft variant (decoders: gsm_ms libgsm_ms ) (encoders: libgsm_ms )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hca",
      "label": "CRI HCA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hcom",
      "label": "HCOM Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "iac",
      "label": "IAC (Indeo Audio Coder)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ilbc",
      "label": "iLBC (Internet Low Bitrate Codec)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "imc",
      "label": "IMC (Intel Music Coder)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplay_dpcm",
      "label": "DPCM Interplay",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "interplayacm",
      "label": "Interplay ACM",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mace3",
      "label": "MACE (Macintosh Audio Compression/Expansion) 3:1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mace6",
      "label": "MACE (Macintosh Audio Compression/Expansion) 6:1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "metasound",
      "label": "Voxware MetaSound",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mlp",
      "label": "MLP (Meridian Lossless Packing)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp1",
      "label": "MP1 (MPEG audio layer 1) (decoders: mp1 mp1float )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp2",
      "label": "MP2 (MPEG audio layer 2) (decoders: mp2 mp2float ) (encoders: mp2 mp2fixed libtwolame )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3",
      "label": "MP3 (MPEG audio layer 3) (decoders: mp3float mp3 ) (encoders: libmp3lame libshine )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3adu",
      "label": "ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp3on4",
      "label": "MP3onMP4 (decoders: mp3on4float mp3on4 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mp4als",
      "label": "MPEG-4 Audio Lossless Coding (ALS) (decoders: als )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpegh_3d_audio",
      "label": "MPEG-H 3D Audio",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "musepack7",
      "label": "Musepack SV7 (decoders: mpc7 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "musepack8",
      "label": "Musepack SV8 (decoders: mpc8 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "nellymoser",
      "label": "Nellymoser Asao",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "opus",
      "label": "Opus (Opus Interactive Audio Codec) (decoders: opus libopus ) (encoders: opus libopus )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "paf_audio",
      "label": "Amazing Studio Packed Animation File Audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_alaw",
      "label": "PCM A-law / G.711 A-law",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_bluray",
      "label": "PCM signed 16|20|24-bit big-endian for Blu-ray media",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_dvd",
      "label": "PCM signed 20|24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f16le",
      "label": "PCM 16.8 floating point little-endian",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f24le",
      "label": "PCM 24.0 floating point little-endian",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f32be",
      "label": "PCM 32-bit floating point big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f32le",
      "label": "PCM 32-bit floating point little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f64be",
      "label": "PCM 64-bit floating point big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_f64le",
      "label": "PCM 64-bit floating point little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_lxf",
      "label": "PCM signed 20-bit little-endian planar",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_mulaw",
      "label": "PCM mu-law / G.711 mu-law",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16be",
      "label": "PCM signed 16-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16be_planar",
      "label": "PCM signed 16-bit big-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16le",
      "label": "PCM signed 16-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s16le_planar",
      "label": "PCM signed 16-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24be",
      "label": "PCM signed 24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24daud",
      "label": "PCM D-Cinema audio signed 24-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24le",
      "label": "PCM signed 24-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s24le_planar",
      "label": "PCM signed 24-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32be",
      "label": "PCM signed 32-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32le",
      "label": "PCM signed 32-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s32le_planar",
      "label": "PCM signed 32-bit little-endian planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s64be",
      "label": "PCM signed 64-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s64le",
      "label": "PCM signed 64-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s8",
      "label": "PCM signed 8-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_s8_planar",
      "label": "PCM signed 8-bit planar",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_sga",
      "label": "PCM SGA",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u16be",
      "label": "PCM unsigned 16-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u16le",
      "label": "PCM unsigned 16-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u24be",
      "label": "PCM unsigned 24-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u24le",
      "label": "PCM unsigned 24-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u32be",
      "label": "PCM unsigned 32-bit big-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u32le",
      "label": "PCM unsigned 32-bit little-endian",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_u8",
      "label": "PCM unsigned 8-bit",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pcm_vidc",
      "label": "PCM Archimedes VIDC",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qcelp",
      "label": "QCELP / PureVoice",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdm2",
      "label": "QDesign Music Codec 2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "qdmc",
      "label": "QDesign Music",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ra_144",
      "label": "RealAudio 1.0 (14.4K) (decoders: real_144 ) (encoders: real_144 )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ra_288",
      "label": "RealAudio 2.0 (28.8K) (decoders: real_288 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ralf",
      "label": "RealAudio Lossless",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "roq_dpcm",
      "label": "DPCM id RoQ",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "s302m",
      "label": "SMPTE 302M",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sbc",
      "label": "SBC (low-complexity subband codec)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sdx2_dpcm",
      "label": "DPCM Squareroot-Delta-Exact",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "shorten",
      "label": "Shorten",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sipr",
      "label": "RealAudio SIPR / ACELP.NET",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "siren",
      "label": "Siren",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smackaudio",
      "label": "Smacker audio (decoders: smackaud )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "smv",
      "label": "SMV (Selectable Mode Vocoder)",
      "decode": false,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sol_dpcm",
      "label": "DPCM Sol",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sonic",
      "label": "Sonic",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sonicls",
      "label": "Sonic lossless",
      "decode": false,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "speex",
      "label": "Speex (decoders: libspeex ) (encoders: libspeex )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tak",
      "label": "TAK (Tom's lossless Audio Kompressor)",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truehd",
      "label": "TrueHD",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "truespeech",
      "label": "DSP Group TrueSpeech",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "tta",
      "label": "TTA (True Audio)",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "twinvq",
      "label": "VQF TwinVQ",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vmdaudio",
      "label": "Sierra VMD audio",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vorbis",
      "label": "Vorbis (decoders: vorbis libvorbis ) (encoders: vorbis libvorbis )",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wavesynth",
      "label": "Wave synthesis pseudo-codec",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wavpack",
      "label": "WavPack",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "westwood_snd1",
      "label": "Westwood Audio (SND1) (decoders: ws_snd1 )",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmalossless",
      "label": "Windows Media Audio Lossless",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmapro",
      "label": "Windows Media Audio 9 Professional",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmav1",
      "label": "Windows Media Audio 1",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmav2",
      "label": "Windows Media Audio 2",
      "decode": true,
      "encode": true,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "wmavoice",
      "label": "Windows Media Audio Voice",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xan_dpcm",
      "label": "DPCM Xan",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xma1",
      "label": "Xbox Media Audio 1",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xma2",
      "label": "Xbox Media Audio 2",
      "decode": true,
      "encode": false,
      "type": "audio",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "bin_data",
      "label": "binary data",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvd_nav_packet",
      "label": "DVD Nav packet",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "epg",
      "label": "Electronic Program Guide",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "klv",
      "label": "SMPTE 336M Key-Length-Value (KLV) metadata",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpegts",
      "label": "raw MPEG-TS stream",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "otf",
      "label": "OpenType font",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "scte_35",
      "label": "SCTE 35 Message Queue",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "timed_id3",
      "label": "timed ID3 metadata",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ttf",
      "label": "TrueType font",
      "decode": false,
      "encode": false,
      "type": "data",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "arib_caption",
      "label": "ARIB STD-B24 caption",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ass",
      "label": "ASS (Advanced SSA) subtitle (decoders: ssa ass ) (encoders: ssa ass )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvb_subtitle",
      "label": "DVB subtitles (decoders: dvbsub ) (encoders: dvbsub )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvb_teletext",
      "label": "DVB teletext (decoders: libzvbi_teletextdec )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "dvd_subtitle",
      "label": "DVD subtitles (decoders: dvdsub ) (encoders: dvdsub )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "eia_608",
      "label": "EIA-608 closed captions (decoders: cc_dec )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hdmv_pgs_subtitle",
      "label": "HDMV Presentation Graphic Stream subtitles (decoders: pgssub )",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "hdmv_text_subtitle",
      "label": "HDMV Text subtitle",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "jacosub",
      "label": "JACOsub subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "microdvd",
      "label": "MicroDVD subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mov_text",
      "label": "MOV text",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "mpl2",
      "label": "MPL2 subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "pjs",
      "label": "PJS (Phoenix Japanimation Society) subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "realtext",
      "label": "RealText subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "sami",
      "label": "SAMI subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "srt",
      "label": "SubRip subtitle with embedded timing",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ssa",
      "label": "SSA (SubStation Alpha) subtitle",
      "decode": false,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "stl",
      "label": "Spruce subtitle format",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subrip",
      "label": "SubRip subtitle (decoders: srt subrip ) (encoders: srt subrip )",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subviewer",
      "label": "SubViewer subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "subviewer1",
      "label": "SubViewer v1 subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "text",
      "label": "raw UTF-8 text",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "ttml",
      "label": "Timed Text Markup Language",
      "decode": false,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "vplayer",
      "label": "VPlayer subtitle",
      "decode": true,
      "encode": false,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "webvtt",
      "label": "WebVTT subtitle",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    },
    {
      "id": "xsub",
      "label": "XSUB",
      "decode": true,
      "encode": true,
      "type": "subtitle",
      "intra": false,
      "lossy": false,
      "lossless": false
    }
  ],
  "protocols": [
    {
      "id": "async",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "bluray",
      "input": true,
      "output": false,
      "options": [
        {
          "name": "-playlist",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "(from -1 to 99999) (default -1)"
        },
        {
          "name": "-angle",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "(from 0 to 254) (default 0)"
        },
        {
          "name": "-chapter",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "(from 1 to 65534) (default 1)"
        }
      ]
    },
    {
      "id": "cache",
      "input": true,
      "output": false,
      "options": [
        {
          "name": "-read_ahead_limit",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Amount in bytes that may be read ahead when seeking isn't supported, -1 for unlimited (from -1 to INT_MAX) (default 65536)"
        }
      ]
    },
    {
      "id": "concat",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "crypto",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-key",
          "type": "binary",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "AES encryption/decryption key"
        },
        {
          "name": "-iv",
          "type": "binary",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "AES encryption/decryption initialization vector"
        },
        {
          "name": "-decryption_key",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "AES decryption key"
        },
        {
          "name": "-decryption_iv",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "AES decryption initialization vector"
        },
        {
          "name": "-encryption_key",
          "type": "binary",
          "ctx": [
            "E"
          ],
          "desc": "AES encryption key"
        },
        {
          "name": "-encryption_iv",
          "type": "binary",
          "ctx": [
            "E"
          ],
          "desc": "AES encryption initialization vector"
        }
      ]
    },
    {
      "id": "data",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "ffrtmphttp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-ffrtmphttp_tls",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "Use a HTTPS tunneling connection (RTMPTS). (default false)"
        }
      ]
    },
    {
      "id": "file",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-truncate",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "truncate existing files on write (default true)"
        },
        {
          "name": "-blocksize",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "set I/O operation maximum block size (from 1 to INT_MAX) (default INT_MAX)"
        },
        {
          "name": "-follow",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Follow a file as it is being written (from 0 to 1) (default 0)"
        },
        {
          "name": "-seekable",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Sets if the file is seekable (from -1 to 0) (default -1)"
        }
      ]
    },
    {
      "id": "ftp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set timeout of socket I/O operations (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-ftp-write-seekable",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "control seekability of connection during encoding (default false)"
        },
        {
          "name": "-ftp-anonymous-password",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "password for anonymous login. E-mail address should be used."
        },
        {
          "name": "-ftp-user",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "user for FTP login. Overridden by whatever is in the URL."
        },
        {
          "name": "-ftp-password",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "password for FTP login. Overridden by whatever is in the URL."
        }
      ]
    },
    {
      "id": "gopher",
      "input": true,
      "output": true,
      "options": []
    },
    {
      "id": "gophers",
      "input": true,
      "output": true,
      "options": []
    },
    {
      "id": "hls",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "http",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-seekable",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "control seekability of connection (default auto)"
        },
        {
          "name": "-chunked_post",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "use chunked transfer-encoding for posts (default true)"
        },
        {
          "name": "-http_proxy",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set HTTP proxy to tunnel through"
        },
        {
          "name": "-headers",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set custom HTTP headers, can override built in default headers"
        },
        {
          "name": "-content_type",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set a specific content type for the POST messages"
        },
        {
          "name": "-user_agent",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "override User-Agent header (default \"Lavf/58.76.100\")"
        },
        {
          "name": "-referer",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "override referer header"
        },
        {
          "name": "-user-agent",
          "type": "string",
          "ctx": [
            "D",
            "P"
          ],
          "desc": "use the \"user_agent\" option instead (default \"Lavf/58.76.100\")"
        },
        {
          "name": "-multiple_requests",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "use persistent connections (default false)"
        },
        {
          "name": "-post_data",
          "type": "binary",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set custom HTTP post data"
        },
        {
          "name": "-cookies",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax"
        },
        {
          "name": "-icy",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "request ICY metadata (default true)"
        },
        {
          "name": "-auth_type",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "HTTP authentication type (from 0 to 1) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "No auth method set, autodetect"
            },
            {
              "name": "basic",
              "value": "1",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "HTTP basic authentication"
            }
          ]
        },
        {
          "name": "-send_expect_100",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "Force sending an Expect: 100-continue header for POST (default auto)"
        },
        {
          "name": "-location",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The actual location of the data received"
        },
        {
          "name": "-offset",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "initial byte offset (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-end_offset",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "try to limit the request to bytes preceding this offset (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-method",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Override the HTTP method or set the expected HTTP method from a client"
        },
        {
          "name": "-reconnect",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect after disconnect before EOF (default false)"
        },
        {
          "name": "-reconnect_at_eof",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect at EOF (default false)"
        },
        {
          "name": "-reconnect_on_network_error",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect in case of tcp/tls error during connect (default false)"
        },
        {
          "name": "-reconnect_on_http_error",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "list of http status codes to reconnect on"
        },
        {
          "name": "-reconnect_streamed",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect streamed / non seekable streams (default false)"
        },
        {
          "name": "-reconnect_delay_max",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "max reconnect delay in seconds after which to give up (from 0 to 4294) (default 120)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "listen on HTTP (from 0 to 2) (default 0)"
        },
        {
          "name": "-resource",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "The resource requested by a client"
        },
        {
          "name": "-reply_code",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "The http status code to return to a client (from INT_MIN to 599) (default 200)"
        }
      ]
    },
    {
      "id": "httpproxy",
      "input": true,
      "output": true,
      "options": []
    },
    {
      "id": "https",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-seekable",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "control seekability of connection (default auto)"
        },
        {
          "name": "-chunked_post",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "use chunked transfer-encoding for posts (default true)"
        },
        {
          "name": "-http_proxy",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set HTTP proxy to tunnel through"
        },
        {
          "name": "-headers",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set custom HTTP headers, can override built in default headers"
        },
        {
          "name": "-content_type",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set a specific content type for the POST messages"
        },
        {
          "name": "-user_agent",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "override User-Agent header (default \"Lavf/58.76.100\")"
        },
        {
          "name": "-referer",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "override referer header"
        },
        {
          "name": "-user-agent",
          "type": "string",
          "ctx": [
            "D",
            "P"
          ],
          "desc": "use the \"user_agent\" option instead (default \"Lavf/58.76.100\")"
        },
        {
          "name": "-multiple_requests",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "use persistent connections (default false)"
        },
        {
          "name": "-post_data",
          "type": "binary",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set custom HTTP post data"
        },
        {
          "name": "-cookies",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax"
        },
        {
          "name": "-icy",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "request ICY metadata (default true)"
        },
        {
          "name": "-auth_type",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "HTTP authentication type (from 0 to 1) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "No auth method set, autodetect"
            },
            {
              "name": "basic",
              "value": "1",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "HTTP basic authentication"
            }
          ]
        },
        {
          "name": "-send_expect_100",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "Force sending an Expect: 100-continue header for POST (default auto)"
        },
        {
          "name": "-location",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The actual location of the data received"
        },
        {
          "name": "-offset",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "initial byte offset (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-end_offset",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "try to limit the request to bytes preceding this offset (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-method",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Override the HTTP method or set the expected HTTP method from a client"
        },
        {
          "name": "-reconnect",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect after disconnect before EOF (default false)"
        },
        {
          "name": "-reconnect_at_eof",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect at EOF (default false)"
        },
        {
          "name": "-reconnect_on_network_error",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect in case of tcp/tls error during connect (default false)"
        },
        {
          "name": "-reconnect_on_http_error",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "list of http status codes to reconnect on"
        },
        {
          "name": "-reconnect_streamed",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "auto reconnect streamed / non seekable streams (default false)"
        },
        {
          "name": "-reconnect_delay_max",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "max reconnect delay in seconds after which to give up (from 0 to 4294) (default 120)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "listen on HTTP (from 0 to 2) (default 0)"
        },
        {
          "name": "-resource",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "The resource requested by a client"
        },
        {
          "name": "-reply_code",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "The http status code to return to a client (from INT_MIN to 599) (default 200)"
        }
      ]
    },
    {
      "id": "mmsh",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "mmst",
      "input": true,
      "output": false,
      "options": []
    },
    {
      "id": "pipe",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-blocksize",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "set I/O operation maximum block size (from 1 to INT_MAX) (default INT_MAX)"
        }
      ]
    },
    {
      "id": "rtmp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-rtmp_app",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Name of application to connect to on the RTMP server"
        },
        {
          "name": "-rtmp_buffer",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)"
        },
        {
          "name": "-rtmp_conn",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Append arbitrary AMF data to the Connect message"
        },
        {
          "name": "-rtmp_flashver",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Version of the Flash plugin used to run the SWF player."
        },
        {
          "name": "-rtmp_flush_interval",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Number of packets flushed in the same request (RTMPT only). (from 0 to INT_MAX) (default 10)"
        },
        {
          "name": "-rtmp_live",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)",
          "values": [
            {
              "name": "any",
              "value": "-2",
              "ctx": [
                "D"
              ],
              "desc": "both"
            },
            {
              "name": "live",
              "value": "-1",
              "ctx": [
                "D"
              ],
              "desc": "live stream"
            },
            {
              "name": "recorded",
              "value": "0",
              "ctx": [
                "D"
              ],
              "desc": "recorded stream"
            }
          ]
        },
        {
          "name": "-rtmp_pageurl",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL of the web page in which the media was embedded. By default no value will be sent."
        },
        {
          "name": "-rtmp_playpath",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Stream identifier to play or to publish"
        },
        {
          "name": "-rtmp_subscribe",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "Name of live stream to subscribe to. Defaults to rtmp_playpath."
        },
        {
          "name": "-rtmp_swfhash",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "SHA256 hash of the decompressed SWF file (32 bytes)."
        },
        {
          "name": "-rtmp_swfsize",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-rtmp_swfurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the SWF player. By default no value will be sent"
        },
        {
          "name": "-rtmp_swfverify",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL to player swf file, compute hash/size automatically."
        },
        {
          "name": "-rtmp_tcurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the target stream. Defaults to proto://host[:port]/app."
        },
        {
          "name": "-rtmp_listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "rtmps",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-rtmp_app",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Name of application to connect to on the RTMP server"
        },
        {
          "name": "-rtmp_buffer",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)"
        },
        {
          "name": "-rtmp_conn",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Append arbitrary AMF data to the Connect message"
        },
        {
          "name": "-rtmp_flashver",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Version of the Flash plugin used to run the SWF player."
        },
        {
          "name": "-rtmp_flush_interval",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Number of packets flushed in the same request (RTMPT only). (from 0 to INT_MAX) (default 10)"
        },
        {
          "name": "-rtmp_live",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)",
          "values": [
            {
              "name": "any",
              "value": "-2",
              "ctx": [
                "D"
              ],
              "desc": "both"
            },
            {
              "name": "live",
              "value": "-1",
              "ctx": [
                "D"
              ],
              "desc": "live stream"
            },
            {
              "name": "recorded",
              "value": "0",
              "ctx": [
                "D"
              ],
              "desc": "recorded stream"
            }
          ]
        },
        {
          "name": "-rtmp_pageurl",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL of the web page in which the media was embedded. By default no value will be sent."
        },
        {
          "name": "-rtmp_playpath",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Stream identifier to play or to publish"
        },
        {
          "name": "-rtmp_subscribe",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "Name of live stream to subscribe to. Defaults to rtmp_playpath."
        },
        {
          "name": "-rtmp_swfhash",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "SHA256 hash of the decompressed SWF file (32 bytes)."
        },
        {
          "name": "-rtmp_swfsize",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-rtmp_swfurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the SWF player. By default no value will be sent"
        },
        {
          "name": "-rtmp_swfverify",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL to player swf file, compute hash/size automatically."
        },
        {
          "name": "-rtmp_tcurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the target stream. Defaults to proto://host[:port]/app."
        },
        {
          "name": "-rtmp_listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "rtmpt",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-rtmp_app",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Name of application to connect to on the RTMP server"
        },
        {
          "name": "-rtmp_buffer",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)"
        },
        {
          "name": "-rtmp_conn",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Append arbitrary AMF data to the Connect message"
        },
        {
          "name": "-rtmp_flashver",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Version of the Flash plugin used to run the SWF player."
        },
        {
          "name": "-rtmp_flush_interval",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Number of packets flushed in the same request (RTMPT only). (from 0 to INT_MAX) (default 10)"
        },
        {
          "name": "-rtmp_live",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)",
          "values": [
            {
              "name": "any",
              "value": "-2",
              "ctx": [
                "D"
              ],
              "desc": "both"
            },
            {
              "name": "live",
              "value": "-1",
              "ctx": [
                "D"
              ],
              "desc": "live stream"
            },
            {
              "name": "recorded",
              "value": "0",
              "ctx": [
                "D"
              ],
              "desc": "recorded stream"
            }
          ]
        },
        {
          "name": "-rtmp_pageurl",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL of the web page in which the media was embedded. By default no value will be sent."
        },
        {
          "name": "-rtmp_playpath",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Stream identifier to play or to publish"
        },
        {
          "name": "-rtmp_subscribe",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "Name of live stream to subscribe to. Defaults to rtmp_playpath."
        },
        {
          "name": "-rtmp_swfhash",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "SHA256 hash of the decompressed SWF file (32 bytes)."
        },
        {
          "name": "-rtmp_swfsize",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-rtmp_swfurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the SWF player. By default no value will be sent"
        },
        {
          "name": "-rtmp_swfverify",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL to player swf file, compute hash/size automatically."
        },
        {
          "name": "-rtmp_tcurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the target stream. Defaults to proto://host[:port]/app."
        },
        {
          "name": "-rtmp_listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "rtmpts",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-rtmp_app",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Name of application to connect to on the RTMP server"
        },
        {
          "name": "-rtmp_buffer",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Set buffer time in milliseconds. The default is 3000. (from 0 to INT_MAX) (default 3000)"
        },
        {
          "name": "-rtmp_conn",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Append arbitrary AMF data to the Connect message"
        },
        {
          "name": "-rtmp_flashver",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Version of the Flash plugin used to run the SWF player."
        },
        {
          "name": "-rtmp_flush_interval",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Number of packets flushed in the same request (RTMPT only). (from 0 to INT_MAX) (default 10)"
        },
        {
          "name": "-rtmp_live",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Specify that the media is a live stream. (from INT_MIN to INT_MAX) (default any)",
          "values": [
            {
              "name": "any",
              "value": "-2",
              "ctx": [
                "D"
              ],
              "desc": "both"
            },
            {
              "name": "live",
              "value": "-1",
              "ctx": [
                "D"
              ],
              "desc": "live stream"
            },
            {
              "name": "recorded",
              "value": "0",
              "ctx": [
                "D"
              ],
              "desc": "recorded stream"
            }
          ]
        },
        {
          "name": "-rtmp_pageurl",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL of the web page in which the media was embedded. By default no value will be sent."
        },
        {
          "name": "-rtmp_playpath",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Stream identifier to play or to publish"
        },
        {
          "name": "-rtmp_subscribe",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "Name of live stream to subscribe to. Defaults to rtmp_playpath."
        },
        {
          "name": "-rtmp_swfhash",
          "type": "binary",
          "ctx": [
            "D"
          ],
          "desc": "SHA256 hash of the decompressed SWF file (32 bytes)."
        },
        {
          "name": "-rtmp_swfsize",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Size of the decompressed SWF file, required for SWFVerification. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-rtmp_swfurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the SWF player. By default no value will be sent"
        },
        {
          "name": "-rtmp_swfverify",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": "URL to player swf file, compute hash/size automatically."
        },
        {
          "name": "-rtmp_tcurl",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "URL of the target stream. Defaults to proto://host[:port]/app."
        },
        {
          "name": "-rtmp_listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Listen for incoming rtmp connections (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1 (from INT_MIN to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "rtp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-ttl",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Time to live (in milliseconds, multicast only) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Send/Receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-rtcp_port",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Custom rtcp port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-local_rtpport",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local rtp port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-local_rtcpport",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local rtcp port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-connect",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connect socket (default false)"
        },
        {
          "name": "-write_to_source",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Send packets to the source address of the latest received packet (default false)"
        },
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum packet size (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-dscp",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "DSCP class (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-timeout",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set timeout (in microseconds) of socket I/O operations (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-sources",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Source list"
        },
        {
          "name": "-block",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Block list"
        },
        {
          "name": "-fec",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "FEC"
        }
      ]
    },
    {
      "id": "sctp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-listen",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Listen for incoming connections (default false)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connection timeout (in milliseconds) (from INT_MIN to INT_MAX) (default 10000)"
        },
        {
          "name": "-listen_timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Bind timeout (in milliseconds) (from INT_MIN to INT_MAX) (default -1)"
        },
        {
          "name": "-max_streams",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Max stream to allocate (from 0 to 32767) (default 0)"
        }
      ]
    },
    {
      "id": "srtp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-srtp_out_suite",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": ""
        },
        {
          "name": "-srtp_out_params",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": ""
        },
        {
          "name": "-srtp_in_suite",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": ""
        },
        {
          "name": "-srtp_in_params",
          "type": "string",
          "ctx": [
            "D"
          ],
          "desc": ""
        }
      ]
    },
    {
      "id": "subfile",
      "input": true,
      "output": false,
      "options": [
        {
          "name": "-start",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "start offset (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-end",
          "type": "int64",
          "ctx": [
            "D"
          ],
          "desc": "end offset (from 0 to I64_MAX) (default 0)"
        }
      ]
    },
    {
      "id": "tcp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Listen for incoming connections (from 0 to 2) (default 0)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set timeout (in microseconds) of socket I/O operations (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-listen_timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connection awaiting timeout (in milliseconds) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-send_buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Socket send buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-recv_buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Socket receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-tcp_nodelay",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Use TCP_NODELAY to disable nagle's algorithm (default false)"
        },
        {
          "name": "-tcp_mss",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum segment size for outgoing TCP packets (from -1 to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "tls",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-ca_file",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Certificate Authority database file"
        },
        {
          "name": "-cafile",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Certificate Authority database file"
        },
        {
          "name": "-tls_verify",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Verify the peer certificate (from 0 to 1) (default 0)"
        },
        {
          "name": "-cert_file",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Certificate file"
        },
        {
          "name": "-key_file",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Private key file"
        },
        {
          "name": "-listen",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Listen for incoming connections (from 0 to 1) (default 0)"
        },
        {
          "name": "-verifyhost",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Verify against a specific hostname"
        },
        {
          "name": "-http_proxy",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Set proxy to tunnel through"
        }
      ]
    },
    {
      "id": "udp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "System data size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-bitrate",
          "type": "int64",
          "ctx": [
            "E"
          ],
          "desc": "Bits to send per second (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-burst_bits",
          "type": "int64",
          "ctx": [
            "E"
          ],
          "desc": "Max length of bursts in bits (when using bitrate) (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-localport",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-local_port",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-localaddr",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local address"
        },
        {
          "name": "-udplite_coverage",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "choose UDPLite head size which should be validated by checksum (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum UDP packet size (from -1 to INT_MAX) (default 1472)"
        },
        {
          "name": "-reuse",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "explicitly allow reusing UDP sockets (default auto)"
        },
        {
          "name": "-reuse_socket",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "explicitly allow reusing UDP sockets (default auto)"
        },
        {
          "name": "-broadcast",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "explicitly allow or disallow broadcast destination (default false)"
        },
        {
          "name": "-ttl",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Time to live (multicast only) (from 0 to INT_MAX) (default 16)"
        },
        {
          "name": "-connect",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set if connect() should be called on socket (default false)"
        },
        {
          "name": "-fifo_size",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "set the UDP receiving circular buffer size, expressed as a number of packets with size of 188 bytes (from 0 to INT_MAX) (default 28672)"
        },
        {
          "name": "-overrun_nonfatal",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "survive in case of UDP receiving circular buffer overrun (default false)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "set raise error timeout, in microseconds (only in read mode) (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-sources",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Source list"
        },
        {
          "name": "-block",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Block list"
        }
      ]
    },
    {
      "id": "udplite",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "System data size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-bitrate",
          "type": "int64",
          "ctx": [
            "E"
          ],
          "desc": "Bits to send per second (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-burst_bits",
          "type": "int64",
          "ctx": [
            "E"
          ],
          "desc": "Max length of bursts in bits (when using bitrate) (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "-localport",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-local_port",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local port (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-localaddr",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Local address"
        },
        {
          "name": "-udplite_coverage",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "choose UDPLite head size which should be validated by checksum (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum UDP packet size (from -1 to INT_MAX) (default 1472)"
        },
        {
          "name": "-reuse",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "explicitly allow reusing UDP sockets (default auto)"
        },
        {
          "name": "-reuse_socket",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "explicitly allow reusing UDP sockets (default auto)"
        },
        {
          "name": "-broadcast",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "explicitly allow or disallow broadcast destination (default false)"
        },
        {
          "name": "-ttl",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Time to live (multicast only) (from 0 to INT_MAX) (default 16)"
        },
        {
          "name": "-connect",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set if connect() should be called on socket (default false)"
        },
        {
          "name": "-fifo_size",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "set the UDP receiving circular buffer size, expressed as a number of packets with size of 188 bytes (from 0 to INT_MAX) (default 28672)"
        },
        {
          "name": "-overrun_nonfatal",
          "type": "boolean",
          "ctx": [
            "D"
          ],
          "desc": "survive in case of UDP receiving circular buffer overrun (default false)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "D"
          ],
          "desc": "set raise error timeout, in microseconds (only in read mode) (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-sources",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Source list"
        },
        {
          "name": "-block",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Block list"
        }
      ]
    },
    {
      "id": "unix",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-listen",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Open socket for listening (default false)"
        },
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Timeout in ms (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-type",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Socket type (from INT_MIN to INT_MAX) (default stream)",
          "values": [
            {
              "name": "stream",
              "value": "1",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "Stream (reliable stream-oriented)"
            },
            {
              "name": "datagram",
              "value": "2",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "Datagram (unreliable packet-oriented)"
            },
            {
              "name": "seqpacket",
              "value": "5",
              "ctx": [
                "E",
                "D"
              ],
              "desc": "Seqpacket (reliable packet-oriented"
            }
          ]
        }
      ]
    },
    {
      "id": "amqp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum send/read packet size (from 4096 to INT_MAX) (default 131072)"
        },
        {
          "name": "-exchange",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Exchange to send/read packets (default \"amq.direct\")"
        },
        {
          "name": "-routing_key",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Key to filter streams (default \"amqp\")"
        },
        {
          "name": "-connection_timeout",
          "type": "duration",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Initial connection timeout (default -0.000001)"
        },
        {
          "name": "-delivery_mode",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Delivery mode (from 1 to 2) (default persistent)",
          "values": [
            {
              "name": "persistent",
              "value": "2",
              "ctx": [
                "E"
              ],
              "desc": "Persistent delivery mode"
            },
            {
              "name": "non-persistent",
              "value": "1",
              "ctx": [
                "E"
              ],
              "desc": "Non-persistent delivery mode"
            }
          ]
        }
      ]
    },
    {
      "id": "srt",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-timeout",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Timeout of socket I/O operations (in microseconds) (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-listen_timeout",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connection awaiting timeout (in microseconds) (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-send_buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Socket send buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-recv_buffer_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Socket receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum SRT packet size (from -1 to 1456) (default -1)",
          "values": [
            {
              "name": "ts_size",
              "value": "1316",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            },
            {
              "name": "max_size",
              "value": "1456",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "-payload_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum SRT packet size (from -1 to 1456) (default -1)",
          "values": [
            {
              "name": "ts_size",
              "value": "1316",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            },
            {
              "name": "max_size",
              "value": "1456",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "-maxbw",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum bandwidth (bytes per second) that the connection can use (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-pbkeylen",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Crypto key len in bytes {16,24,32} Default: 16 (128-bit) (from -1 to 32) (default -1)"
        },
        {
          "name": "-passphrase",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Crypto PBKDF2 Passphrase size[0,10..64] 0:disable crypto"
        },
        {
          "name": "-enforced_encryption",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Enforces that both connection parties have the same passphrase set (default auto)"
        },
        {
          "name": "-kmrefreshrate",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The number of packets to be transmitted after which the encryption key is switched to a new key (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-kmpreannounce",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The interval between when a new encryption key is sent and when switchover occurs (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-mss",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The Maximum Segment Size (from -1 to 1500) (default -1)"
        },
        {
          "name": "-ffs",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Flight flag size (window size) (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-ipttl",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "IP Time To Live (from -1 to 255) (default -1)"
        },
        {
          "name": "-iptos",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "IP Type of Service (from -1 to 255) (default -1)"
        },
        {
          "name": "-inputbw",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Estimated input stream rate (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-oheadbw",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "MaxBW ceiling based on % over input stream rate (from -1 to 100) (default -1)"
        },
        {
          "name": "-latency",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "receiver delay (in microseconds) to absorb bursts of missed packet retransmissions (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-tsbpddelay",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "deprecated, same effect as latency option (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-rcvlatency",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "receive latency (in microseconds) (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-peerlatency",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "peer latency (in microseconds) (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-tlpktdrop",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Enable too-late pkt drop (default auto)"
        },
        {
          "name": "-nakreport",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Enable receiver to send periodic NAK reports (default auto)"
        },
        {
          "name": "-connect_timeout",
          "type": "int64",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connect timeout(in milliseconds). Caller default: 3000, rendezvous (x 10) (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "-mode",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Connection mode (caller, listener, rendezvous) (from 0 to 2) (default caller)",
          "values": [
            {
              "name": "caller",
              "value": "0",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            },
            {
              "name": "listener",
              "value": "1",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            },
            {
              "name": "rendezvous",
              "value": "2",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "-sndbuf",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Send buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-rcvbuf",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Receive buffer size (in bytes) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-lossmaxttl",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum possible packet reorder tolerance (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-minversion",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The minimum SRT version that is required from the peer (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-streamid",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "A string of up to 512 characters that an Initiator can pass to a Responder"
        },
        {
          "name": "-smoother",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The type of Smoother used for the transmission for that socket"
        },
        {
          "name": "-messageapi",
          "type": "boolean",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Enable message API (default auto)"
        },
        {
          "name": "-transtype",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "The transmission type for the socket (from 0 to 2) (default 2)",
          "values": [
            {
              "name": "live",
              "value": "0",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            },
            {
              "name": "file",
              "value": "1",
              "ctx": [
                "E",
                "D"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "-linger",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Number of seconds that the socket waits for unsent data when closing (from -1 to INT_MAX) (default -1)"
        }
      ]
    },
    {
      "id": "sftp",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-timeout",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set timeout of socket I/O operations (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-truncate",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Truncate existing files on write (from 0 to 1) (default 1)"
        },
        {
          "name": "-private_key",
          "type": "string",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "set path to private key"
        }
      ]
    },
    {
      "id": "zmq",
      "input": true,
      "output": true,
      "options": [
        {
          "name": "-pkt_size",
          "type": "int",
          "ctx": [
            "E",
            "D"
          ],
          "desc": "Maximum send/read packet size (from -1 to INT_MAX) (default 131072)"
        }
      ]
    },
    {
      "id": "icecast",
      "input": false,
      "output": true,
      "options": [
        {
          "name": "-ice_genre",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set stream genre"
        },
        {
          "name": "-ice_name",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set stream description"
        },
        {
          "name": "-ice_description",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set stream description"
        },
        {
          "name": "-ice_url",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set stream website"
        },
        {
          "name": "-ice_public",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "set if stream is public (default false)"
        },
        {
          "name": "-user_agent",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "override User-Agent header"
        },
        {
          "name": "-password",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set password"
        },
        {
          "name": "-content_type",
          "type": "string",
          "ctx": [
            "E"
          ],
          "desc": "set content-type, MUST be set if not audio/mpeg"
        },
        {
          "name": "-legacy_icecast",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "use legacy SOURCE method, for Icecast < v2.4 (default false)"
        },
        {
          "name": "-tls",
          "type": "boolean",
          "ctx": [
            "E"
          ],
          "desc": "use a TLS connection (default false)"
        }
      ]
    },
    {
      "id": "md5",
      "input": false,
      "output": true,
      "options": []
    },
    {
      "id": "prompeg",
      "input": false,
      "output": true,
      "options": [
        {
          "name": "-ttl",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "Time to live (in milliseconds, multicast only) (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "-l",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "FEC L (from 4 to 20) (default 5)"
        },
        {
          "name": "-d",
          "type": "int",
          "ctx": [
            "E"
          ],
          "desc": "FEC D (from 4 to 20) (default 5)"
        }
      ]
    },
    {
      "id": "tee",
      "input": false,
      "output": true,
      "options": []
    }
  ],
  "filters": [
    {
      "id": "abench",
      "label": "Benchmark part of a filtergraph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "action",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set action (from 0 to 1) (default start)",
          "values": [
            {
              "name": "start",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "start timer"
            },
            {
              "name": "stop",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "stop timer"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acompressor",
      "label": "Audio compressor.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mode (from 0 to 1) (default downward)",
          "values": [
            {
              "name": "downward",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "upward",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set threshold (from 0.000976563 to 1) (default 0.125)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set ratio (from 1 to 20) (default 2)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set attack (from 0.01 to 2000) (default 20)"
        },
        {
          "name": "release",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set release (from 0.01 to 9000) (default 250)"
        },
        {
          "name": "makeup",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set make up gain (from 1 to 64) (default 1)"
        },
        {
          "name": "knee",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set knee (from 1 to 8) (default 2.82843)"
        },
        {
          "name": "link",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set link type (from 0 to 1) (default average)",
          "values": [
            {
              "name": "average",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "maximum",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "detection",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set detection (from 0 to 1) (default rms)",
          "values": [
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "rms",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "level_sc",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set sidechain gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acontrast",
      "label": "Simple audio dynamic range compression/expansion filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "contrast",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set contrast (from 0 to 100) (default 33)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acopy",
      "label": "Copy the input audio unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acue",
      "label": "Delay filtering to match a cue.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "cue",
          "type": "int64",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "cue unix timestamp in microseconds (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "preroll",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "preroll duration in seconds (default 0)"
        },
        {
          "name": "buffer",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "buffer duration in seconds (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acrossfade",
      "label": "Cross fade two input audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of samples for cross fade duration (from 1 to 2.14748e+08) (default 44100)"
        },
        {
          "name": "ns",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of samples for cross fade duration (from 1 to 2.14748e+08) (default 44100)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set cross fade duration (default 0)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set cross fade duration (default 0)"
        },
        {
          "name": "overlap",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "overlap 1st stream end with 2nd stream start (default true)"
        },
        {
          "name": "o",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "overlap 1st stream end with 2nd stream start (default true)"
        },
        {
          "name": "curve1",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set fade curve type for 1st stream (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        },
        {
          "name": "c1",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set fade curve type for 1st stream (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        },
        {
          "name": "curve2",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set fade curve type for 2nd stream (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        },
        {
          "name": "c2",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set fade curve type for 2nd stream (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "crossfade0"
        },
        {
          "type": "audio",
          "name": "crossfade1"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "acrossover",
      "label": "Split audio into per-bands streams.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "split",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set split frequencies (default \"500\")"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filter order (from 0 to 9) (default 4th)",
          "values": [
            {
              "name": "2nd",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "2nd order (12 dB/8ve)"
            },
            {
              "name": "4th",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "4th order (24 dB/8ve)"
            },
            {
              "name": "6th",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "6th order (36 dB/8ve)"
            },
            {
              "name": "8th",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "8th order (48 dB/8ve)"
            },
            {
              "name": "10th",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "10th order (60 dB/8ve)"
            },
            {
              "name": "12th",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "12th order (72 dB/8ve)"
            },
            {
              "name": "14th",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "14th order (84 dB/8ve)"
            },
            {
              "name": "16th",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "16th order (96 dB/8ve)"
            },
            {
              "name": "18th",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "18th order (108 dB/8ve)"
            },
            {
              "name": "20th",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "20th order (120 dB/8ve)"
            }
          ]
        },
        {
          "name": "level",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input gain (from 0 to 1) (default 1)"
        },
        {
          "name": "gain",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output bands gain (default \"1.f\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "acrusher",
      "label": "Reduce audio bit resolution.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level in (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level out (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "bits",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set bit reduction (from 1 to 64) (default 8)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 0.5)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mode (from 0 to 1) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "dc",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set DC (from 0.25 to 4) (default 1)"
        },
        {
          "name": "aa",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set anti-aliasing (from 0 to 1) (default 0.5)"
        },
        {
          "name": "samples",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set sample reduction (from 1 to 250) (default 1)"
        },
        {
          "name": "lfo",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "enable LFO (default false)"
        },
        {
          "name": "lforange",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set LFO depth (from 1 to 250) (default 20)"
        },
        {
          "name": "lforate",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set LFO rate (from 0.01 to 200) (default 0.3)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "adeclick",
      "label": "Remove impulsive noise from input audio.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "window",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 10 to 100) (default 55)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 10 to 100) (default 55)"
        },
        {
          "name": "overlap",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 50 to 95) (default 75)"
        },
        {
          "name": "o",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 50 to 95) (default 75)"
        },
        {
          "name": "arorder",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set autoregression order (from 0 to 25) (default 2)"
        },
        {
          "name": "a",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set autoregression order (from 0 to 25) (default 2)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold (from 1 to 100) (default 2)"
        },
        {
          "name": "t",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold (from 1 to 100) (default 2)"
        },
        {
          "name": "burst",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set burst fusion (from 0 to 10) (default 2)"
        },
        {
          "name": "b",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set burst fusion (from 0 to 10) (default 2)"
        },
        {
          "name": "method",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set overlap method (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "a",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "save",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set overlap method (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "a",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "save",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "adeclip",
      "label": "Remove clipping from input audio.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "window",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 10 to 100) (default 55)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 10 to 100) (default 55)"
        },
        {
          "name": "overlap",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 50 to 95) (default 75)"
        },
        {
          "name": "o",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 50 to 95) (default 75)"
        },
        {
          "name": "arorder",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set autoregression order (from 0 to 25) (default 8)"
        },
        {
          "name": "a",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set autoregression order (from 0 to 25) (default 8)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold (from 1 to 100) (default 10)"
        },
        {
          "name": "t",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold (from 1 to 100) (default 10)"
        },
        {
          "name": "hsize",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set histogram size (from 100 to 9999) (default 1000)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set histogram size (from 100 to 9999) (default 1000)"
        },
        {
          "name": "method",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set overlap method (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "a",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "save",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set overlap method (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "a",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-add"
            },
            {
              "name": "save",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "overlap-save"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "adelay",
      "label": "Delay one or more audio channels.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "delays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set list of delays for each channel"
        },
        {
          "name": "all",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "use last available delay for remained channels (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "adenorm",
      "label": "Remedy denormals by adding extremely low-level noise.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level (from -451 to -90) (default -351)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set type (from 0 to 3) (default dc)",
          "values": [
            {
              "name": "dc",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "ac",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "square",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pulse",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aderivative",
      "label": "Compute derivative of input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aecho",
      "label": "Add echoing to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "in_gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set signal input gain (from 0 to 1) (default 0.6)"
        },
        {
          "name": "out_gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set signal output gain (from 0 to 1) (default 0.3)"
        },
        {
          "name": "delays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set list of signal delays (default \"1000\")"
        },
        {
          "name": "decays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set list of signal decays (default \"0.5\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aemphasis",
      "label": "Audio emphasis.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input gain (from 0 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output gain (from 0 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter mode (from 0 to 1) (default reproduction)",
          "values": [
            {
              "name": "reproduction",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "production",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter type (from 0 to 8) (default cd)",
          "values": [
            {
              "name": "col",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Columbia"
            },
            {
              "name": "emi",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "EMI"
            },
            {
              "name": "bsi",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "BSI (78RPM)"
            },
            {
              "name": "riaa",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "RIAA"
            },
            {
              "name": "cd",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Compact Disc (CD)"
            },
            {
              "name": "50fm",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "50µs (FM)"
            },
            {
              "name": "75fm",
              "value": "6",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "75µs (FM)"
            },
            {
              "name": "50kf",
              "value": "7",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "50µs (FM-KF)"
            },
            {
              "name": "75kf",
              "value": "8",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "75µs (FM-KF)"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aeval",
      "label": "Filter audio signal according to a specified expression.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "exprs",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the '|'-separated list of channels expressions"
        },
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel layout"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel layout"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aexciter",
      "label": "Enhance high frequency part of audio.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level in (from 0 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level out (from 0 to 64) (default 1)"
        },
        {
          "name": "amount",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set amount (from 0 to 64) (default 1)"
        },
        {
          "name": "drive",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set harmonics (from 0.1 to 10) (default 8.5)"
        },
        {
          "name": "blend",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set blend harmonics (from -10 to 10) (default 0)"
        },
        {
          "name": "freq",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set scope (from 2000 to 12000) (default 7500)"
        },
        {
          "name": "ceil",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set ceiling (from 9999 to 20000) (default 9999)"
        },
        {
          "name": "listen",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "enable listen mode (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afade",
      "label": "Fade in/out input audio.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the fade direction (from 0 to 1) (default in)",
          "values": [
            {
              "name": "in",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "fade-in"
            },
            {
              "name": "out",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "fade-out"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the fade direction (from 0 to 1) (default in)",
          "values": [
            {
              "name": "in",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "fade-in"
            },
            {
              "name": "out",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "fade-out"
            }
          ]
        },
        {
          "name": "start_sample",
          "type": "int64",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set number of first sample to start fading (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "ss",
          "type": "int64",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set number of first sample to start fading (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "nb_samples",
          "type": "int64",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set number of samples for fade duration (from 1 to I64_MAX) (default 44100)"
        },
        {
          "name": "ns",
          "type": "int64",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set number of samples for fade duration (from 1 to I64_MAX) (default 44100)"
        },
        {
          "name": "start_time",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set time to start fading (default 0)"
        },
        {
          "name": "st",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set time to start fading (default 0)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set fade duration (default 0)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set fade duration (default 0)"
        },
        {
          "name": "curve",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set fade curve type (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set fade curve type (from -1 to 18) (default tri)",
          "values": [
            {
              "name": "nofade",
              "value": "-1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "no fade; keep audio as-is"
            },
            {
              "name": "tri",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "linear slope"
            },
            {
              "name": "qsin",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "quarter of sine wave"
            },
            {
              "name": "esin",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "exponential sine wave"
            },
            {
              "name": "hsin",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "half of sine wave"
            },
            {
              "name": "log",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "ipar",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted parabola"
            },
            {
              "name": "qua",
              "value": "6",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "quadratic"
            },
            {
              "name": "cub",
              "value": "7",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "cubic"
            },
            {
              "name": "squ",
              "value": "8",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "square root"
            },
            {
              "name": "cbr",
              "value": "9",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "cubic root"
            },
            {
              "name": "par",
              "value": "10",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "parabola"
            },
            {
              "name": "exp",
              "value": "11",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "exponential"
            },
            {
              "name": "iqsin",
              "value": "12",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted quarter of sine wave"
            },
            {
              "name": "ihsin",
              "value": "13",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted half of sine wave"
            },
            {
              "name": "dese",
              "value": "14",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "double-exponential seat"
            },
            {
              "name": "desi",
              "value": "15",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "double-exponential sigmoid"
            },
            {
              "name": "losi",
              "value": "16",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "logistic sigmoid"
            },
            {
              "name": "sinc",
              "value": "17",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "sine cardinal function"
            },
            {
              "name": "isinc",
              "value": "18",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "inverted sine cardinal function"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afftdn",
      "label": "Denoise audio samples using FFT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "nr",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the noise reduction (from 0.01 to 97) (default 12)"
        },
        {
          "name": "nf",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the noise floor (from -80 to -20) (default -50)"
        },
        {
          "name": "nt",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the noise type (from 0 to 3) (default w)",
          "values": [
            {
              "name": "w",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "white noise"
            },
            {
              "name": "v",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "vinyl noise"
            },
            {
              "name": "s",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "shellac noise"
            },
            {
              "name": "c",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "custom noise"
            }
          ]
        },
        {
          "name": "bn",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the custom bands noise"
        },
        {
          "name": "rf",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the residual floor (from -80 to -20) (default -38)"
        },
        {
          "name": "tn",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "track noise (default false)"
        },
        {
          "name": "tr",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "track residual (default false)"
        },
        {
          "name": "om",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output mode (from 0 to 2) (default o)",
          "values": [
            {
              "name": "i",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "input"
            },
            {
              "name": "o",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "output"
            },
            {
              "name": "n",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "noise"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afftfilt",
      "label": "Apply arbitrary expressions to samples in frequency domain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "real",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels real expressions (default \"re\")"
        },
        {
          "name": "imag",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels imaginary expressions (default \"im\")"
        },
        {
          "name": "win_size",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 16 to 131072) (default 4096)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default hann)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 0 to 1) (default 0.75)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afir",
      "label": "Apply Finite Impulse Response filter with supplied coefficients in additional stream(s).",
      "timeline": false,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "dry",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set dry gain (from 0 to 10) (default 1)"
        },
        {
          "name": "wet",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set wet gain (from 0 to 10) (default 1)"
        },
        {
          "name": "length",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set IR length (from 0 to 1) (default 1)"
        },
        {
          "name": "gtype",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set IR auto gain type (from -1 to 2) (default peak)",
          "values": [
            {
              "name": "none",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "without auto gain"
            },
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "peak gain"
            },
            {
              "name": "dc",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "DC gain"
            },
            {
              "name": "gn",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "gain to noise"
            }
          ]
        },
        {
          "name": "irgain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set IR gain (from 0 to 1) (default 1)"
        },
        {
          "name": "irfmt",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set IR format (from 0 to 1) (default input)",
          "values": [
            {
              "name": "mono",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "single channel"
            },
            {
              "name": "input",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "same as input"
            }
          ]
        },
        {
          "name": "maxir",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set max IR length (from 0.1 to 60) (default 30)"
        },
        {
          "name": "response",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "show IR frequency response (default false)"
        },
        {
          "name": "channel",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set IR channel to display frequency response (from 0 to 1024) (default 0)"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"hd720\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "minp",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set min partition size (from 1 to 32768) (default 8192)"
        },
        {
          "name": "maxp",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set max partition size (from 8 to 32768) (default 8192)"
        },
        {
          "name": "nbirs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of input IRs (from 1 to 32) (default 1)"
        },
        {
          "name": "ir",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "select IR (from 0 to 31) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "aformat",
      "label": "Convert the input audio to one of the specified formats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_fmts",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of sample formats."
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of sample formats."
        },
        {
          "name": "sample_rates",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of sample rates."
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of sample rates."
        },
        {
          "name": "channel_layouts",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of channel layouts."
        },
        {
          "name": "cl",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A '|'-separated list of channel layouts."
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afreqshift",
      "label": "Apply frequency shifting to input audio.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "shift",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set frequency shift (from -2.14748e+09 to INT_MAX) (default 0)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output level (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "agate",
      "label": "Audio gate.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mode (from 0 to 1) (default downward)",
          "values": [
            {
              "name": "downward",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "upward",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "range",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set max gain reduction (from 0 to 1) (default 0.06125)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set threshold (from 0 to 1) (default 0.125)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set ratio (from 1 to 9000) (default 2)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set attack (from 0.01 to 9000) (default 20)"
        },
        {
          "name": "release",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set release (from 0.01 to 9000) (default 250)"
        },
        {
          "name": "makeup",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set makeup gain (from 1 to 64) (default 1)"
        },
        {
          "name": "knee",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set knee (from 1 to 8) (default 2.82843)"
        },
        {
          "name": "detection",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set detection (from 0 to 1) (default rms)",
          "values": [
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "rms",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "link",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set link (from 0 to 1) (default average)",
          "values": [
            {
              "name": "average",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "maximum",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "level_sc",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set sidechain gain (from 0.015625 to 64) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aiir",
      "label": "Apply Infinite Impulse Response filter with supplied coefficients.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "zeros",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set B/numerator/zeros/reflection coefficients (default \"1+0i 1-0i\")"
        },
        {
          "name": "z",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set B/numerator/zeros/reflection coefficients (default \"1+0i 1-0i\")"
        },
        {
          "name": "poles",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set A/denominator/poles/ladder coefficients (default \"1+0i 1-0i\")"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set A/denominator/poles/ladder coefficients (default \"1+0i 1-0i\")"
        },
        {
          "name": "gains",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels gains (default \"1|1\")"
        },
        {
          "name": "k",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels gains (default \"1|1\")"
        },
        {
          "name": "dry",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set dry gain (from 0 to 1) (default 1)"
        },
        {
          "name": "wet",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set wet gain (from 0 to 1) (default 1)"
        },
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set coefficients format (from -2 to 4) (default zp)",
          "values": [
            {
              "name": "ll",
              "value": "-2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder function"
            },
            {
              "name": "sf",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "analog transfer function"
            },
            {
              "name": "tf",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "digital transfer function"
            },
            {
              "name": "zp",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles"
            },
            {
              "name": "pr",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles (polar radians)"
            },
            {
              "name": "pd",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles (polar degrees)"
            },
            {
              "name": "sp",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "S-plane zeros/poles"
            }
          ]
        },
        {
          "name": "f",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set coefficients format (from -2 to 4) (default zp)",
          "values": [
            {
              "name": "ll",
              "value": "-2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder function"
            },
            {
              "name": "sf",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "analog transfer function"
            },
            {
              "name": "tf",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "digital transfer function"
            },
            {
              "name": "zp",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles"
            },
            {
              "name": "pr",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles (polar radians)"
            },
            {
              "name": "pd",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Z-plane zeros/poles (polar degrees)"
            },
            {
              "name": "sp",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "S-plane zeros/poles"
            }
          ]
        },
        {
          "name": "process",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set kind of processing (from 0 to 2) (default s)",
          "values": [
            {
              "name": "d",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "serial"
            },
            {
              "name": "p",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parallel"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set kind of processing (from 0 to 2) (default s)",
          "values": [
            {
              "name": "d",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "serial"
            },
            {
              "name": "p",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "parallel"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from 0 to 3) (default dbl)",
          "values": [
            {
              "name": "dbl",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-precision floating-point"
            },
            {
              "name": "flt",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "single-precision floating-point"
            },
            {
              "name": "i32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "32-bit integers"
            },
            {
              "name": "i16",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "16-bit integers"
            }
          ]
        },
        {
          "name": "e",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set precision (from 0 to 3) (default dbl)",
          "values": [
            {
              "name": "dbl",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "double-precision floating-point"
            },
            {
              "name": "flt",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "single-precision floating-point"
            },
            {
              "name": "i32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "32-bit integers"
            },
            {
              "name": "i16",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "16-bit integers"
            }
          ]
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "normalize coefficients (default true)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "normalize coefficients (default true)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "response",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "show IR frequency response (default false)"
        },
        {
          "name": "channel",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set IR channel to display frequency response (from 0 to 1024) (default 0)"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"hd720\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "aintegral",
      "label": "Compute integral of input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "ainterleave",
      "label": "Temporally interleave audio inputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "nb_inputs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of inputs (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of inputs (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "duration",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "how to determine the end-of-stream (from 0 to 2) (default longest)",
          "values": [
            {
              "name": "longest",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of longest input"
            },
            {
              "name": "shortest",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of shortest input"
            },
            {
              "name": "first",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of first input"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "alimiter",
      "label": "Audio lookahead limiter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "limit",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set limit (from 0.0625 to 1) (default 1)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set attack (from 0.1 to 80) (default 5)"
        },
        {
          "name": "release",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set release (from 1 to 8000) (default 50)"
        },
        {
          "name": "asc",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "enable asc (default false)"
        },
        {
          "name": "asc_level",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set asc level (from 0 to 1) (default 0.5)"
        },
        {
          "name": "level",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "auto level (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "main"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "allpass",
      "label": "Apply a two-pole all-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default h)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default h)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width (from 0 to 99999) (default 707.1)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width (from 0 to 99999) (default 707.1)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 1 to 2) (default 2)"
        },
        {
          "name": "o",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 1 to 2) (default 2)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aloop",
      "label": "Loop audio samples.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "loop",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "number of loops (from -1 to INT_MAX) (default 0)"
        },
        {
          "name": "size",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "max number of samples to loop (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "start",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the loop start sample (from 0 to I64_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "amerge",
      "label": "Merge two or more audio streams into a single multi-channel stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "specify the number of inputs (from 1 to 64) (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "ametadata",
      "label": "Manipulate audio frame metadata.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set a mode of operation (from 0 to 4) (default select)",
          "values": [
            {
              "name": "select",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "select frame"
            },
            {
              "name": "add",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "add new metadata"
            },
            {
              "name": "modify",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "modify metadata"
            },
            {
              "name": "delete",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "delete metadata"
            },
            {
              "name": "print",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "print metadata"
            }
          ]
        },
        {
          "name": "key",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set metadata key"
        },
        {
          "name": "value",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set metadata value"
        },
        {
          "name": "function",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "function for comparing values (from 0 to 6) (default same_str)",
          "values": [
            {
              "name": "same_str",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "starts_with",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "less",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "equal",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "greater",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "expr",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "ends_with",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set expression for expr function"
        },
        {
          "name": "file",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set file where to print metadata information"
        },
        {
          "name": "direct",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "reduce buffering when printing to user-set file or pipe (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "amix",
      "label": "Audio mixing.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Number of inputs. (from 1 to 32767) (default 2)"
        },
        {
          "name": "duration",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "How to determine the end-of-stream. (from 0 to 2) (default longest)",
          "values": [
            {
              "name": "longest",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of longest input."
            },
            {
              "name": "shortest",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of shortest input."
            },
            {
              "name": "first",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Duration of first input."
            }
          ]
        },
        {
          "name": "dropout_transition",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Transition time, in seconds, for volume renormalization when an input stream ends. (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "weights",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "Set weight for each input. (default \"1 1\")"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "Scale inputs (default true)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "amultiply",
      "label": "Multiply two audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "multiply0"
        },
        {
          "type": "audio",
          "name": "multiply1"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anequalizer",
      "label": "Apply high-order audio parametric multi band equalizer.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "params",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(default \"\")"
        },
        {
          "name": "curves",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw frequency response curves (default false)"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"hd720\")"
        },
        {
          "name": "mgain",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max gain (from -900 to 900) (default 60)"
        },
        {
          "name": "fscale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frequency scale (from 0 to 1) (default log)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "colors",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channels curves colors (default \"red|green|blue|yellow|orange|lime|pink|magenta|brown\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "anlmdn",
      "label": "Reduce broadband noise from stream using Non-Local Means.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "s",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set denoising strength (from 1e-05 to 10) (default 1e-05)"
        },
        {
          "name": "p",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set patch duration (default 0.002)"
        },
        {
          "name": "r",
          "type": "duration",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set research duration (default 0.006)"
        },
        {
          "name": "o",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output mode (from 0 to 2) (default o)",
          "values": [
            {
              "name": "i",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "input"
            },
            {
              "name": "o",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "output"
            },
            {
              "name": "n",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "noise"
            }
          ]
        },
        {
          "name": "m",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set smooth factor (from 1 to 15) (default 11)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anlms",
      "label": "Apply Normalized Least-Mean-Squares algorithm to first audio stream.",
      "timeline": false,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the filter order (from 1 to 32767) (default 256)"
        },
        {
          "name": "mu",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the filter mu (from 0 to 2) (default 0.75)"
        },
        {
          "name": "eps",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the filter eps (from 0 to 1) (default 1)"
        },
        {
          "name": "leakage",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the filter leakage (from 0 to 1) (default 0)"
        },
        {
          "name": "out_mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output mode (from 0 to 3) (default o)",
          "values": [
            {
              "name": "i",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "input"
            },
            {
              "name": "d",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "desired"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "output"
            },
            {
              "name": "n",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "noise"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "input"
        },
        {
          "type": "audio",
          "name": "desired"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anull",
      "label": "Pass the source unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "apad",
      "label": "Pad audio with silence.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "packet_size",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set silence packet size (from 0 to INT_MAX) (default 4096)"
        },
        {
          "name": "pad_len",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of samples of silence to add (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "whole_len",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set minimum target number of samples in the audio stream (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "pad_dur",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set duration of silence to add (default 0)"
        },
        {
          "name": "whole_dur",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set minimum target duration in the audio stream (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aperms",
      "label": "Set permissions for the output audio frame.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "select permissions mode (from 0 to 4) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "do nothing"
            },
            {
              "name": "ro",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set all output frames read-only"
            },
            {
              "name": "rw",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set all output frames writable"
            },
            {
              "name": "toggle",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "switch permissions"
            },
            {
              "name": "random",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set permissions randomly"
            }
          ]
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set the seed for the random mode (from -1 to UINT32_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aphaser",
      "label": "Add a phasing effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "in_gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input gain (from 0 to 1) (default 0.4)"
        },
        {
          "name": "out_gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output gain (from 0 to 1e+09) (default 0.74)"
        },
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set delay in milliseconds (from 0 to 5) (default 3)"
        },
        {
          "name": "decay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set decay (from 0 to 0.99) (default 0.4)"
        },
        {
          "name": "speed",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set modulation speed (from 0.1 to 2) (default 0.5)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set modulation type (from 0 to 1) (default triangular)",
          "values": [
            {
              "name": "triangular",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "t",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "sinusoidal",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "s",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aphaseshift",
      "label": "Apply phase shifting to input audio.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "shift",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set phase shift (from -1 to 1) (default 0)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output level (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "apulsator",
      "label": "Audio pulsator.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set mode (from 0 to 4) (default sine)",
          "values": [
            {
              "name": "sine",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "triangle",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "square",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "sawup",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "sawdown",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "amount",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set modulation (from 0 to 1) (default 1)"
        },
        {
          "name": "offset_l",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set offset L (from 0 to 1) (default 0)"
        },
        {
          "name": "offset_r",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set offset R (from 0 to 1) (default 0.5)"
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set pulse width (from 0 to 2) (default 1)"
        },
        {
          "name": "timing",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set timing (from 0 to 2) (default hz)",
          "values": [
            {
              "name": "bpm",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "ms",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "hz",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "bpm",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set BPM (from 30 to 300) (default 120)"
        },
        {
          "name": "ms",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set ms (from 10 to 2000) (default 500)"
        },
        {
          "name": "hz",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency (from 0.01 to 100) (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "arealtime",
      "label": "Slow down filtering to match realtime.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "limit",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "sleep time limit (default 2)"
        },
        {
          "name": "speed",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "speed factor (from DBL_MIN to DBL_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aresample",
      "label": "Resample audio data.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-ich",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set input channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-in_channel_count",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set input channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-och",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set output channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-out_channel_count",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set output channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-uch",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set used channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-used_channel_count",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set used channel count (from 0 to 64) (default 0)"
        },
        {
          "name": "-isr",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set input sample rate (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-in_sample_rate",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set input sample rate (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-osr",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set output sample rate (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-out_sample_rate",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set output sample rate (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "-isf",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set input sample format (default none)"
        },
        {
          "name": "-in_sample_fmt",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set input sample format (default none)"
        },
        {
          "name": "-osf",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set output sample format (default none)"
        },
        {
          "name": "-out_sample_fmt",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set output sample format (default none)"
        },
        {
          "name": "-tsf",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set internal sample format (default none)"
        },
        {
          "name": "-internal_sample_fmt",
          "type": "sample_fmt",
          "ctx": [
            "A"
          ],
          "desc": "set internal sample format (default none)"
        },
        {
          "name": "-icl",
          "type": "channel_layout",
          "ctx": [
            "A"
          ],
          "desc": "set input channel layout (default 0x0)"
        },
        {
          "name": "-in_channel_layout",
          "type": "channel_layout",
          "ctx": [
            "A"
          ],
          "desc": "set input channel layout (default 0x0)"
        },
        {
          "name": "-ocl",
          "type": "channel_layout",
          "ctx": [
            "A"
          ],
          "desc": "set output channel layout (default 0x0)"
        },
        {
          "name": "-out_channel_layout",
          "type": "channel_layout",
          "ctx": [
            "A"
          ],
          "desc": "set output channel layout (default 0x0)"
        },
        {
          "name": "-clev",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set center mix level (from -32 to 32) (default 0.707107)"
        },
        {
          "name": "-center_mix_level",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set center mix level (from -32 to 32) (default 0.707107)"
        },
        {
          "name": "-slev",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set surround mix level (from -32 to 32) (default 0.707107)"
        },
        {
          "name": "-surround_mix_level",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set surround mix Level (from -32 to 32) (default 0.707107)"
        },
        {
          "name": "-lfe_mix_level",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set LFE mix level (from -32 to 32) (default 0)"
        },
        {
          "name": "-rmvol",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set rematrix volume (from -1000 to 1000) (default 1)"
        },
        {
          "name": "-rematrix_volume",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set rematrix volume (from -1000 to 1000) (default 1)"
        },
        {
          "name": "-rematrix_maxval",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set rematrix maxval (from 0 to 1000) (default 0)"
        },
        {
          "name": "-flags",
          "type": "flags",
          "ctx": [
            "A"
          ],
          "desc": "set flags (default 0)",
          "values": [
            {
              "name": "res",
              "ctx": [
                "A"
              ],
              "desc": "force resampling"
            }
          ]
        },
        {
          "name": "-swr_flags",
          "type": "flags",
          "ctx": [
            "A"
          ],
          "desc": "set flags (default 0)",
          "values": [
            {
              "name": "res",
              "ctx": [
                "A"
              ],
              "desc": "force resampling"
            }
          ]
        },
        {
          "name": "-dither_scale",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set dither scale (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "-dither_method",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set dither method (from 0 to 71) (default 0)",
          "values": [
            {
              "name": "rectangular",
              "value": "1",
              "ctx": [
                "A"
              ],
              "desc": "select rectangular dither"
            },
            {
              "name": "triangular",
              "value": "2",
              "ctx": [
                "A"
              ],
              "desc": "select triangular dither"
            },
            {
              "name": "triangular_hp",
              "value": "3",
              "ctx": [
                "A"
              ],
              "desc": "select triangular dither with high pass"
            },
            {
              "name": "lipshitz",
              "value": "65",
              "ctx": [
                "A"
              ],
              "desc": "select Lipshitz noise shaping dither"
            },
            {
              "name": "shibata",
              "value": "69",
              "ctx": [
                "A"
              ],
              "desc": "select Shibata noise shaping dither"
            },
            {
              "name": "low_shibata",
              "value": "70",
              "ctx": [
                "A"
              ],
              "desc": "select low Shibata noise shaping dither"
            },
            {
              "name": "high_shibata",
              "value": "71",
              "ctx": [
                "A"
              ],
              "desc": "select high Shibata noise shaping dither"
            },
            {
              "name": "f_weighted",
              "value": "66",
              "ctx": [
                "A"
              ],
              "desc": "select f-weighted noise shaping dither"
            },
            {
              "name": "modified_e_weighted",
              "value": "67",
              "ctx": [
                "A"
              ],
              "desc": "select modified-e-weighted noise shaping dither"
            },
            {
              "name": "improved_e_weighted",
              "value": "68",
              "ctx": [
                "A"
              ],
              "desc": "select improved-e-weighted noise shaping dither"
            }
          ]
        },
        {
          "name": "-filter_size",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set swr resampling filter size (from 0 to INT_MAX) (default 32)"
        },
        {
          "name": "-phase_shift",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set swr resampling phase shift (from 0 to 24) (default 10)"
        },
        {
          "name": "-linear_interp",
          "type": "boolean",
          "ctx": [
            "A"
          ],
          "desc": "enable linear interpolation (default true)"
        },
        {
          "name": "-exact_rational",
          "type": "boolean",
          "ctx": [
            "A"
          ],
          "desc": "enable exact rational (default true)"
        },
        {
          "name": "-cutoff",
          "type": "double",
          "ctx": [
            "A"
          ],
          "desc": "set cutoff frequency ratio (from 0 to 1) (default 0)"
        },
        {
          "name": "-resample_cutoff",
          "type": "double",
          "ctx": [
            "A"
          ],
          "desc": "set cutoff frequency ratio (from 0 to 1) (default 0)"
        },
        {
          "name": "-resampler",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set resampling Engine (from 0 to 1) (default swr)",
          "values": [
            {
              "name": "swr",
              "value": "0",
              "ctx": [
                "A"
              ],
              "desc": "select SW Resampler"
            },
            {
              "name": "soxr",
              "value": "1",
              "ctx": [
                "A"
              ],
              "desc": "select SoX Resampler"
            }
          ]
        },
        {
          "name": "-precision",
          "type": "double",
          "ctx": [
            "A"
          ],
          "desc": "set soxr resampling precision (in bits) (from 15 to 33) (default 20)"
        },
        {
          "name": "-cheby",
          "type": "boolean",
          "ctx": [
            "A"
          ],
          "desc": "enable soxr Chebyshev passband & higher-precision irrational ratio approximation (default false)"
        },
        {
          "name": "-min_comp",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied (from 0 to FLT_MAX) (default FLT_MAX)"
        },
        {
          "name": "-min_hard_comp",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data. (from 0 to INT_MAX) (default 0.1)"
        },
        {
          "name": "-comp_duration",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps. (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "-max_soft_comp",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "set maximum factor by which data is stretched/squeezed to make it match the timestamps. (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-async",
          "type": "float",
          "ctx": [
            "A"
          ],
          "desc": "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second) (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "-first_pts",
          "type": "int64",
          "ctx": [
            "A"
          ],
          "desc": "Assume the first pts should be this value (in samples). (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "-matrix_encoding",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set matrixed stereo encoding (from 0 to 6) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "A"
              ],
              "desc": "select none"
            },
            {
              "name": "dolby",
              "value": "1",
              "ctx": [
                "A"
              ],
              "desc": "select Dolby"
            },
            {
              "name": "dplii",
              "value": "2",
              "ctx": [
                "A"
              ],
              "desc": "select Dolby Pro Logic II"
            }
          ]
        },
        {
          "name": "-filter_type",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "select swr filter type (from 0 to 2) (default kaiser)",
          "values": [
            {
              "name": "cubic",
              "value": "0",
              "ctx": [
                "A"
              ],
              "desc": "select cubic"
            },
            {
              "name": "blackman_nuttall",
              "value": "1",
              "ctx": [
                "A"
              ],
              "desc": "select Blackman Nuttall windowed sinc"
            },
            {
              "name": "kaiser",
              "value": "2",
              "ctx": [
                "A"
              ],
              "desc": "select Kaiser windowed sinc"
            }
          ]
        },
        {
          "name": "-kaiser_beta",
          "type": "double",
          "ctx": [
            "A"
          ],
          "desc": "set swr Kaiser window beta (from 2 to 16) (default 9)"
        },
        {
          "name": "-output_sample_bits",
          "type": "int",
          "ctx": [
            "A"
          ],
          "desc": "set swr number of output sample bits (from 0 to 64) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "areverse",
      "label": "Reverse an audio clip.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "arnndn",
      "label": "Reduce noise from speech using Recurrent Neural Networks.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "model",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set model name"
        },
        {
          "name": "m",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set model name"
        },
        {
          "name": "mix",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set output vs input mix (from -1 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aselect",
      "label": "Select audio frames to pass in output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set an expression to use for selecting frames (default \"1\")"
        },
        {
          "name": "e",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set an expression to use for selecting frames (default \"1\")"
        },
        {
          "name": "outputs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of outputs (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of outputs (from 1 to INT_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "asendcmd",
      "label": "Send commands to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "commands",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands"
        },
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands file"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands file"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asetnsamples",
      "label": "Set the number of samples for each output audio frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "nb_out_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of per-frame output samples (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of per-frame output samples (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "pad",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "pad last frame with zeros (default true)"
        },
        {
          "name": "p",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "pad last frame with zeros (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asetpts",
      "label": "Set PTS for the output audio frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Expression determining the frame timestamp (default \"PTS\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asetrate",
      "label": "Change the sample rate without altering the data.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (from 1 to INT_MAX) (default 44100)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asettb",
      "label": "Set timebase for the audio output link.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set expression determining the output timebase (default \"intb\")"
        },
        {
          "name": "tb",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set expression determining the output timebase (default \"intb\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "ashowinfo",
      "label": "Show textual information for each audio frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asidedata",
      "label": "Manipulate audio frame side data.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set a mode of operation (from 0 to 1) (default select)",
          "values": [
            {
              "name": "select",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "select frame"
            },
            {
              "name": "delete",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "delete side data"
            }
          ]
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side data type (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "PANSCAN",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "A53_CC",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "STEREO3D",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "MATRIXENCODING",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "DOWNMIX_INFO",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "REPLAYGAIN",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "DISPLAYMATRIX",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "AFD",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "MOTION_VECTORS",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "SKIP_SAMPLES",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "AUDIO_SERVICE_TYPE",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "MASTERING_DISPLAY_METADATA",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "GOP_TIMECODE",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "SPHERICAL",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "CONTENT_LIGHT_LEVEL",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "ICC_PROFILE",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "QP_TABLE_PROPERTIES",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "QP_TABLE_DATA",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "S12M_TIMECOD",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "DYNAMIC_HDR_PLUS",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "REGIONS_OF_INTEREST",
              "value": "20",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "SEI_UNREGISTERED",
              "value": "22",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asoftclip",
      "label": "Audio Soft Clipper.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set softclip type (from -1 to 7) (default tanh)",
          "values": [
            {
              "name": "hard",
              "value": "-1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "tanh",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "atan",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "cubic",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exp",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "alg",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "quintic",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "sin",
              "value": "6",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "erf",
              "value": "7",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set softclip threshold (from 1e-06 to 1) (default 1)"
        },
        {
          "name": "output",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set softclip output gain (from 1e-06 to 16) (default 1)"
        },
        {
          "name": "param",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set softclip parameter (from 0.01 to 3) (default 1)"
        },
        {
          "name": "oversample",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set oversample factor (from 1 to 32) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asplit",
      "label": "Pass on the audio input to N audio outputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "outputs",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set number of outputs (from 1 to INT_MAX) (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "asr",
      "label": "Automatic Speech Recognition.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sampling rate (from 0 to INT_MAX) (default 16000)"
        },
        {
          "name": "hmm",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set directory containing acoustic model files"
        },
        {
          "name": "dict",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set pronunciation dictionary"
        },
        {
          "name": "lm",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set language model file"
        },
        {
          "name": "lmctl",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set language model set"
        },
        {
          "name": "lmname",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set which language model to use"
        },
        {
          "name": "logfn",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output for log messages (default \"/dev/null\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "astats",
      "label": "Show time domain statistics about audio frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "length",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the window length (from 0.01 to 10) (default 0.05)"
        },
        {
          "name": "metadata",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "inject metadata in the filtergraph (default false)"
        },
        {
          "name": "reset",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "recalculate stats after this many frames (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "measure_perchannel",
          "type": "flags",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "only measure_perchannel these per-channel statistics (default all+DC_offset+Min_level+Max_level+Min_difference+Max_difference+Mean_difference+RMS_difference+Peak_level+RMS_level+RMS_peak+RMS_trough+Crest_factor+Flat_factor+Peak_count+Bit_depth+Dynamic_range+Zero_crossings+Zero_crossings_rate+Noise_floor+Noise_floor_count+Number_of_samples+Number_of_NaNs+Number_of_Infs+Number_of_denormals)",
          "values": [
            {
              "name": "none",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "DC_offset",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Min_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Max_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Min_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Max_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Mean_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Peak_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_peak",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_trough",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Crest_factor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Flat_factor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Peak_count",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Bit_depth",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Dynamic_range",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Zero_crossings",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Zero_crossings_rate",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Noise_floor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Noise_floor_count",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_samples",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_NaNs",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_Infs",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_denormals",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "measure_overall",
          "type": "flags",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "only measure_perchannel these overall statistics (default all+DC_offset+Min_level+Max_level+Min_difference+Max_difference+Mean_difference+RMS_difference+Peak_level+RMS_level+RMS_peak+RMS_trough+Crest_factor+Flat_factor+Peak_count+Bit_depth+Dynamic_range+Zero_crossings+Zero_crossings_rate+Noise_floor+Noise_floor_count+Number_of_samples+Number_of_NaNs+Number_of_Infs+Number_of_denormals)",
          "values": [
            {
              "name": "none",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "DC_offset",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Min_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Max_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Min_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Max_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Mean_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_difference",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Peak_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_level",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_peak",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "RMS_trough",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Crest_factor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Flat_factor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Peak_count",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Bit_depth",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Dynamic_range",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Zero_crossings",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Zero_crossings_rate",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Noise_floor",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Noise_floor_count",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_samples",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_NaNs",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_Infs",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "Number_of_denormals",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "astreamselect",
      "label": "Select audio streams",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "number of input streams (from 2 to INT_MAX) (default 2)"
        },
        {
          "name": "map",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A",
            "T"
          ],
          "desc": "input indexes to remap to outputs"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "asubboost",
      "label": "Boost subwoofer frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "dry",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set dry gain (from 0 to 1) (default 0.7)"
        },
        {
          "name": "wet",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set wet gain (from 0 to 1) (default 0.7)"
        },
        {
          "name": "decay",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set decay (from 0 to 1) (default 0.7)"
        },
        {
          "name": "feedback",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set feedback (from 0 to 1) (default 0.9)"
        },
        {
          "name": "cutoff",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set cutoff (from 50 to 900) (default 100)"
        },
        {
          "name": "slope",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set slope (from 0.0001 to 1) (default 0.5)"
        },
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set delay (from 1 to 100) (default 20)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asubcut",
      "label": "Cut subwoofer frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "cutoff",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set cutoff frequency (from 2 to 200) (default 20)"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 3 to 20) (default 10)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asupercut",
      "label": "Cut super frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "cutoff",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set cutoff frequency (from 20000 to 192000) (default 20000)"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 3 to 20) (default 10)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asuperpass",
      "label": "Apply high order Butterworth band-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "centerf",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set center frequency (from 2 to 999999) (default 1000)"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 4 to 20) (default 4)"
        },
        {
          "name": "qfactor",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set Q-factor (from 0.01 to 100) (default 1)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0 to 2) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "asuperstop",
      "label": "Apply high order Butterworth band-stop filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "centerf",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set center frequency (from 2 to 999999) (default 1000)"
        },
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter order (from 4 to 20) (default 4)"
        },
        {
          "name": "qfactor",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set Q-factor (from 0.01 to 100) (default 1)"
        },
        {
          "name": "level",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0 to 2) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "atempo",
      "label": "Adjust audio tempo.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "tempo",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set tempo scale factor (from 0.5 to 100) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "atrim",
      "label": "Pick one continuous section from the input, drop the rest.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "start",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be passed (default INT64_MAX)"
        },
        {
          "name": "starti",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be passed (default INT64_MAX)"
        },
        {
          "name": "end",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (default INT64_MAX)"
        },
        {
          "name": "endi",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (default INT64_MAX)"
        },
        {
          "name": "start_pts",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be passed (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "end_pts",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Maximum duration of the output (default 0)"
        },
        {
          "name": "durationi",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Maximum duration of the output (default 0)"
        },
        {
          "name": "start_sample",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Number of the first audio sample that should be passed to the output (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "end_sample",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Number of the first audio sample that should be dropped again (from 0 to I64_MAX) (default I64_MAX)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "axcorrelate",
      "label": "Cross-correlate two audio streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set segment size (from 2 to 131072) (default 256)"
        },
        {
          "name": "algo",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set alghorithm (from 0 to 1) (default slow)",
          "values": [
            {
              "name": "slow",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "slow algorithm"
            },
            {
              "name": "fast",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "fast algorithm"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "axcorrelate0"
        },
        {
          "type": "audio",
          "name": "axcorrelate1"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "azmq",
      "label": "Receive commands through ZMQ and broker them to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "bind_address",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set bind address (default \"tcp://*:5555\")"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set bind address (default \"tcp://*:5555\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "bandpass",
      "label": "Apply a two-pole Butterworth band-pass filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "csg",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "use constant skirt gain (default false)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "bandreject",
      "label": "Apply a two-pole Butterworth band-reject filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "bass",
      "label": "Boost or cut lower frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 100)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 100)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "g",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "biquad",
      "label": "Apply a biquad IIR filter with the given coefficients.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "a0",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 1)"
        },
        {
          "name": "a1",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "a2",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "b0",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "b1",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "b2",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "(from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "bs2b",
      "label": "Bauer stereo-to-binaural filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "profile",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Apply a pre-defined crossfeed level (from 0 to INT_MAX) (default default)",
          "values": [
            {
              "name": "default",
              "value": "2949820",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "default profile"
            },
            {
              "name": "cmoy",
              "value": "3932860",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Chu Moy circuit"
            },
            {
              "name": "jmeier",
              "value": "6226570",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Jan Meier circuit"
            }
          ]
        },
        {
          "name": "fcut",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Set cut frequency (in Hz) (from 0 to 2000) (default 0)"
        },
        {
          "name": "feed",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Set feed level (in Hz) (from 0 to 150) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "channelmap",
      "label": "Remap audio channels.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "map",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A comma-separated list of input channel numbers in output order."
        },
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Output channel layout."
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "channelsplit",
      "label": "Split audio into per-channel streams.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Input channel layout. (default \"stereo\")"
        },
        {
          "name": "channels",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Channels to extract. (default \"all\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "chorus",
      "label": "Add a chorus effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "in_gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input gain (from 0 to 1) (default 0.4)"
        },
        {
          "name": "out_gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output gain (from 0 to 1) (default 0.4)"
        },
        {
          "name": "delays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set delays"
        },
        {
          "name": "decays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set decays"
        },
        {
          "name": "speeds",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set speeds"
        },
        {
          "name": "depths",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set depths"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "compand",
      "label": "Compress or expand audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "attacks",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set time over which increase of volume is determined (default \"0\")"
        },
        {
          "name": "decays",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set time over which decrease of volume is determined (default \"0.8\")"
        },
        {
          "name": "points",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set points of transfer function (default \"-70/-70|-60/-20|1/0\")"
        },
        {
          "name": "soft-knee",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set soft-knee (from 0.01 to 900) (default 0.01)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output gain (from -900 to 900) (default 0)"
        },
        {
          "name": "volume",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set initial volume (from -900 to 0) (default 0)"
        },
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set delay for samples before sending them to volume adjuster (from 0 to 20) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "compensationdelay",
      "label": "Audio Compensation Delay Line.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mm",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set mm distance (from 0 to 10) (default 0)"
        },
        {
          "name": "cm",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set cm distance (from 0 to 100) (default 0)"
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set meter distance (from 0 to 100) (default 0)"
        },
        {
          "name": "dry",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set dry amount (from 0 to 1) (default 0)"
        },
        {
          "name": "wet",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set wet amount (from 0 to 1) (default 1)"
        },
        {
          "name": "temp",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set temperature °C (from -50 to 50) (default 20)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "crossfeed",
      "label": "Apply headphone crossfeed filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "strength",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set crossfeed strength (from 0 to 1) (default 0.2)"
        },
        {
          "name": "range",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set soundstage wideness (from 0 to 1) (default 0.5)"
        },
        {
          "name": "slope",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set curve slope (from 0.01 to 1) (default 0.5)"
        },
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level in (from 0 to 1) (default 0.9)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level out (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "crystalizer",
      "label": "Simple audio noise sharpening filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "i",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set intensity (from -10 to 10) (default 2)"
        },
        {
          "name": "c",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "enable clipping (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "dcshift",
      "label": "Apply a DC shift to the audio.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "shift",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set DC shift (from -1 to 1) (default 0)"
        },
        {
          "name": "limitergain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set limiter gain (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "deesser",
      "label": "Apply de-essing to the audio.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "i",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set intensity (from 0 to 1) (default 0)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set max deessing (from 0 to 1) (default 0.5)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency (from 0 to 1) (default 0.5)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output mode (from 0 to 2) (default o)",
          "values": [
            {
              "name": "i",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "input"
            },
            {
              "name": "o",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "output"
            },
            {
              "name": "e",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "ess"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "drmeter",
      "label": "Measure audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "length",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the window length (from 0.01 to 10) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "dynaudnorm",
      "label": "Dynamic Audio Normalizer.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "framelen",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the frame length in msec (from 10 to 8000) (default 500)"
        },
        {
          "name": "f",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the frame length in msec (from 10 to 8000) (default 500)"
        },
        {
          "name": "gausssize",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the filter size (from 3 to 301) (default 31)"
        },
        {
          "name": "g",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the filter size (from 3 to 301) (default 31)"
        },
        {
          "name": "peak",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the peak value (from 0 to 1) (default 0.95)"
        },
        {
          "name": "p",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the peak value (from 0 to 1) (default 0.95)"
        },
        {
          "name": "maxgain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max amplification (from 1 to 100) (default 10)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max amplification (from 1 to 100) (default 10)"
        },
        {
          "name": "targetrms",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the target RMS (from 0 to 1) (default 0)"
        },
        {
          "name": "r",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the target RMS (from 0 to 1) (default 0)"
        },
        {
          "name": "coupling",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channel coupling (default true)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channel coupling (default true)"
        },
        {
          "name": "correctdc",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set DC correction (default false)"
        },
        {
          "name": "c",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set DC correction (default false)"
        },
        {
          "name": "altboundary",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set alternative boundary mode (default false)"
        },
        {
          "name": "b",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set alternative boundary mode (default false)"
        },
        {
          "name": "compress",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the compress factor (from 0 to 30) (default 0)"
        },
        {
          "name": "s",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the compress factor (from 0 to 30) (default 0)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the threshold value (from 0 to 1) (default 0)"
        },
        {
          "name": "t",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the threshold value (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "earwax",
      "label": "Widen the stereo image.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "ebur128",
      "label": "EBU R128 scanner.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "video",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video output (default false)"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"640x480\")"
        },
        {
          "name": "meter",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale meter (+9 to +18) (from 9 to 18) (default 9)"
        },
        {
          "name": "framelog",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "force frame logging level (from INT_MIN to INT_MAX) (default -1)",
          "values": [
            {
              "name": "info",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "information logging level"
            },
            {
              "name": "verbose",
              "value": "40",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "verbose logging level"
            }
          ]
        },
        {
          "name": "metadata",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "inject metadata in the filtergraph (default false)"
        },
        {
          "name": "peak",
          "type": "flags",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set peak mode (default 0)",
          "values": [
            {
              "name": "none",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "disable any peak mode"
            },
            {
              "name": "sample",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "enable peak-sample mode"
            },
            {
              "name": "true",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "enable true-peak mode"
            }
          ]
        },
        {
          "name": "dualmono",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "treat mono input files as dual-mono (default false)"
        },
        {
          "name": "panlaw",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set a specific pan law for dual-mono files (from -10 to 0) (default -3.0103)"
        },
        {
          "name": "target",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set a specific target level in LUFS (-23 to 0) (from -23 to 0) (default -23)"
        },
        {
          "name": "gauge",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gauge display type (from 0 to 1) (default momentary)",
          "values": [
            {
              "name": "momentary",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display momentary value"
            },
            {
              "name": "m",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display momentary value"
            },
            {
              "name": "shortterm",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display short-term value"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display short-term value"
            }
          ]
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "sets display method for the stats (from 0 to 1) (default absolute)",
          "values": [
            {
              "name": "absolute",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display absolute values (LUFS)"
            },
            {
              "name": "LUFS",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display absolute values (LUFS)"
            },
            {
              "name": "relative",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display values relative to target (LU)"
            },
            {
              "name": "LU",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display values relative to target (LU)"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "equalizer",
      "label": "Apply two-pole peaking equalization (EQ) filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 0)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 0)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 1)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set band-width (from 0 to 99999) (default 1)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "g",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "extrastereo",
      "label": "Increase difference between stereo audio channels.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "m",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the difference coefficient (from -10 to 10) (default 2.5)"
        },
        {
          "name": "c",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "enable clipping (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "firequalizer",
      "label": "Finite Impulse Response Equalizer.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "gain",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain curve (default \"gain_interpolate(f)\")"
        },
        {
          "name": "gain_entry",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain entry"
        },
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set delay (from 0 to 1e+10) (default 0.01)"
        },
        {
          "name": "accuracy",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set accuracy (from 0 to 1e+10) (default 5)"
        },
        {
          "name": "wfunc",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 9) (default hann)",
          "values": [
            {
              "name": "rectangular",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "rectangular window"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "hann window"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "hamming window"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "blackman window"
            },
            {
              "name": "nuttall3",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "3-term nuttall window"
            },
            {
              "name": "mnuttall3",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "minimum 3-term nuttall window"
            },
            {
              "name": "nuttall",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "nuttall window"
            },
            {
              "name": "bnuttall",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "blackman-nuttall window"
            },
            {
              "name": "bharris",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "blackman-harris window"
            },
            {
              "name": "tukey",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "tukey window"
            }
          ]
        },
        {
          "name": "fixed",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set fixed frame samples (default false)"
        },
        {
          "name": "multi",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set multi channels mode (default false)"
        },
        {
          "name": "zero_phase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set zero phase mode (default false)"
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set gain scale (from 0 to 3) (default linlog)",
          "values": [
            {
              "name": "linlin",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear-freq linear-gain"
            },
            {
              "name": "linlog",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear-freq logarithmic-gain"
            },
            {
              "name": "loglin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic-freq linear-gain"
            },
            {
              "name": "loglog",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic-freq logarithmic-gain"
            }
          ]
        },
        {
          "name": "dumpfile",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set dump file"
        },
        {
          "name": "dumpscale",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set dump scale (from 0 to 3) (default linlog)",
          "values": [
            {
              "name": "linlin",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear-freq linear-gain"
            },
            {
              "name": "linlog",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "linear-freq logarithmic-gain"
            },
            {
              "name": "loglin",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic-freq linear-gain"
            },
            {
              "name": "loglog",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "logarithmic-freq logarithmic-gain"
            }
          ]
        },
        {
          "name": "fft2",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 2-channels fft (default false)"
        },
        {
          "name": "min_phase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set minimum phase mode (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "flanger",
      "label": "Apply a flanging effect to the audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "base delay in milliseconds (from 0 to 30) (default 0)"
        },
        {
          "name": "depth",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "added swept delay in milliseconds (from 0 to 10) (default 2)"
        },
        {
          "name": "regen",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "percentage regeneration (delayed signal feedback) (from -95 to 95) (default 0)"
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "percentage of delayed signal mixed with original (from 0 to 100) (default 71)"
        },
        {
          "name": "speed",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "sweeps per second (Hz) (from 0.1 to 10) (default 0.5)"
        },
        {
          "name": "shape",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "swept wave shape (from 0 to 1) (default sinusoidal)",
          "values": [
            {
              "name": "triangular",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "t",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "sinusoidal",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "s",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "phase",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "swept wave percentage phase-shift for multi-channel (from 0 to 100) (default 25)"
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "delay-line interpolation (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "quadratic",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "haas",
      "label": "Apply Haas Stereo Enhancer.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set level in (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set level out (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "side_gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "middle_source",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set middle source (from 0 to 3) (default mid)",
          "values": [
            {
              "name": "left",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "right",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "mid",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "L+R"
            },
            {
              "name": "side",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "L-R"
            }
          ]
        },
        {
          "name": "middle_phase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set middle phase (default false)"
        },
        {
          "name": "left_delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set left delay (from 0 to 40) (default 2.05)"
        },
        {
          "name": "left_balance",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set left balance (from -1 to 1) (default -1)"
        },
        {
          "name": "left_gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set left gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "left_phase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set left phase (default false)"
        },
        {
          "name": "right_delay",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set right delay (from 0 to 40) (default 2.12)"
        },
        {
          "name": "right_balance",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set right balance (from -1 to 1) (default 1)"
        },
        {
          "name": "right_gain",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set right gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "right_phase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set right phase (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "hdcd",
      "label": "Apply High Definition Compatible Digital (HDCD) decoding.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "disable_autoconvert",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Disable any format conversion or resampling in the filter graph. (default true)"
        },
        {
          "name": "process_stereo",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Process stereo channels together. Only apply target_gain when both channels match. (default true)"
        },
        {
          "name": "cdt_ms",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Code detect timer period in ms. (from 100 to 60000) (default 2000)"
        },
        {
          "name": "force_pe",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Always extend peaks above -3dBFS even when PE is not signaled. (default false)"
        },
        {
          "name": "analyze_mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Replace audio with solid tone and signal some processing aspect in the amplitude. (from 0 to 4) (default off)",
          "values": [
            {
              "name": "off",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "disabled"
            },
            {
              "name": "lle",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "gain adjustment level at each sample"
            },
            {
              "name": "pe",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "samples where peak extend occurs"
            },
            {
              "name": "cdt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "samples where the code detect timer is active"
            },
            {
              "name": "tgm",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "samples where the target gain does not match between channels"
            }
          ]
        },
        {
          "name": "bits_per_sample",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Valid bits per sample (location of the true LSB). (from 16 to 24) (default 16)",
          "values": [
            {
              "name": "16",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "16-bit (in s32 or s16)"
            },
            {
              "name": "20",
              "value": "20",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "20-bit (in s32)"
            },
            {
              "name": "24",
              "value": "24",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "24-bit (in s32)"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "headphone",
      "label": "Apply headphone binaural spatialization with HRTFs in additional streams.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "map",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels convolution mappings"
        },
        {
          "name": "gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set gain in dB (from -20 to 40) (default 0)"
        },
        {
          "name": "lfe",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set lfe gain in dB (from -20 to 40) (default 0)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set processing (from 0 to 1) (default freq)",
          "values": [
            {
              "name": "time",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "time domain"
            },
            {
              "name": "freq",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "frequency domain"
            }
          ]
        },
        {
          "name": "size",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frame size (from 1024 to 96000) (default 1024)"
        },
        {
          "name": "hrir",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set hrir format (from 0 to 1) (default stereo)",
          "values": [
            {
              "name": "stereo",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "hrir files have exactly 2 channels"
            },
            {
              "name": "multich",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "single multichannel hrir file"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "highpass",
      "label": "Apply a high-pass filter with 3dB point frequency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set width (from 0 to 99999) (default 0.707)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set width (from 0 to 99999) (default 0.707)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "highshelf",
      "label": "Apply a high shelf filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "g",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "join",
      "label": "Join multiple audio streams into multi-channel output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Number of input streams. (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Channel layout of the output stream. (default \"stereo\")"
        },
        {
          "name": "map",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "A comma-separated list of channels maps in the format 'input_stream.input_channel-output_channel."
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "ladspa",
      "label": "Apply LADSPA effect.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "file",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set library name or full path"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set library name or full path"
        },
        {
          "name": "plugin",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin name"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin name"
        },
        {
          "name": "controls",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin options"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin options"
        },
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        },
        {
          "name": "latency",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "enable latency compensation (default false)"
        },
        {
          "name": "l",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "enable latency compensation (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "loudnorm",
      "label": "EBU R128 loudness normalization",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "I",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set integrated loudness target (from -70 to -5) (default -24)"
        },
        {
          "name": "i",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set integrated loudness target (from -70 to -5) (default -24)"
        },
        {
          "name": "LRA",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set loudness range target (from 1 to 20) (default 7)"
        },
        {
          "name": "lra",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set loudness range target (from 1 to 20) (default 7)"
        },
        {
          "name": "TP",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set maximum true peak (from -9 to 0) (default -2)"
        },
        {
          "name": "tp",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set maximum true peak (from -9 to 0) (default -2)"
        },
        {
          "name": "measured_I",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured IL of input file (from -99 to 0) (default 0)"
        },
        {
          "name": "measured_i",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured IL of input file (from -99 to 0) (default 0)"
        },
        {
          "name": "measured_LRA",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured LRA of input file (from 0 to 99) (default 0)"
        },
        {
          "name": "measured_lra",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured LRA of input file (from 0 to 99) (default 0)"
        },
        {
          "name": "measured_TP",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured true peak of input file (from -99 to 99) (default 99)"
        },
        {
          "name": "measured_tp",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured true peak of input file (from -99 to 99) (default 99)"
        },
        {
          "name": "measured_thresh",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "measured threshold of input file (from -99 to 0) (default -70)"
        },
        {
          "name": "offset",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set offset gain (from -99 to 99) (default 0)"
        },
        {
          "name": "linear",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "normalize linearly if possible (default true)"
        },
        {
          "name": "dual_mono",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "treat mono input as dual-mono (default false)"
        },
        {
          "name": "print_format",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set print format for stats (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "json",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "summary",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "lowpass",
      "label": "Apply a low-pass filter with 3dB point frequency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set frequency (from 0 to 999999) (default 500)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set frequency (from 0 to 999999) (default 500)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set width (from 0 to 99999) (default 0.707)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set width (from 0 to 99999) (default 0.707)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "lowshelf",
      "label": "Apply a low shelf filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 100)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 100)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "g",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "lv2",
      "label": "Apply LV2 effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "plugin",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin uri"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin uri"
        },
        {
          "name": "controls",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin options"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set plugin options"
        },
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "mcompand",
      "label": "Multiband Compress or expand audio dynamic range.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "args",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set parameters for each band (default \"0.005,0.1 6 -47/-40,-34/-34,-17/-33 100 | 0.003,0.05 6 -47/-40,-34/-34,-17/-33 400 | 0.000625,0.0125 6 -47/-40,-34/-34,-15/-33 1600 | 0.0001,0.025 6 -47/-40,-34/-34,-31/-31,-0/-30 6400 | 0,0.025 6 -38/-31,-28/-28,-0/-25 22000\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "pan",
      "label": "Remix channels with coefficients (panning).",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "args",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": ""
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "replaygain",
      "label": "ReplayGain scanner.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "rubberband",
      "label": "Apply time-stretching and pitch-shifting.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "tempo",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set tempo scale factor (from 0.01 to 100) (default 1)"
        },
        {
          "name": "pitch",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set pitch scale factor (from 0.01 to 100) (default 1)"
        },
        {
          "name": "transients",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transients (from 0 to INT_MAX) (default crisp)",
          "values": [
            {
              "name": "crisp",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "mixed",
              "value": "256",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "smooth",
              "value": "512",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "detector",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set detector (from 0 to INT_MAX) (default compound)",
          "values": [
            {
              "name": "compound",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "percussive",
              "value": "1024",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "soft",
              "value": "2048",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "phase",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set phase (from 0 to INT_MAX) (default laminar)",
          "values": [
            {
              "name": "laminar",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "independent",
              "value": "8192",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "window",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window (from 0 to INT_MAX) (default standard)",
          "values": [
            {
              "name": "standard",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "short",
              "value": "1048576",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "long",
              "value": "2097152",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "smoothing",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set smoothing (from 0 to INT_MAX) (default off)",
          "values": [
            {
              "name": "off",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "on",
              "value": "8388608",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "formant",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set formant (from 0 to INT_MAX) (default shifted)",
          "values": [
            {
              "name": "shifted",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "preserved",
              "value": "16777216",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "pitchq",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set pitch quality (from 0 to INT_MAX) (default speed)",
          "values": [
            {
              "name": "quality",
              "value": "33554432",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "speed",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "consistency",
              "value": "67108864",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "channels",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels (from 0 to INT_MAX) (default apart)",
          "values": [
            {
              "name": "apart",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "together",
              "value": "268435456",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "sidechaincompress",
      "label": "Sidechain compressor.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mode (from 0 to 1) (default downward)",
          "values": [
            {
              "name": "downward",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "upward",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set threshold (from 0.000976563 to 1) (default 0.125)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set ratio (from 1 to 20) (default 2)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set attack (from 0.01 to 2000) (default 20)"
        },
        {
          "name": "release",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set release (from 0.01 to 9000) (default 250)"
        },
        {
          "name": "makeup",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set make up gain (from 1 to 64) (default 1)"
        },
        {
          "name": "knee",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set knee (from 1 to 8) (default 2.82843)"
        },
        {
          "name": "link",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set link type (from 0 to 1) (default average)",
          "values": [
            {
              "name": "average",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "maximum",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "detection",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set detection (from 0 to 1) (default rms)",
          "values": [
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "rms",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "level_sc",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set sidechain gain (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "main"
        },
        {
          "type": "audio",
          "name": "sidechain"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "sidechaingate",
      "label": "Audio sidechain gate.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set input level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mode (from 0 to 1) (default downward)",
          "values": [
            {
              "name": "downward",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "upward",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "range",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set max gain reduction (from 0 to 1) (default 0.06125)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set threshold (from 0 to 1) (default 0.125)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set ratio (from 1 to 9000) (default 2)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set attack (from 0.01 to 9000) (default 20)"
        },
        {
          "name": "release",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set release (from 0.01 to 9000) (default 250)"
        },
        {
          "name": "makeup",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set makeup gain (from 1 to 64) (default 1)"
        },
        {
          "name": "knee",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set knee (from 1 to 8) (default 2.82843)"
        },
        {
          "name": "detection",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set detection (from 0 to 1) (default rms)",
          "values": [
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "rms",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "link",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set link (from 0 to 1) (default average)",
          "values": [
            {
              "name": "average",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "maximum",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "level_sc",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set sidechain gain (from 0.015625 to 64) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "main"
        },
        {
          "type": "audio",
          "name": "sidechain"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "silencedetect",
      "label": "Detect silence.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set noise tolerance (from 0 to DBL_MAX) (default 0.001)"
        },
        {
          "name": "noise",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set noise tolerance (from 0 to DBL_MAX) (default 0.001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set minimum duration in seconds (default 2)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set minimum duration in seconds (default 2)"
        },
        {
          "name": "mono",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "check each channel separately (default false)"
        },
        {
          "name": "m",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "check each channel separately (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "silenceremove",
      "label": "Remove silence.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "start_periods",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from 0 to 9000) (default 0)"
        },
        {
          "name": "start_duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set start duration of non-silence part (default 0)"
        },
        {
          "name": "start_threshold",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold for start silence detection (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "start_silence",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set start duration of silence part to keep (default 0)"
        },
        {
          "name": "start_mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set which channel will trigger trimming from start (from 0 to 1) (default any)",
          "values": [
            {
              "name": "any",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "stop_periods",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from -9000 to 9000) (default 0)"
        },
        {
          "name": "stop_duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set stop duration of non-silence part (default 0)"
        },
        {
          "name": "stop_threshold",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set threshold for stop silence detection (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "stop_silence",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set stop duration of silence part to keep (default 0)"
        },
        {
          "name": "stop_mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set which channel will trigger trimming from end (from 0 to 1) (default any)",
          "values": [
            {
              "name": "any",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "detection",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set how silence is detected (from 0 to 1) (default rms)",
          "values": [
            {
              "name": "peak",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "use absolute values of samples"
            },
            {
              "name": "rms",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "use squared values of samples"
            }
          ]
        },
        {
          "name": "window",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set duration of window in seconds (from 0 to 10) (default 0.02)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "sofalizer",
      "label": "SOFAlizer (Spatially Oriented Format for Acoustics).",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "sofa",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "sofa filename"
        },
        {
          "name": "gain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set gain in dB (from -20 to 40) (default 0)"
        },
        {
          "name": "rotation",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set rotation (from -360 to 360) (default 0)"
        },
        {
          "name": "elevation",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set elevation (from -90 to 90) (default 0)"
        },
        {
          "name": "radius",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set radius (from 0 to 5) (default 1)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set processing (from 0 to 1) (default freq)",
          "values": [
            {
              "name": "time",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "time domain"
            },
            {
              "name": "freq",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "frequency domain"
            }
          ]
        },
        {
          "name": "speakers",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set speaker custom positions"
        },
        {
          "name": "lfegain",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set lfe gain (from -20 to 40) (default 0)"
        },
        {
          "name": "framesize",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frame size (from 1024 to 96000) (default 1024)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "normalize IRs (default true)"
        },
        {
          "name": "interpolate",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "interpolate IRs from neighbors (default false)"
        },
        {
          "name": "minphase",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "minphase IRs (default false)"
        },
        {
          "name": "anglestep",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set neighbor search angle step (from 0.01 to 10) (default 0.5)"
        },
        {
          "name": "radstep",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set neighbor search radius step (from 0.01 to 1) (default 0.01)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "speechnorm",
      "label": "Speech Normalizer.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "peak",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the peak value (from 0 to 1) (default 0.95)"
        },
        {
          "name": "p",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the peak value (from 0 to 1) (default 0.95)"
        },
        {
          "name": "expansion",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max expansion factor (from 1 to 50) (default 2)"
        },
        {
          "name": "e",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max expansion factor (from 1 to 50) (default 2)"
        },
        {
          "name": "compression",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max compression factor (from 1 to 50) (default 2)"
        },
        {
          "name": "c",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the max compression factor (from 1 to 50) (default 2)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the threshold value (from 0 to 1) (default 0)"
        },
        {
          "name": "t",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the threshold value (from 0 to 1) (default 0)"
        },
        {
          "name": "raise",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the expansion raising amount (from 0 to 1) (default 0.001)"
        },
        {
          "name": "r",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the expansion raising amount (from 0 to 1) (default 0.001)"
        },
        {
          "name": "fall",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the compression raising amount (from 0 to 1) (default 0.001)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set the compression raising amount (from 0 to 1) (default 0.001)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "h",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "invert",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set inverted filtering (default false)"
        },
        {
          "name": "i",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set inverted filtering (default false)"
        },
        {
          "name": "link",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set linked channels filtering (default false)"
        },
        {
          "name": "l",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set linked channels filtering (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "stereotools",
      "label": "Apply various stereo tools.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "level_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level in (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "level_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set level out (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "balance_in",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set balance in (from -1 to 1) (default 0)"
        },
        {
          "name": "balance_out",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set balance out (from -1 to 1) (default 0)"
        },
        {
          "name": "softclip",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "enable softclip (default false)"
        },
        {
          "name": "mutel",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "mute L (default false)"
        },
        {
          "name": "muter",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "mute R (default false)"
        },
        {
          "name": "phasel",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "phase L (default false)"
        },
        {
          "name": "phaser",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "phase R (default false)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set stereo mode (from 0 to 10) (default lr>lr)",
          "values": [
            {
              "name": "lr>lr",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>ms",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "ms>lr",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>ll",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>rr",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>l+r",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>rl",
              "value": "6",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "ms>ll",
              "value": "7",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "ms>rr",
              "value": "8",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "ms>rl",
              "value": "9",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lr>l-r",
              "value": "10",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "slev",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set side level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "sbal",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set side balance (from -1 to 1) (default 0)"
        },
        {
          "name": "mlev",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set middle level (from 0.015625 to 64) (default 1)"
        },
        {
          "name": "mpan",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set middle pan (from -1 to 1) (default 0)"
        },
        {
          "name": "base",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set stereo base (from -1 to 1) (default 0)"
        },
        {
          "name": "delay",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set delay (from -20 to 20) (default 0)"
        },
        {
          "name": "sclevel",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set S/C level (from 1 to 100) (default 1)"
        },
        {
          "name": "phase",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set stereo phase (from 0 to 360) (default 0)"
        },
        {
          "name": "bmode_in",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set balance in mode (from 0 to 2) (default balance)",
          "values": [
            {
              "name": "balance",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "amplitude",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "power",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "bmode_out",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set balance out mode (from 0 to 2) (default balance)",
          "values": [
            {
              "name": "balance",
              "value": "0",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "amplitude",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "power",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "stereowiden",
      "label": "Apply stereo widening effect.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "delay",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set delay time (from 1 to 100) (default 20)"
        },
        {
          "name": "feedback",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set feedback gain (from 0 to 0.9) (default 0.3)"
        },
        {
          "name": "crossfeed",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set cross feed (from 0 to 0.8) (default 0.3)"
        },
        {
          "name": "drymix",
          "type": "float",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set dry-mix (from 0 to 1) (default 0.8)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "superequalizer",
      "label": "Apply 18 band equalization filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "1b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 65Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "2b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 92Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "3b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 131Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "4b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 185Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "5b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 262Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "6b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 370Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "7b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 523Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "8b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 740Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "9b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 1047Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "10b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 1480Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "11b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 2093Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "12b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 2960Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "13b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 4186Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "14b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 5920Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "15b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 8372Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "16b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 11840Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "17b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 16744Hz band gain (from 0 to 20) (default 1)"
        },
        {
          "name": "18b",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set 20000Hz band gain (from 0 to 20) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "surround",
      "label": "Apply audio surround upmix filter.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "chl_out",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output channel layout (default \"5.1\")"
        },
        {
          "name": "chl_in",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input channel layout (default \"stereo\")"
        },
        {
          "name": "level_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set input level (from 0 to 10) (default 1)"
        },
        {
          "name": "level_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set output level (from 0 to 10) (default 1)"
        },
        {
          "name": "lfe",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "output LFE (default true)"
        },
        {
          "name": "lfe_low",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "LFE low cut off (from 0 to 256) (default 128)"
        },
        {
          "name": "lfe_high",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "LFE high cut off (from 0 to 512) (default 256)"
        },
        {
          "name": "lfe_mode",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set LFE channel mode (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "just add LFE channel"
            },
            {
              "name": "sub",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "substract LFE channel with others"
            }
          ]
        },
        {
          "name": "angle",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set soundfield transform angle (from 0 to 360) (default 90)"
        },
        {
          "name": "fc_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front center channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "fc_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front center channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "fl_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front left channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "fl_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front left channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "fr_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front right channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "fr_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front right channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "sl_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side left channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "sl_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side left channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "sr_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side right channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "sr_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side right channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "bl_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back left channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "bl_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back left channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "br_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back right channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "br_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back right channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "bc_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back center channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "bc_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back center channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "lfe_in",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set lfe channel input level (from 0 to 10) (default 1)"
        },
        {
          "name": "lfe_out",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set lfe channel output level (from 0 to 10) (default 1)"
        },
        {
          "name": "allx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set all channel's x spread (from -1 to 15) (default -1)"
        },
        {
          "name": "ally",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set all channel's y spread (from -1 to 15) (default -1)"
        },
        {
          "name": "fcx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front center channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "flx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front left channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "frx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front right channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "blx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back left channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "brx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back right channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "slx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side left channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "srx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side right channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "bcx",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back center channel x spread (from 0 to 15) (default 1)"
        },
        {
          "name": "fcy",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front center channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "fly",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front left channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "fry",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set front right channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "bly",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back left channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "bry",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back right channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "sly",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side left channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "sry",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set side right channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "bcy",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set back center channel y spread (from 0 to 15) (default 1)"
        },
        {
          "name": "win_size",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window size (from 1024 to 65536) (default 4096)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default hann)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "treble",
      "label": "Boost or cut upper frequencies.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set central frequency (from 0 to 999999) (default 3000)"
        },
        {
          "name": "width_type",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set filter-width type (from 1 to 5) (default q)",
          "values": [
            {
              "name": "h",
              "value": "1",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Hz"
            },
            {
              "name": "q",
              "value": "3",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "Q-Factor"
            },
            {
              "name": "o",
              "value": "2",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "octave"
            },
            {
              "name": "s",
              "value": "4",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "slope"
            },
            {
              "name": "k",
              "value": "5",
              "ctx": [
                "F",
                "A",
                "T"
              ],
              "desc": "kHz"
            }
          ]
        },
        {
          "name": "width",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "w",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set shelf transition steep (from 0 to 99999) (default 0.5)"
        },
        {
          "name": "gain",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "g",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set gain (from -900 to 900) (default 0)"
        },
        {
          "name": "poles",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of poles (from 1 to 2) (default 2)"
        },
        {
          "name": "mix",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "m",
          "type": "double",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set mix (from 0 to 1) (default 1)"
        },
        {
          "name": "channels",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "c",
          "type": "channel_layout",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set channels to filter (default 0xffffffffffffffff)"
        },
        {
          "name": "normalize",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "n",
          "type": "boolean",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "normalize coefficients (default false)"
        },
        {
          "name": "transform",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set transform type (from 0 to 3) (default di)",
          "values": [
            {
              "name": "di",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form I"
            },
            {
              "name": "dii",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "direct form II"
            },
            {
              "name": "tdii",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "transposed direct form II"
            },
            {
              "name": "latt",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "lattice-ladder form"
            }
          ]
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filtering precision (from -1 to 3) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "automatic"
            },
            {
              "name": "s16",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 16-bit"
            },
            {
              "name": "s32",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "signed 32-bit"
            },
            {
              "name": "f32",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point single"
            },
            {
              "name": "f64",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "floating-point double"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "tremolo",
      "label": "Apply tremolo effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency in hertz (from 0.1 to 20000) (default 5)"
        },
        {
          "name": "d",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set depth as percentage (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "vibrato",
      "label": "Apply vibrato effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency in hertz (from 0.1 to 20000) (default 5)"
        },
        {
          "name": "d",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set depth as percentage (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "volume",
      "label": "Change input volume.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "volume",
          "type": "string",
          "ctx": [
            "F",
            "A",
            "T"
          ],
          "desc": "set volume adjustment expression (default \"1.0\")"
        },
        {
          "name": "precision",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "select mathematical precision (from 0 to 2) (default float)",
          "values": [
            {
              "name": "fixed",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "select 8-bit fixed-point"
            },
            {
              "name": "float",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "select 32-bit floating-point"
            },
            {
              "name": "double",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "select 64-bit floating-point"
            }
          ]
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default once)",
          "values": [
            {
              "name": "once",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "eval volume expression once"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "eval volume expression per-frame"
            }
          ]
        },
        {
          "name": "replaygain",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Apply replaygain side data when present (from 0 to 3) (default drop)",
          "values": [
            {
              "name": "drop",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "replaygain side data is dropped"
            },
            {
              "name": "ignore",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "replaygain side data is ignored"
            },
            {
              "name": "track",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "track gain is preferred"
            },
            {
              "name": "album",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "album gain is preferred"
            }
          ]
        },
        {
          "name": "replaygain_preamp",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Apply replaygain pre-amplification (from -15 to 15) (default 0)"
        },
        {
          "name": "replaygain_noclip",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "Apply replaygain clipping prevention (default true)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "volumedetect",
      "label": "Detect audio volume.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "aevalsrc",
      "label": "Generate an audio signal generated by an expression.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "exprs",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the '|'-separated list of channels expressions"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 0 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 0 to INT_MAX) (default 1024)"
        },
        {
          "name": "sample_rate",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (default \"44100\")"
        },
        {
          "name": "s",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (default \"44100\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set audio duration (default -0.000001)"
        },
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel layout"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel layout"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "afirsrc",
      "label": "Generate a FIR coefficients audio stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "taps",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps (from 9 to 65535) (default 1025)"
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps (from 9 to 65535) (default 1025)"
        },
        {
          "name": "frequency",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency points (default \"0 1\")"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set frequency points (default \"0 1\")"
        },
        {
          "name": "magnitude",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set magnitude values (default \"1 1\")"
        },
        {
          "name": "m",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set magnitude values (default \"1 1\")"
        },
        {
          "name": "phase",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set phase values (default \"0 0\")"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set phase values (default \"0 0\")"
        },
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default blackman)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default blackman)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anoisesrc",
      "label": "Generate a noise audio signal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 15 to INT_MAX) (default 48000)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 15 to INT_MAX) (default 48000)"
        },
        {
          "name": "amplitude",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set amplitude (from 0 to 1) (default 1)"
        },
        {
          "name": "a",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set amplitude (from 0 to 1) (default 1)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set duration (default 0)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set duration (default 0)"
        },
        {
          "name": "color",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set noise color (from 0 to 5) (default white)",
          "values": [
            {
              "name": "white",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "pink",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "brown",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "blue",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "violet",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "velvet",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "colour",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set noise color (from 0 to 5) (default white)",
          "values": [
            {
              "name": "white",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "pink",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "brown",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "blue",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "violet",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "velvet",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set noise color (from 0 to 5) (default white)",
          "values": [
            {
              "name": "white",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "pink",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "brown",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "blue",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "violet",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            },
            {
              "name": "velvet",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set random seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "s",
          "type": "int64",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set random seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anullsrc",
      "label": "Null audio source, return empty audio frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel_layout (default \"stereo\")"
        },
        {
          "name": "cl",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channel_layout (default \"stereo\")"
        },
        {
          "name": "sample_rate",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (default \"44100\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (default \"44100\")"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to 65535) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to 65535) (default 1024)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the audio duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the audio duration (default -0.000001)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "flite",
      "label": "Synthesize voice from text using libflite.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "list_voices",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "list voices and exit (default false)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of samples per frame (from 0 to INT_MAX) (default 512)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of samples per frame (from 0 to INT_MAX) (default 512)"
        },
        {
          "name": "text",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set text to speak"
        },
        {
          "name": "textfile",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filename of the text to speak"
        },
        {
          "name": "v",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set voice (default \"kal\")"
        },
        {
          "name": "voice",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set voice (default \"kal\")"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "hilbert",
      "label": "Generate a Hilbert transform FIR coefficients.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "taps",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps (from 11 to 65535) (default 22051)"
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps (from 11 to 65535) (default 22051)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default blackman)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default blackman)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bohman"
            }
          ]
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "sinc",
      "label": "Generate a sinc kaiser-windowed low-pass, high-pass, band-pass, or band-reject FIR coefficients.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "nb_samples",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per requested frame (from 1 to INT_MAX) (default 1024)"
        },
        {
          "name": "hp",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set high-pass filter frequency (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "lp",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set low-pass filter frequency (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "phase",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set filter phase response (from 0 to 100) (default 50)"
        },
        {
          "name": "beta",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set kaiser window beta (from -1 to 256) (default -1)"
        },
        {
          "name": "att",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set stop-band attenuation (from 40 to 180) (default 120)"
        },
        {
          "name": "round",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "enable rounding (default false)"
        },
        {
          "name": "hptaps",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps for high-pass filter (from 0 to 32768) (default 0)"
        },
        {
          "name": "lptaps",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set number of taps for low-pass filter (from 0 to 32768) (default 0)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "sine",
      "label": "Generate sine wave audio signal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "frequency",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sine frequency (from 0 to DBL_MAX) (default 440)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sine frequency (from 0 to DBL_MAX) (default 440)"
        },
        {
          "name": "beep_factor",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the beep frequency factor (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "b",
          "type": "double",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the beep frequency factor (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the sample rate (from 1 to INT_MAX) (default 44100)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the audio duration (default 0)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the audio duration (default 0)"
        },
        {
          "name": "samples_per_frame",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the number of samples per frame (default \"1024\")"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "anullsink",
      "label": "Do absolutely nothing with the input audio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": []
    },
    {
      "id": "addroi",
      "label": "Add region of interest to frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Region distance from left edge of frame. (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Region distance from top edge of frame. (default \"0\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Region width. (default \"0\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Region height. (default \"0\")"
        },
        {
          "name": "qoffset",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Quantisation offset to apply in the region. (from -1 to 1) (default -1/10)"
        },
        {
          "name": "clear",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Remove any existing regions of interest before adding the new one. (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "alphaextract",
      "label": "Extract an alpha channel as a grayscale image component.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "alphamerge",
      "label": "Copy the luma value of the second input into the alpha channel of the first input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "alpha"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "amplify",
      "label": "Amplify changes between successive video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set radius (from 1 to 63) (default 2)"
        },
        {
          "name": "factor",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set factor (from 0 to 65535) (default 2)"
        },
        {
          "name": "threshold",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold (from 0 to 65535) (default 10)"
        },
        {
          "name": "tolerance",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set tolerance (from 0 to 65535) (default 0)"
        },
        {
          "name": "low",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set low limit for amplification (from 0 to 65535) (default 65535)"
        },
        {
          "name": "high",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set high limit for amplification (from 0 to 65535) (default 65535)"
        },
        {
          "name": "planes",
          "type": "flags",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set what planes to filter (default 7)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "ass",
      "label": "Render ASS subtitles onto input video using the libass library.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the filename of file to read"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the filename of file to read"
        },
        {
          "name": "original_size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the size of the original video (used to scale fonts)"
        },
        {
          "name": "fontsdir",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the directory containing the fonts to read"
        },
        {
          "name": "alpha",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable processing of alpha channel (default false)"
        },
        {
          "name": "shaping",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shaping engine (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "simple",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "simple shaping"
            },
            {
              "name": "complex",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "complex shaping"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "atadenoise",
      "label": "Apply an Adaptive Temporal Averaging Denoiser.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "0a",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold A for 1st plane (from 0 to 0.3) (default 0.02)"
        },
        {
          "name": "0b",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold B for 1st plane (from 0 to 5) (default 0.04)"
        },
        {
          "name": "1a",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold A for 2nd plane (from 0 to 0.3) (default 0.02)"
        },
        {
          "name": "1b",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold B for 2nd plane (from 0 to 5) (default 0.04)"
        },
        {
          "name": "2a",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold A for 3rd plane (from 0 to 0.3) (default 0.02)"
        },
        {
          "name": "2b",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold B for 3rd plane (from 0 to 5) (default 0.04)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to use (from 5 to 129) (default 9)"
        },
        {
          "name": "p",
          "type": "flags",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set what planes to filter (default 7)"
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set variant of algorithm (from 0 to 1) (default p)",
          "values": [
            {
              "name": "p",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "parallel"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "serial"
            }
          ]
        },
        {
          "name": "0s",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set sigma for 1st plane (from 0 to 32767) (default 32767)"
        },
        {
          "name": "1s",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set sigma for 2nd plane (from 0 to 32767) (default 32767)"
        },
        {
          "name": "2s",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set sigma for 3rd plane (from 0 to 32767) (default 32767)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "avgblur",
      "label": "Apply Average Blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "sizeX",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set horizontal size (from 1 to 1024) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "sizeY",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical size (from 0 to 1024) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "avgblur_opencl",
      "label": "Apply average blur filter",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sizeX",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set horizontal size (from 1 to 1024) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "sizeY",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set vertical size (from 0 to 1024) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bbox",
      "label": "Compute bounding box for each frame.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "min_val",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set minimum luminance value for bounding box (from 0 to 65535) (default 16)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bench",
      "label": "Benchmark part of a filtergraph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set action (from 0 to 1) (default start)",
          "values": [
            {
              "name": "start",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "start timer"
            },
            {
              "name": "stop",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "stop timer"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bilateral",
      "label": "Apply Bilateral filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "sigmaS",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set spatial sigma (from 0 to 512) (default 0.1)"
        },
        {
          "name": "sigmaR",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set range sigma (from 0 to 1) (default 0.1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bitplanenoise",
      "label": "Measure bit plane noise.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "bitplane",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bit plane to use for measuring noise (from 1 to 16) (default 1)"
        },
        {
          "name": "filter",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "show noisy pixels (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "blackdetect",
      "label": "Detect video intervals that are (almost) black.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "d",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum detected black duration in seconds (from 0 to DBL_MAX) (default 2)"
        },
        {
          "name": "black_min_duration",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum detected black duration in seconds (from 0 to DBL_MAX) (default 2)"
        },
        {
          "name": "picture_black_ratio_th",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the picture black ratio threshold (from 0 to 1) (default 0.98)"
        },
        {
          "name": "pic_th",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the picture black ratio threshold (from 0 to 1) (default 0.98)"
        },
        {
          "name": "pixel_black_th",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pixel black threshold (from 0 to 1) (default 0.1)"
        },
        {
          "name": "pix_th",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pixel black threshold (from 0 to 1) (default 0.1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "blackframe",
      "label": "Detect frames that are (almost) black.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "amount",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "percentage of the pixels that have to be below the threshold for the frame to be considered black (from 0 to 100) (default 98)"
        },
        {
          "name": "threshold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold below which a pixel value is considered black (from 0 to 255) (default 32)"
        },
        {
          "name": "thresh",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold below which a pixel value is considered black (from 0 to 255) (default 32)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "blend",
      "label": "Blend two video frames into each other.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c1_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c2_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c3_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "all_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blend mode for all components (from -1 to 32) (default -1)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c0_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #0 expression"
        },
        {
          "name": "c1_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #1 expression"
        },
        {
          "name": "c2_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #2 expression"
        },
        {
          "name": "c3_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #3 expression"
        },
        {
          "name": "all_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set expression for all color components"
        },
        {
          "name": "c0_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #0 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c1_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #1 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c2_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #2 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c3_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #3 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "all_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set opacity for all color components (from 0 to 1) (default 1)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "top"
        },
        {
          "type": "video",
          "name": "bottom"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bm3d",
      "label": "Block-Matching 3D denoiser.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "sigma",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set denoising strength (from 0 to 99999.9) (default 1)"
        },
        {
          "name": "block",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set log2(size) of local patch (from 4 to 6) (default 4)"
        },
        {
          "name": "bstep",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sliding step for processing blocks (from 1 to 64) (default 4)"
        },
        {
          "name": "group",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximal number of similar blocks (from 1 to 256) (default 1)"
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block matching range (from 1 to INT_MAX) (default 9)"
        },
        {
          "name": "mstep",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set step for block matching (from 1 to 64) (default 1)"
        },
        {
          "name": "thmse",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold of mean square error for block matching (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "hdthr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set hard threshold for 3D transfer domain (from 0 to INT_MAX) (default 2.7)"
        },
        {
          "name": "estim",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filtering estimation mode (from 0 to 1) (default basic)",
          "values": [
            {
              "name": "basic",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "basic estimate"
            },
            {
              "name": "final",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "final estimate"
            }
          ]
        },
        {
          "name": "ref",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "have reference stream (default false)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 7)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "boxblur",
      "label": "Blur the input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "luma_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the luma blurring box (default \"2\")"
        },
        {
          "name": "lr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the luma blurring box (default \"2\")"
        },
        {
          "name": "luma_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to luma (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "lp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to luma (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "chroma_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the chroma blurring box"
        },
        {
          "name": "cr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the chroma blurring box"
        },
        {
          "name": "chroma_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to chroma (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "cp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to chroma (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "alpha_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the alpha blurring box"
        },
        {
          "name": "ar",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the alpha blurring box"
        },
        {
          "name": "alpha_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to alpha (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "ap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to alpha (from -1 to INT_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "boxblur_opencl",
      "label": "Apply boxblur filter to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "luma_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the luma blurring box (default \"2\")"
        },
        {
          "name": "lr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the luma blurring box (default \"2\")"
        },
        {
          "name": "luma_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to luma (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "lp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to luma (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "chroma_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the chroma blurring box"
        },
        {
          "name": "cr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the chroma blurring box"
        },
        {
          "name": "chroma_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to chroma (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "cp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to chroma (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "alpha_radius",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the alpha blurring box"
        },
        {
          "name": "ar",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Radius of the alpha blurring box"
        },
        {
          "name": "alpha_power",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to alpha (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "ap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "How many times should the boxblur be applied to alpha (from -1 to INT_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "bwdif",
      "label": "Deinterlace the input image.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the interlacing mode (from 0 to 1) (default send_field)",
          "values": [
            {
              "name": "send_frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each frame"
            },
            {
              "name": "send_field",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each field"
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the assumed picture field parity (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "auto detect parity"
            }
          ]
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "cas",
      "label": "Contrast Adaptive Sharpen.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "strength",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the sharpening strength (from 0 to 1) (default 0)"
        },
        {
          "name": "planes",
          "type": "flags",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set what planes to filter (default 7)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "chromahold",
      "label": "Turns a certain color range into gray.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromahold key color (default \"black\")"
        },
        {
          "name": "similarity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromahold similarity value (from 0.01 to 1) (default 0.01)"
        },
        {
          "name": "blend",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromahold blend value (from 0 to 1) (default 0)"
        },
        {
          "name": "yuv",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "color parameter is in yuv instead of rgb (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "chromakey",
      "label": "Turns a certain color into transparency. Operates on YUV colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromakey key color (default \"black\")"
        },
        {
          "name": "similarity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromakey similarity value (from 0.01 to 1) (default 0.01)"
        },
        {
          "name": "blend",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chromakey key blend value (from 0 to 1) (default 0)"
        },
        {
          "name": "yuv",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "color parameter is in yuv instead of rgb (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "chromanr",
      "label": "Reduce chrominance noise.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "thres",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set y+u+v threshold (from 1 to 200) (default 30)"
        },
        {
          "name": "sizew",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set horizontal size (from 1 to 100) (default 5)"
        },
        {
          "name": "sizeh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical size (from 1 to 100) (default 5)"
        },
        {
          "name": "stepw",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set horizontal step (from 1 to 50) (default 1)"
        },
        {
          "name": "steph",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical step (from 1 to 50) (default 1)"
        },
        {
          "name": "threy",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set y threshold (from 1 to 200) (default 200)"
        },
        {
          "name": "threu",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set u threshold (from 1 to 200) (default 200)"
        },
        {
          "name": "threv",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set v threshold (from 1 to 200) (default 200)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "chromashift",
      "label": "Shift chroma.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "cbh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift chroma-blue horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "cbv",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift chroma-blue vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "crh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift chroma-red horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "crv",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift chroma-red vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "edge",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set edge operation (from 0 to 1) (default smear)",
          "values": [
            {
              "name": "smear",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "wrap",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "ciescope",
      "label": "Video CIE scope.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "system",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color system (from 0 to 9) (default hdtv)",
          "values": [
            {
              "name": "ntsc",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "NTSC 1953 Y'I'O' (ITU-R BT.470 System M)"
            },
            {
              "name": "470m",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "NTSC 1953 Y'I'O' (ITU-R BT.470 System M)"
            },
            {
              "name": "ebu",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "EBU Y'U'V' (PAL/SECAM) (ITU-R BT.470 System B, G)"
            },
            {
              "name": "470bg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "EBU Y'U'V' (PAL/SECAM) (ITU-R BT.470 System B, G)"
            },
            {
              "name": "smpte",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "SMPTE-C RGB"
            },
            {
              "name": "240m",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "SMPTE-240M Y'PbPr"
            },
            {
              "name": "apple",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Apple RGB"
            },
            {
              "name": "widergb",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Adobe Wide Gamut RGB"
            },
            {
              "name": "cie1931",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "CIE 1931 RGB"
            },
            {
              "name": "hdtv",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ITU.BT-709 Y'CbCr"
            },
            {
              "name": "rec709",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ITU.BT-709 Y'CbCr"
            },
            {
              "name": "uhdtv",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ITU-R.BT-2020"
            },
            {
              "name": "rec2020",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ITU-R.BT-2020"
            },
            {
              "name": "dcip3",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "DCI-P3"
            }
          ]
        },
        {
          "name": "cie",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cie system (from 0 to 2) (default xyy)",
          "values": [
            {
              "name": "xyy",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "CIE 1931 xyY"
            },
            {
              "name": "ucs",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "CIE 1960 UCS"
            },
            {
              "name": "luv",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "CIE 1976 Luv"
            }
          ]
        },
        {
          "name": "gamuts",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set what gamuts to draw (default 0)",
          "values": [
            {
              "name": "ntsc",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470bg",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "240m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "apple",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "widergb",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "cie1931",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "hdtv",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rec709",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "uhdtv",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rec2020",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "dcip3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set ciescope size (from 256 to 8192) (default 512)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set ciescope size (from 256 to 8192) (default 512)"
        },
        {
          "name": "intensity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set ciescope intensity (from 0 to 1) (default 0.001)"
        },
        {
          "name": "i",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set ciescope intensity (from 0 to 1) (default 0.001)"
        },
        {
          "name": "contrast",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to 1) (default 0.75)"
        },
        {
          "name": "corrgamma",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(default true)"
        },
        {
          "name": "showwhite",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(default false)"
        },
        {
          "name": "gamma",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0.1 to 6) (default 2.6)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "codecview",
      "label": "Visualize information about some codecs.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mv",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set motion vectors to visualize (default 0)",
          "values": [
            {
              "name": "pf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "forward predicted MVs of P-frames"
            },
            {
              "name": "bf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "forward predicted MVs of B-frames"
            },
            {
              "name": "bb",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "backward predicted MVs of B-frames"
            }
          ]
        },
        {
          "name": "qp",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(default false)"
        },
        {
          "name": "mv_type",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set motion vectors type (default 0)",
          "values": [
            {
              "name": "fp",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "forward predicted MVs"
            },
            {
              "name": "bp",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "backward predicted MVs"
            }
          ]
        },
        {
          "name": "mvt",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set motion vectors type (default 0)",
          "values": [
            {
              "name": "fp",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "forward predicted MVs"
            },
            {
              "name": "bp",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "backward predicted MVs"
            }
          ]
        },
        {
          "name": "frame_type",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame types to visualize motion vectors of (default 0)",
          "values": [
            {
              "name": "if",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "I-frames"
            },
            {
              "name": "pf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "P-frames"
            },
            {
              "name": "bf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "B-frames"
            }
          ]
        },
        {
          "name": "ft",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame types to visualize motion vectors of (default 0)",
          "values": [
            {
              "name": "if",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "I-frames"
            },
            {
              "name": "pf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "P-frames"
            },
            {
              "name": "bf",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "B-frames"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorbalance",
      "label": "Adjust the color balance.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rs",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red shadows (from -1 to 1) (default 0)"
        },
        {
          "name": "gs",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green shadows (from -1 to 1) (default 0)"
        },
        {
          "name": "bs",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue shadows (from -1 to 1) (default 0)"
        },
        {
          "name": "rm",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red midtones (from -1 to 1) (default 0)"
        },
        {
          "name": "gm",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green midtones (from -1 to 1) (default 0)"
        },
        {
          "name": "bm",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue midtones (from -1 to 1) (default 0)"
        },
        {
          "name": "rh",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red highlights (from -1 to 1) (default 0)"
        },
        {
          "name": "gh",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green highlights (from -1 to 1) (default 0)"
        },
        {
          "name": "bh",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue highlights (from -1 to 1) (default 0)"
        },
        {
          "name": "pl",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "preserve lightness (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorchannelmixer",
      "label": "Adjust colors by mixing color channels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rr",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red gain for the red channel (from -2 to 2) (default 1)"
        },
        {
          "name": "rg",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green gain for the red channel (from -2 to 2) (default 0)"
        },
        {
          "name": "rb",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue gain for the red channel (from -2 to 2) (default 0)"
        },
        {
          "name": "ra",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the alpha gain for the red channel (from -2 to 2) (default 0)"
        },
        {
          "name": "gr",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red gain for the green channel (from -2 to 2) (default 0)"
        },
        {
          "name": "gg",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green gain for the green channel (from -2 to 2) (default 1)"
        },
        {
          "name": "gb",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue gain for the green channel (from -2 to 2) (default 0)"
        },
        {
          "name": "ga",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the alpha gain for the green channel (from -2 to 2) (default 0)"
        },
        {
          "name": "br",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red gain for the blue channel (from -2 to 2) (default 0)"
        },
        {
          "name": "bg",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green gain for the blue channel (from -2 to 2) (default 0)"
        },
        {
          "name": "bb",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue gain for the blue channel (from -2 to 2) (default 1)"
        },
        {
          "name": "ba",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the alpha gain for the blue channel (from -2 to 2) (default 0)"
        },
        {
          "name": "ar",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red gain for the alpha channel (from -2 to 2) (default 0)"
        },
        {
          "name": "ag",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green gain for the alpha channel (from -2 to 2) (default 0)"
        },
        {
          "name": "ab",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue gain for the alpha channel (from -2 to 2) (default 0)"
        },
        {
          "name": "aa",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the alpha gain for the alpha channel (from -2 to 2) (default 1)"
        },
        {
          "name": "pl",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "preserve lightness (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorcontrast",
      "label": "Adjust color contrast between RGB components.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rc",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red-cyan contrast (from -1 to 1) (default 0)"
        },
        {
          "name": "gm",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green-magenta contrast (from -1 to 1) (default 0)"
        },
        {
          "name": "by",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue-yellow contrast (from -1 to 1) (default 0)"
        },
        {
          "name": "rcw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red-cyan weight (from 0 to 1) (default 0)"
        },
        {
          "name": "gmw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green-magenta weight (from 0 to 1) (default 0)"
        },
        {
          "name": "byw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue-yellow weight (from 0 to 1) (default 0)"
        },
        {
          "name": "pl",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the amount of preserving lightness (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorcorrect",
      "label": "Adjust color white balance selectively for blacks and whites.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rl",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red shadow spot (from -1 to 1) (default 0)"
        },
        {
          "name": "bl",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue shadow spot (from -1 to 1) (default 0)"
        },
        {
          "name": "rh",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red highlight spot (from -1 to 1) (default 0)"
        },
        {
          "name": "bh",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue highlight spot (from -1 to 1) (default 0)"
        },
        {
          "name": "saturation",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the amount of saturation (from -3 to 3) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorize",
      "label": "Overlay a solid color on the video stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "hue",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the hue (from 0 to 360) (default 0)"
        },
        {
          "name": "saturation",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the saturation (from 0 to 1) (default 0.5)"
        },
        {
          "name": "lightness",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the lightness (from 0 to 1) (default 0.5)"
        },
        {
          "name": "mix",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the mix of source lightness (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorkey",
      "label": "Turns a certain color into transparency. Operates on RGB colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorkey key color (default \"black\")"
        },
        {
          "name": "similarity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorkey similarity value (from 0.01 to 1) (default 0.01)"
        },
        {
          "name": "blend",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorkey key blend value (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorkey_opencl",
      "label": "Turns a certain color into transparency. Operates on RGB colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the colorkey key color (default \"black\")"
        },
        {
          "name": "similarity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the colorkey similarity value (from 0.01 to 1) (default 0.01)"
        },
        {
          "name": "blend",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the colorkey key blend value (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorhold",
      "label": "Turns a certain color range into gray. Operates on RGB colors.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorhold key color (default \"black\")"
        },
        {
          "name": "similarity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorhold similarity value (from 0.01 to 1) (default 0.01)"
        },
        {
          "name": "blend",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the colorhold blend value (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorlevels",
      "label": "Adjust the color levels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rimin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input red black point (from -1 to 1) (default 0)"
        },
        {
          "name": "gimin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input green black point (from -1 to 1) (default 0)"
        },
        {
          "name": "bimin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input blue black point (from -1 to 1) (default 0)"
        },
        {
          "name": "aimin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input alpha black point (from -1 to 1) (default 0)"
        },
        {
          "name": "rimax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input red white point (from -1 to 1) (default 1)"
        },
        {
          "name": "gimax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input green white point (from -1 to 1) (default 1)"
        },
        {
          "name": "bimax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input blue white point (from -1 to 1) (default 1)"
        },
        {
          "name": "aimax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set input alpha white point (from -1 to 1) (default 1)"
        },
        {
          "name": "romin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output red black point (from 0 to 1) (default 0)"
        },
        {
          "name": "gomin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output green black point (from 0 to 1) (default 0)"
        },
        {
          "name": "bomin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output blue black point (from 0 to 1) (default 0)"
        },
        {
          "name": "aomin",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output alpha black point (from 0 to 1) (default 0)"
        },
        {
          "name": "romax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output red white point (from 0 to 1) (default 1)"
        },
        {
          "name": "gomax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output green white point (from 0 to 1) (default 1)"
        },
        {
          "name": "bomax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output blue white point (from 0 to 1) (default 1)"
        },
        {
          "name": "aomax",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set output alpha white point (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colormatrix",
      "label": "Convert color matrix.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "src",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source color matrix (from -1 to 4) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.709 colorspace"
            },
            {
              "name": "fcc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set FCC colorspace"
            },
            {
              "name": "bt601",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.601 colorspace"
            },
            {
              "name": "bt470",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.470 colorspace"
            },
            {
              "name": "bt470bg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.470 colorspace"
            },
            {
              "name": "smpte170m",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set SMTPE-170M colorspace"
            },
            {
              "name": "smpte240m",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set SMPTE-240M colorspace"
            },
            {
              "name": "bt2020",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.2020 colorspace"
            }
          ]
        },
        {
          "name": "dst",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination color matrix (from -1 to 4) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.709 colorspace"
            },
            {
              "name": "fcc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set FCC colorspace"
            },
            {
              "name": "bt601",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.601 colorspace"
            },
            {
              "name": "bt470",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.470 colorspace"
            },
            {
              "name": "bt470bg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.470 colorspace"
            },
            {
              "name": "smpte170m",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set SMTPE-170M colorspace"
            },
            {
              "name": "smpte240m",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set SMPTE-240M colorspace"
            },
            {
              "name": "bt2020",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set BT.2020 colorspace"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colorspace",
      "label": "Convert between colorspaces.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "all",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set all color properties together (from 0 to 8) (default 0)",
          "values": [
            {
              "name": "bt470m",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601-6-525",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601-6-625",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "space",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output colorspace (from 0 to 14) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color range (from 0 to 2) (default 0)",
          "values": [
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "primaries",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color primaries (from 0 to 22) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "trc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output transfer characteristics (from 0 to 18) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma22",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma28",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "srgb",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "xvycc",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output pixel format (from -1 to 164) (default -1)",
          "values": [
            {
              "name": "yuv420p",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv420p10",
              "value": "64",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv420p12",
              "value": "125",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv422p",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv422p10",
              "value": "66",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv422p12",
              "value": "129",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv444p",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv444p10",
              "value": "70",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv444p12",
              "value": "133",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "fast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Ignore primary chromaticity and gamma correction (default false)"
        },
        {
          "name": "dither",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Dithering mode (from 0 to 1) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fsb",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "wpadapt",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Whitepoint adaptation method (from 0 to 2) (default bradford)",
          "values": [
            {
              "name": "bradford",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "vonkries",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "identity",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "iall",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set all input color properties together (from 0 to 8) (default 0)",
          "values": [
            {
              "name": "bt470m",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601-6-525",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601-6-625",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "ispace",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Input colorspace (from 0 to 22) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "irange",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Input color range (from 0 to 2) (default 0)",
          "values": [
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "iprimaries",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Input color primaries (from 0 to 22) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "itrc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Input transfer characteristics (from 0 to 18) (default 2)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma22",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma28",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "srgb",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "xvycc",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "colortemperature",
      "label": "Adjust color temperature of video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "temperature",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the temperature in Kelvin (from 1000 to 40000) (default 6500)"
        },
        {
          "name": "mix",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the mix with filtered output (from 0 to 1) (default 1)"
        },
        {
          "name": "pl",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the amount of preserving lightness (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "convolution",
      "label": "Apply convolution filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "0m",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix for 1st plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "1m",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix for 2nd plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "2m",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix for 3rd plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "3m",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix for 4th plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "0rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rdiv for 1st plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "1rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rdiv for 2nd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "2rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rdiv for 3rd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "3rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rdiv for 4th plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "0bias",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set bias for 1st plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "1bias",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set bias for 2nd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "2bias",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set bias for 3rd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "3bias",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set bias for 4th plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "0mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix mode for 1st plane (from 0 to 2) (default square)",
          "values": [
            {
              "name": "square",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "square matrix"
            },
            {
              "name": "row",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single row matrix"
            },
            {
              "name": "column",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single column matrix"
            }
          ]
        },
        {
          "name": "1mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix mode for 2nd plane (from 0 to 2) (default square)",
          "values": [
            {
              "name": "square",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "square matrix"
            },
            {
              "name": "row",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single row matrix"
            },
            {
              "name": "column",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single column matrix"
            }
          ]
        },
        {
          "name": "2mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix mode for 3rd plane (from 0 to 2) (default square)",
          "values": [
            {
              "name": "square",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "square matrix"
            },
            {
              "name": "row",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single row matrix"
            },
            {
              "name": "column",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single column matrix"
            }
          ]
        },
        {
          "name": "3mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set matrix mode for 4th plane (from 0 to 2) (default square)",
          "values": [
            {
              "name": "square",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "square matrix"
            },
            {
              "name": "row",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single row matrix"
            },
            {
              "name": "column",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "single column matrix"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "convolution_opencl",
      "label": "Apply convolution mask to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "0m",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set matrix for 2nd plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "1m",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set matrix for 2nd plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "2m",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set matrix for 3rd plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "3m",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set matrix for 4th plane (default \"0 0 0 0 1 0 0 0 0\")"
        },
        {
          "name": "0rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rdiv for 1nd plane (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "1rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rdiv for 2nd plane (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "2rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rdiv for 3rd plane (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "3rdiv",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rdiv for 4th plane (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "0bias",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bias for 1st plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "1bias",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bias for 2nd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "2bias",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bias for 3rd plane (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "3bias",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bias for 4th plane (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "convolve",
      "label": "Convolve first video stream with second video stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to convolve (from 0 to 15) (default 7)"
        },
        {
          "name": "impulse",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "when to process impulses (from 0 to 1) (default all)",
          "values": [
            {
              "name": "first",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "process only first impulse, ignore rest"
            },
            {
              "name": "all",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "process all impulses"
            }
          ]
        },
        {
          "name": "noise",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise (from 0 to 1) (default 1e-07)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "impulse"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "copy",
      "label": "Copy the input video unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "cover_rect",
      "label": "Find and cover a user specified object.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "cover",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "cover bitmap filename"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set removal mode (from 0 to 1) (default blur)",
          "values": [
            {
              "name": "cover",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cover area with bitmap"
            },
            {
              "name": "blur",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "blur area"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "crop",
      "label": "Crop the input video.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "out_w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the width crop area expression (default \"iw\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the width crop area expression (default \"iw\")"
        },
        {
          "name": "out_h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the height crop area expression (default \"ih\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the height crop area expression (default \"ih\")"
        },
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the x crop area expression (default \"(in_w-out_w)/2\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the y crop area expression (default \"(in_h-out_h)/2\")"
        },
        {
          "name": "keep_aspect",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "keep aspect ratio (default false)"
        },
        {
          "name": "exact",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "do exact cropping (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "cropdetect",
      "label": "Auto-detect crop size.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "limit",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Threshold below which the pixel is considered black (from 0 to 65535) (default 0.0941176)"
        },
        {
          "name": "round",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Value by which the width/height should be divisible (from 0 to INT_MAX) (default 16)"
        },
        {
          "name": "reset",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Recalculate the crop area after this many frames (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "skip",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of initial frames to skip (from 0 to INT_MAX) (default 2)"
        },
        {
          "name": "reset_count",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Recalculate the crop area after this many frames (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "max_outliers",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Threshold count of outliers (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "cue",
      "label": "Delay filtering to match a cue.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "cue",
          "type": "int64",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "cue unix timestamp in microseconds (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "preroll",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "preroll duration in seconds (default 0)"
        },
        {
          "name": "buffer",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "buffer duration in seconds (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "curves",
      "label": "Adjust components curves.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "preset",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select a color curves preset (from 0 to 10) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "color_negative",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "cross_process",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darker",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "increase_contrast",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighter",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linear_contrast",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "medium_contrast",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negative",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "strong_contrast",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vintage",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "master",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set master points coordinates"
        },
        {
          "name": "m",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set master points coordinates"
        },
        {
          "name": "red",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red points coordinates"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red points coordinates"
        },
        {
          "name": "green",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green points coordinates"
        },
        {
          "name": "g",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green points coordinates"
        },
        {
          "name": "blue",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue points coordinates"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue points coordinates"
        },
        {
          "name": "all",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set points coordinates for all components"
        },
        {
          "name": "psfile",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set Photoshop curves file name"
        },
        {
          "name": "plot",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "save Gnuplot script of the curves in specified file"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "datascope",
      "label": "Video data analysis.",
      "timeline": false,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output size (default \"hd720\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output size (default \"hd720\")"
        },
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set x offset (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set y offset (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope mode (from 0 to 2) (default mono)",
          "values": [
            {
              "name": "mono",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "color2",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "axis",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "draw column/row numbers (default false)"
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set display number format (from 0 to 1) (default hex)",
          "values": [
            {
              "name": "hex",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dec",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "components",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set components to display (from 1 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dblur",
      "label": "Apply Directional Blur filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "angle",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set angle (from 0 to 360) (default 45)"
        },
        {
          "name": "radius",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set radius (from 1 to 8192) (default 5)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dctdnoiz",
      "label": "Denoise frames using 2D DCT.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "sigma",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise sigma constant (from 0 to 999) (default 0)"
        },
        {
          "name": "s",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise sigma constant (from 0 to 999) (default 0)"
        },
        {
          "name": "overlap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of block overlapping pixels (from -1 to 15) (default -1)"
        },
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set coefficient factor expression"
        },
        {
          "name": "e",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set coefficient factor expression"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the block size, expressed in bits (from 3 to 4) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deband",
      "label": "Debands video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "1thr",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 1st plane threshold (from 3e-05 to 0.5) (default 0.02)"
        },
        {
          "name": "2thr",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 2nd plane threshold (from 3e-05 to 0.5) (default 0.02)"
        },
        {
          "name": "3thr",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 3rd plane threshold (from 3e-05 to 0.5) (default 0.02)"
        },
        {
          "name": "4thr",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 4th plane threshold (from 3e-05 to 0.5) (default 0.02)"
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set range (from INT_MIN to INT_MAX) (default 16)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set range (from INT_MIN to INT_MAX) (default 16)"
        },
        {
          "name": "direction",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set direction (from -6.28319 to 6.28319) (default 6.28319)"
        },
        {
          "name": "d",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set direction (from -6.28319 to 6.28319) (default 6.28319)"
        },
        {
          "name": "blur",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blur (default true)"
        },
        {
          "name": "b",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blur (default true)"
        },
        {
          "name": "coupling",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set plane coupling (default false)"
        },
        {
          "name": "c",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set plane coupling (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deblock",
      "label": "Deblock video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "filter",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set type of filter (from 0 to 1) (default strong)",
          "values": [
            {
              "name": "weak",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "strong",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "block",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set size of block (from 4 to 512) (default 8)"
        },
        {
          "name": "alpha",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 1st detection threshold (from 0 to 1) (default 0.098)"
        },
        {
          "name": "beta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 2nd detection threshold (from 0 to 1) (default 0.05)"
        },
        {
          "name": "gamma",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 3rd detection threshold (from 0 to 1) (default 0.05)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 4th detection threshold (from 0 to 1) (default 0.05)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "decimate",
      "label": "Decimate frames (post field matching filter).",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "cycle",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of frame from which one will be dropped (from 2 to 25) (default 5)"
        },
        {
          "name": "dupthresh",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set duplicate threshold (from 0 to 100) (default 1.1)"
        },
        {
          "name": "scthresh",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scene change threshold (from 0 to 100) (default 15)"
        },
        {
          "name": "blockx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the size of the x-axis blocks used during metric calculations (from 4 to 512) (default 32)"
        },
        {
          "name": "blocky",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the size of the y-axis blocks used during metric calculations (from 4 to 512) (default 32)"
        },
        {
          "name": "ppsrc",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "mark main input as a pre-processed input and activate clean source input stream (default false)"
        },
        {
          "name": "chroma",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set whether or not chroma is considered in the metric calculations (default true)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deconvolve",
      "label": "Deconvolve first video stream with second video stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to deconvolve (from 0 to 15) (default 7)"
        },
        {
          "name": "impulse",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "when to process impulses (from 0 to 1) (default all)",
          "values": [
            {
              "name": "first",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "process only first impulse, ignore rest"
            },
            {
              "name": "all",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "process all impulses"
            }
          ]
        },
        {
          "name": "noise",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise (from 0 to 1) (default 1e-07)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "impulse"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dedot",
      "label": "Reduce cross-luminance and cross-color.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "m",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filtering mode (default dotcrawl+rainbows)",
          "values": [
            {
              "name": "dotcrawl",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rainbows",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "lt",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set spatial luma threshold (from 0 to 1) (default 0.079)"
        },
        {
          "name": "tl",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set tolerance for temporal luma (from 0 to 1) (default 0.079)"
        },
        {
          "name": "tc",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set tolerance for chroma temporal variation (from 0 to 1) (default 0.058)"
        },
        {
          "name": "ct",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set temporal chroma threshold (from 0 to 1) (default 0.019)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deflate",
      "label": "Apply deflate effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "threshold0",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deflicker",
      "label": "Remove temporal frame luminance variations.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to use (from 2 to 129) (default 5)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to use (from 2 to 129) (default 5)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how to smooth luminance (from 0 to 6) (default am)",
          "values": [
            {
              "name": "am",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "arithmetic mean"
            },
            {
              "name": "gm",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "geometric mean"
            },
            {
              "name": "hm",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "harmonic mean"
            },
            {
              "name": "qm",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "quadratic mean"
            },
            {
              "name": "cm",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic mean"
            },
            {
              "name": "pm",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "power mean"
            },
            {
              "name": "median",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "median"
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how to smooth luminance (from 0 to 6) (default am)",
          "values": [
            {
              "name": "am",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "arithmetic mean"
            },
            {
              "name": "gm",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "geometric mean"
            },
            {
              "name": "hm",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "harmonic mean"
            },
            {
              "name": "qm",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "quadratic mean"
            },
            {
              "name": "cm",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic mean"
            },
            {
              "name": "pm",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "power mean"
            },
            {
              "name": "median",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "median"
            }
          ]
        },
        {
          "name": "bypass",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "leave frames unchanged (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deinterlace_qsv",
      "label": "QuickSync video deinterlacing",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set deinterlace mode (from 1 to 2) (default advanced)",
          "values": [
            {
              "name": "bob",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bob algorithm"
            },
            {
              "name": "advanced",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Motion adaptive algorithm"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deinterlace_vaapi",
      "label": "Deinterlacing of VAAPI surfaces",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Deinterlacing mode (from 0 to 4) (default default)",
          "values": [
            {
              "name": "default",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the highest-numbered (and therefore possibly most advanced) deinterlacing algorithm"
            },
            {
              "name": "bob",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the bob deinterlacing algorithm"
            },
            {
              "name": "weave",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the weave deinterlacing algorithm"
            },
            {
              "name": "motion_adaptive",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the motion adaptive deinterlacing algorithm"
            },
            {
              "name": "motion_compensated",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the motion compensated deinterlacing algorithm"
            }
          ]
        },
        {
          "name": "rate",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Generate output at frame rate or field rate (from 1 to 2) (default frame)",
          "values": [
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Output at frame rate (one frame of output for each field-pair)"
            },
            {
              "name": "field",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Output at field rate (one frame of output for each field)"
            }
          ]
        },
        {
          "name": "auto",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Only deinterlace fields, passing frames through unchanged (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dejudder",
      "label": "Remove judder produced by pullup.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "cycle",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the length of the cycle to use for dejuddering (from 2 to 240) (default 4)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "delogo",
      "label": "Remove logo from input video.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set logo x position (default \"-1\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set logo y position (default \"-1\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set logo width (default \"-1\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set logo height (default \"-1\")"
        },
        {
          "name": "show",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "show delogo area (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "denoise_vaapi",
      "label": "VAAPI VPP for de-noise",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "denoise",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "denoise level (from 0 to 64) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "derain",
      "label": "Apply derain filter to the input.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filter_type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "filter type(derain/dehaze) (from 0 to 1) (default derain)",
          "values": [
            {
              "name": "derain",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "derain filter flag"
            },
            {
              "name": "dehaze",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "dehaze filter flag"
            }
          ]
        },
        {
          "name": "dnn_backend",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "DNN backend (from 0 to 1) (default native)",
          "values": [
            {
              "name": "native",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "native backend flag"
            }
          ]
        },
        {
          "name": "model",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "path to model file"
        },
        {
          "name": "input",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input name of the model (default \"x\")"
        },
        {
          "name": "output",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output name of the model (default \"y\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deshake",
      "label": "Stabilize shaky video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set x for the rectangular search area (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set y for the rectangular search area (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set width for the rectangular search area (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set height for the rectangular search area (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "rx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set x for the rectangular search area (from 0 to 64) (default 16)"
        },
        {
          "name": "ry",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set y for the rectangular search area (from 0 to 64) (default 16)"
        },
        {
          "name": "edge",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set edge mode (from 0 to 3) (default mirror)",
          "values": [
            {
              "name": "blank",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fill zeroes at blank locations"
            },
            {
              "name": "original",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "original image at blank locations"
            },
            {
              "name": "clamp",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "extruded edge value at blank locations"
            },
            {
              "name": "mirror",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mirrored edge at blank locations"
            }
          ]
        },
        {
          "name": "blocksize",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set motion search blocksize (from 4 to 128) (default 8)"
        },
        {
          "name": "contrast",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set contrast threshold for blocks (from 1 to 255) (default 125)"
        },
        {
          "name": "search",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set search strategy (from 0 to 1) (default exhaustive)",
          "values": [
            {
              "name": "exhaustive",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "exhaustive search"
            },
            {
              "name": "less",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "less exhaustive search"
            }
          ]
        },
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set motion search detailed log file name"
        },
        {
          "name": "opencl",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ignored (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "deshake_opencl",
      "label": "Feature-point based video stabilization filter",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "tripod",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "simulates a tripod by preventing any camera movement whatsoever from the original frame (default false)"
        },
        {
          "name": "debug",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "turn on additional debugging information (default false)"
        },
        {
          "name": "adaptive_crop",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "attempt to subtly crop borders to reduce mirrored content (default true)"
        },
        {
          "name": "refine_features",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "refine feature point locations at a sub-pixel level (default true)"
        },
        {
          "name": "smooth_strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "smoothing strength (0 attempts to adaptively determine optimal strength) (from 0 to 1) (default 0)"
        },
        {
          "name": "smooth_window_multiplier",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "multiplier for number of frames to buffer for motion data (from 0.1 to 10) (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "despill",
      "label": "Despill video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the screen type (from 0 to 1) (default green)",
          "values": [
            {
              "name": "green",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "greenscreen"
            },
            {
              "name": "blue",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "bluescreen"
            }
          ]
        },
        {
          "name": "mix",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the spillmap mix (from 0 to 1) (default 0.5)"
        },
        {
          "name": "expand",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the spillmap expand (from 0 to 1) (default 0)"
        },
        {
          "name": "red",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set red scale (from -100 to 100) (default 0)"
        },
        {
          "name": "green",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set green scale (from -100 to 100) (default -1)"
        },
        {
          "name": "blue",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blue scale (from -100 to 100) (default 0)"
        },
        {
          "name": "brightness",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set brightness (from -10 to 10) (default 0)"
        },
        {
          "name": "alpha",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "change alpha component (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "detelecine",
      "label": "Apply an inverse telecine pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "first_field",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select first field (from 0 to 1) (default top)",
          "values": [
            {
              "name": "top",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select top field first"
            },
            {
              "name": "t",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select top field first"
            },
            {
              "name": "bottom",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select bottom field first"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select bottom field first"
            }
          ]
        },
        {
          "name": "pattern",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "pattern that describe for how many fields a frame is to be displayed (default \"23\")"
        },
        {
          "name": "start_frame",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "position of first frame with respect to the pattern if stream is cut (from 0 to 13) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dilation",
      "label": "Apply dilation effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "coordinates",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set coordinates (from 0 to 255) (default 255)"
        },
        {
          "name": "threshold0",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dilation_opencl",
      "label": "Apply dilation effect",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "threshold0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "coordinates",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set coordinates (from 0 to 255) (default 255)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "displace",
      "label": "Displace pixels.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "edge",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set edge mode (from 0 to 3) (default smear)",
          "values": [
            {
              "name": "blank",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "wrap",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mirror",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "xmap"
        },
        {
          "type": "video",
          "name": "ymap"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "dnn_processing",
      "label": "Apply DNN processing filter to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dnn_backend",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "DNN backend (from INT_MIN to INT_MAX) (default native)",
          "values": [
            {
              "name": "native",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "native backend flag"
            }
          ]
        },
        {
          "name": "model",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "path to model file"
        },
        {
          "name": "input",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input name of the model"
        },
        {
          "name": "output",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output name of the model"
        },
        {
          "name": "backend_configs",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "backend configs"
        },
        {
          "name": "options",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "backend configs"
        },
        {
          "name": "async",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "use DNN async inference (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "doubleweave",
      "label": "Weave input video fields into double number of frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "first_field",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set first field (from 0 to 1) (default top)",
          "values": [
            {
              "name": "top",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set top field first"
            },
            {
              "name": "t",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set top field first"
            },
            {
              "name": "bottom",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set bottom field first"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set bottom field first"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "drawbox",
      "label": "Draw a colored box on the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set horizontal position of the left box edge (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical position of the top box edge (default \"0\")"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set width of the box (default \"0\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set width of the box (default \"0\")"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set height of the box (default \"0\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set height of the box (default \"0\")"
        },
        {
          "name": "color",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color of the box (default \"black\")"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color of the box (default \"black\")"
        },
        {
          "name": "thickness",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the box thickness (default \"3\")"
        },
        {
          "name": "t",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the box thickness (default \"3\")"
        },
        {
          "name": "replace",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "replace color & alpha (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "drawgraph",
      "label": "Draw a graph using input video metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "m1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st metadata key (default \"\")"
        },
        {
          "name": "fg1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st foreground color expression (default \"0xffff0000\")"
        },
        {
          "name": "m2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd metadata key (default \"\")"
        },
        {
          "name": "fg2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd foreground color expression (default \"0xff00ff00\")"
        },
        {
          "name": "m3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3rd metadata key (default \"\")"
        },
        {
          "name": "fg3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3rd foreground color expression (default \"0xffff00ff\")"
        },
        {
          "name": "m4",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 4th metadata key (default \"\")"
        },
        {
          "name": "fg4",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 4th foreground color expression (default \"0xffffff00\")"
        },
        {
          "name": "bg",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background color (default \"white\")"
        },
        {
          "name": "min",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimal value (from INT_MIN to INT_MAX) (default -1)"
        },
        {
          "name": "max",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximal value (from INT_MIN to INT_MAX) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph mode (from 0 to 2) (default line)",
          "values": [
            {
              "name": "bar",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw bars"
            },
            {
              "name": "dot",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw dots"
            },
            {
              "name": "line",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw lines"
            }
          ]
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set slide mode (from 0 to 4) (default frame)",
          "values": [
            {
              "name": "frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw new frames"
            },
            {
              "name": "replace",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "replace old columns with new"
            },
            {
              "name": "scroll",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from right to left"
            },
            {
              "name": "rscroll",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from left to right"
            },
            {
              "name": "picture",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display graph in single frame"
            }
          ]
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph size (default \"900x256\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph size (default \"900x256\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "drawgrid",
      "label": "Draw a colored grid on the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set horizontal offset (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical offset (default \"0\")"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set width of grid cell (default \"0\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set width of grid cell (default \"0\")"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set height of grid cell (default \"0\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set height of grid cell (default \"0\")"
        },
        {
          "name": "color",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color of the grid (default \"black\")"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color of the grid (default \"black\")"
        },
        {
          "name": "thickness",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set grid line thickness (default \"1\")"
        },
        {
          "name": "t",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set grid line thickness (default \"1\")"
        },
        {
          "name": "replace",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "replace color & alpha (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "drawtext",
      "label": "Draw text on top of video frames using libfreetype library.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "fontfile",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set font file"
        },
        {
          "name": "text",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set text"
        },
        {
          "name": "textfile",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set text file"
        },
        {
          "name": "fontcolor",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set foreground color (default \"black\")"
        },
        {
          "name": "fontcolor_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set foreground color expression (default \"\")"
        },
        {
          "name": "boxcolor",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set box color (default \"white\")"
        },
        {
          "name": "bordercolor",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set border color (default \"black\")"
        },
        {
          "name": "shadowcolor",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shadow color (default \"black\")"
        },
        {
          "name": "box",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set box (default false)"
        },
        {
          "name": "boxborderw",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set box border width (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "line_spacing",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set line spacing in pixels (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "fontsize",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set font size"
        },
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set x expression (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set y expression (default \"0\")"
        },
        {
          "name": "shadowx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shadow x offset (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "shadowy",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shadow y offset (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "borderw",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set border width (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "tabsize",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set tab size (from 0 to INT_MAX) (default 4)"
        },
        {
          "name": "basetime",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set base time (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "font",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Font name (default \"Sans\")"
        },
        {
          "name": "expansion",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the expansion mode (from 0 to 2) (default normal)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set no expansion"
            },
            {
              "name": "normal",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set normal expansion"
            },
            {
              "name": "strftime",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set strftime expansion (deprecated)"
            }
          ]
        },
        {
          "name": "timecode",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set initial timecode"
        },
        {
          "name": "tc24hmax",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 24 hours max (timecode only) (default false)"
        },
        {
          "name": "timecode_rate",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rate (timecode only) (from 0 to INT_MAX) (default 0/1)"
        },
        {
          "name": "r",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rate (timecode only) (from 0 to INT_MAX) (default 0/1)"
        },
        {
          "name": "rate",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rate (timecode only) (from 0 to INT_MAX) (default 0/1)"
        },
        {
          "name": "reload",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "reload text file for each frame (default false)"
        },
        {
          "name": "alpha",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "apply alpha while rendering (default \"1\")"
        },
        {
          "name": "fix_bounds",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "check and fix text coords to avoid clipping (default false)"
        },
        {
          "name": "start_number",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "start frame number for n/frame_num variable (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "text_shaping",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "attempt to shape text before drawing (default true)"
        },
        {
          "name": "ft_load_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set font loading flags for libfreetype (default 0)",
          "values": [
            {
              "name": "default",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "no_scale",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "no_hinting",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "render",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "no_bitmap",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "vertical_layout",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "force_autohint",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "crop_bitmap",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pedantic",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ignore_global_advance_width",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "no_recurse",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ignore_transform",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "monochrome",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear_design",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "no_autohint",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "edgedetect",
      "label": "Detect and draw edge.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "high",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set high threshold (from 0 to 1) (default 0.196078)"
        },
        {
          "name": "low",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set low threshold (from 0 to 1) (default 0.0784314)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 2) (default wires)",
          "values": [
            {
              "name": "wires",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "white/gray wires on black"
            },
            {
              "name": "colormix",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mix colors"
            },
            {
              "name": "canny",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "detect edges on planes"
            }
          ]
        },
        {
          "name": "planes",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (default y+u+v+r+g+b)",
          "values": [
            {
              "name": "y",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter luma plane"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter u plane"
            },
            {
              "name": "v",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter v plane"
            },
            {
              "name": "r",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter red plane"
            },
            {
              "name": "g",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter green plane"
            },
            {
              "name": "b",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "filter blue plane"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "elbg",
      "label": "Apply posterize effect, using the ELBG algorithm.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "codebook_length",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set codebook length (from 1 to INT_MAX) (default 256)"
        },
        {
          "name": "l",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set codebook length (from 1 to INT_MAX) (default 256)"
        },
        {
          "name": "nb_steps",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max number of steps used to compute the mapping (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max number of steps used to compute the mapping (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the random seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "s",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the random seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "pal8",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pal8 output (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "entropy",
      "label": "Measure video frames entropy.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set kind of histogram entropy measurement (from 0 to 1) (default normal)",
          "values": [
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "diff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "epx",
      "label": "Scale the input using EPX algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale factor (from 2 to 3) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "eq",
      "label": "Adjust brightness, contrast, gamma, and saturation.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "contrast",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the contrast adjustment, negative values give a negative image (default \"1.0\")"
        },
        {
          "name": "brightness",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the brightness adjustment (default \"0.0\")"
        },
        {
          "name": "saturation",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the saturation adjustment (default \"1.0\")"
        },
        {
          "name": "gamma",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the initial gamma value (default \"1.0\")"
        },
        {
          "name": "gamma_r",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "gamma value for red (default \"1.0\")"
        },
        {
          "name": "gamma_g",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "gamma value for green (default \"1.0\")"
        },
        {
          "name": "gamma_b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "gamma value for blue (default \"1.0\")"
        },
        {
          "name": "gamma_weight",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the gamma weight which reduces the effect of gamma on bright areas (default \"1.0\")"
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions per-frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "erosion",
      "label": "Apply erosion effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "coordinates",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set coordinates (from 0 to 255) (default 255)"
        },
        {
          "name": "threshold0",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "erosion_opencl",
      "label": "Apply erosion effect",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "threshold0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "coordinates",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set coordinates (from 0 to 255) (default 255)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "estdif",
      "label": "Apply Edge Slope Tracing deinterlace.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the mode (from 0 to 1) (default field)",
          "values": [
            {
              "name": "frame",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "send one frame for each frame"
            },
            {
              "name": "field",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "send one frame for each field"
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the assumed picture field parity (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "auto detect parity"
            }
          ]
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        },
        {
          "name": "rslope",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the search radius for edge slope tracing (from 1 to 15) (default 1)"
        },
        {
          "name": "redge",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the search radius for best edge matching (from 0 to 15) (default 2)"
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the type of interpolation (from 0 to 2) (default 4p)",
          "values": [
            {
              "name": "2p",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "two-point interpolation"
            },
            {
              "name": "4p",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "four-point interpolation"
            },
            {
              "name": "6p",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "six-point interpolation"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "exposure",
      "label": "Adjust exposure of the video stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "exposure",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the exposure correction (from -3 to 3) (default 0)"
        },
        {
          "name": "black",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the black level correction (from -1 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "extractplanes",
      "label": "Extract planes as grayscale frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (default r)",
          "values": [
            {
              "name": "y",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set luma plane"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set u plane"
            },
            {
              "name": "v",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set v plane"
            },
            {
              "name": "r",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set red plane"
            },
            {
              "name": "g",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set green plane"
            },
            {
              "name": "b",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set blue plane"
            },
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set alpha plane"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "fade",
      "label": "Fade in/out input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the fade direction (from 0 to 1) (default in)",
          "values": [
            {
              "name": "in",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade-in"
            },
            {
              "name": "out",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade-out"
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the fade direction (from 0 to 1) (default in)",
          "values": [
            {
              "name": "in",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade-in"
            },
            {
              "name": "out",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade-out"
            }
          ]
        },
        {
          "name": "start_frame",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of the first frame to which to apply the effect. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of the first frame to which to apply the effect. (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "nb_frames",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of frames to which the effect should be applied. (from 1 to INT_MAX) (default 25)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of frames to which the effect should be applied. (from 1 to INT_MAX) (default 25)"
        },
        {
          "name": "alpha",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "fade alpha if it is available on the input (default false)"
        },
        {
          "name": "start_time",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of seconds of the beginning of the effect. (default 0)"
        },
        {
          "name": "st",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of seconds of the beginning of the effect. (default 0)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Duration of the effect in seconds. (default 0)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Duration of the effect in seconds. (default 0)"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color (default \"black\")"
        },
        {
          "name": "c",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color (default \"black\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fftdnoiz",
      "label": "Denoise frames using 3D FFT.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sigma",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set denoise strength (from 0 to 30) (default 1)"
        },
        {
          "name": "amount",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amount of denoising (from 0.01 to 1) (default 1)"
        },
        {
          "name": "block",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block log2(size) (from 3 to 6) (default 4)"
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block overlap (from 0.2 to 0.8) (default 0.5)"
        },
        {
          "name": "prev",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of previous frames for temporal denoising (from 0 to 1) (default 0)"
        },
        {
          "name": "next",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of next frames for temporal denoising (from 0 to 1) (default 0)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 7)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fftfilt",
      "label": "Apply arbitrary expressions to pixels in frequency domain.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dc_Y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust gain in Y plane (from 0 to 1000) (default 0)"
        },
        {
          "name": "dc_U",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust gain in U plane (from 0 to 1000) (default 0)"
        },
        {
          "name": "dc_V",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust gain in V plane (from 0 to 1000) (default 0)"
        },
        {
          "name": "weight_Y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luminance expression in Y plane (default \"1\")"
        },
        {
          "name": "weight_U",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chrominance expression in U plane"
        },
        {
          "name": "weight_V",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chrominance expression in V plane"
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions per-frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "field",
      "label": "Extract a field from the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set field type (top or bottom) (from 0 to 1) (default top)",
          "values": [
            {
              "name": "top",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select top field"
            },
            {
              "name": "bottom",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select bottom field"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fieldhint",
      "label": "Field matching using hints.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "hint",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set hint file"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set hint mode (from 0 to 1) (default absolute)",
          "values": [
            {
              "name": "absolute",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "relative",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fieldmatch",
      "label": "Field matching for inverse telecine.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the assumed field order (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "auto detect parity"
            },
            {
              "name": "bff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "tff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume top field first"
            }
          ]
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the matching mode or strategy to use (from 0 to 5) (default pc_n)",
          "values": [
            {
              "name": "pc",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2-way match (p/c)"
            },
            {
              "name": "pc_n",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2-way match + 3rd match on combed (p/c + u)"
            },
            {
              "name": "pc_u",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2-way match + 3rd match (same order) on combed (p/c + u)"
            },
            {
              "name": "pc_n_ub",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2-way match + 3rd match on combed + 4th/5th matches if still combed (p/c + u + u/b)"
            },
            {
              "name": "pcn",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "3-way match (p/c/n)"
            },
            {
              "name": "pcn_ub",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "3-way match + 4th/5th matches on combed (p/c/n + u/b)"
            }
          ]
        },
        {
          "name": "ppsrc",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "mark main input as a pre-processed input and activate clean source input stream (default false)"
        },
        {
          "name": "field",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the field to match from (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "automatic (same value as 'order')"
            },
            {
              "name": "bottom",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bottom field"
            },
            {
              "name": "top",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "top field"
            }
          ]
        },
        {
          "name": "mchroma",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set whether or not chroma is included during the match comparisons (default true)"
        },
        {
          "name": "y0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "define an exclusion band which excludes the lines between y0 and y1 from the field matching decision (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "y1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "define an exclusion band which excludes the lines between y0 and y1 from the field matching decision (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "scthresh",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scene change detection threshold (from 0 to 100) (default 12)"
        },
        {
          "name": "combmatch",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set combmatching mode (from 0 to 2) (default sc)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "disable combmatching"
            },
            {
              "name": "sc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enable combmatching only on scene change"
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enable combmatching all the time"
            }
          ]
        },
        {
          "name": "combdbg",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable comb debug (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "no forced calculation"
            },
            {
              "name": "pcn",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "calculate p/c/n"
            },
            {
              "name": "pcnub",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "calculate p/c/n/u/b"
            }
          ]
        },
        {
          "name": "cthresh",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the area combing threshold used for combed frame detection (from -1 to 255) (default 9)"
        },
        {
          "name": "chroma",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set whether or not chroma is considered in the combed frame decision (default false)"
        },
        {
          "name": "blockx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x-axis size of the window used during combed frame detection (from 4 to 512) (default 16)"
        },
        {
          "name": "blocky",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y-axis size of the window used during combed frame detection (from 4 to 512) (default 16)"
        },
        {
          "name": "combpel",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of combed pixels inside any of the blocky by blockx size blocks on the frame for the frame to be detected as combed (from 0 to INT_MAX) (default 80)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fieldorder",
      "label": "Set the field order.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "order",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output field order (from 0 to 1) (default tff)",
          "values": [
            {
              "name": "bff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bottom field first"
            },
            {
              "name": "tff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "top field first"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fillborders",
      "label": "Fill borders of the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "left",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the left fill border (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "right",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the right fill border (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "top",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the top fill border (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "bottom",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the bottom fill border (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the fill borders mode (from 0 to 5) (default smear)",
          "values": [
            {
              "name": "smear",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "mirror",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "fixed",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "wrap",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "fade",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the color for the fixed/fade mode (default \"black\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "find_rect",
      "label": "Find a user specified object.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "object",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "object bitmap filename"
        },
        {
          "name": "threshold",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold (from 0 to 1) (default 0.5)"
        },
        {
          "name": "mipmaps",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mipmaps (from 1 to 5) (default 3)"
        },
        {
          "name": "xmin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "ymin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "xmax",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "ymax",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "floodfill",
      "label": "Fill area with same color with another color.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set pixel x coordinate (from 0 to 65535) (default 0)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set pixel y coordinate (from 0 to 65535) (default 0)"
        },
        {
          "name": "s0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source #0 component value (from -1 to 65535) (default 0)"
        },
        {
          "name": "s1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source #1 component value (from -1 to 65535) (default 0)"
        },
        {
          "name": "s2",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source #2 component value (from -1 to 65535) (default 0)"
        },
        {
          "name": "s3",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source #3 component value (from -1 to 65535) (default 0)"
        },
        {
          "name": "d0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination #0 component value (from 0 to 65535) (default 0)"
        },
        {
          "name": "d1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination #1 component value (from 0 to 65535) (default 0)"
        },
        {
          "name": "d2",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination #2 component value (from 0 to 65535) (default 0)"
        },
        {
          "name": "d3",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination #3 component value (from 0 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "format",
      "label": "Convert the input video to one of the specified pixel formats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "pix_fmts",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "A '|'-separated list of pixel formats"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fps",
      "label": "Force constant framerate.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "fps",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "A string describing desired output framerate (default \"25\")"
        },
        {
          "name": "start_time",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Assume the first PTS should be this value. (from -DBL_MAX to DBL_MAX) (default DBL_MAX)"
        },
        {
          "name": "round",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rounding method for timestamps (from 0 to 5) (default near)",
          "values": [
            {
              "name": "zero",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round towards 0"
            },
            {
              "name": "inf",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round away from 0"
            },
            {
              "name": "down",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round towards -infty"
            },
            {
              "name": "up",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round towards +infty"
            },
            {
              "name": "near",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round to nearest"
            }
          ]
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "action performed for last frame (from 0 to 1) (default round)",
          "values": [
            {
              "name": "round",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "round similar to other frames"
            },
            {
              "name": "pass",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "pass through last frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "framepack",
      "label": "Generate a frame packed stereoscopic video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Frame pack output format (from 0 to INT_MAX) (default sbs)",
          "values": [
            {
              "name": "sbs",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Views are packed next to each other"
            },
            {
              "name": "tab",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Views are packed on top of each other"
            },
            {
              "name": "frameseq",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Views are one after the other"
            },
            {
              "name": "lines",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Views are interleaved by lines"
            },
            {
              "name": "columns",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Views are interleaved by columns"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "left"
        },
        {
          "type": "video",
          "name": "right"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "packed"
        }
      ]
    },
    {
      "id": "framerate",
      "label": "Upsamples or downsamples progressive source between specified frame rates.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "fps",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "required output frames per second rate (default \"50\")"
        },
        {
          "name": "interp_start",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "point to start linear interpolation (from 0 to 255) (default 15)"
        },
        {
          "name": "interp_end",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "point to end linear interpolation (from 0 to 255) (default 240)"
        },
        {
          "name": "scene",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scene change level (from 0 to 100) (default 8.2)"
        },
        {
          "name": "flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set flags (default scene_change_detect+scd)",
          "values": [
            {
              "name": "scene_change_detect",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enable scene change detection"
            },
            {
              "name": "scd",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enable scene change detection"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "framestep",
      "label": "Select one frame every N frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "step",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame step (from 1 to INT_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "freezedetect",
      "label": "Detects frozen video input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise tolerance (from 0 to 1) (default 0.001)"
        },
        {
          "name": "noise",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set noise tolerance (from 0 to 1) (default 0.001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum duration in seconds (default 2)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum duration in seconds (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "freezeframes",
      "label": "Freeze video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "first",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set first frame to freeze (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "last",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set last frame to freeze (from 0 to I64_MAX) (default 0)"
        },
        {
          "name": "replace",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame to replace (from 0 to I64_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "replace"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "frei0r",
      "label": "Apply a frei0r effect.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "filter_name",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": ""
        },
        {
          "name": "filter_params",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": ""
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "fspp",
      "label": "Apply Fast Simple Post-processing filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "quality",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set quality (from 4 to 5) (default 4)"
        },
        {
          "name": "qp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force a constant quantizer parameter (from 0 to 64) (default 0)"
        },
        {
          "name": "strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter strength (from -15 to 32) (default 0)"
        },
        {
          "name": "use_bframe_qp",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "use B-frames' QP (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "gblur",
      "label": "Apply Gaussian Blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "sigma",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set sigma (from 0 to 1024) (default 0.5)"
        },
        {
          "name": "steps",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set number of steps (from 1 to 6) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "sigmaV",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set vertical sigma (from -1 to 1024) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "geq",
      "label": "Apply generic equation to each pixel.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "lum_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luminance expression"
        },
        {
          "name": "lum",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luminance expression"
        },
        {
          "name": "cb_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma blue expression"
        },
        {
          "name": "cb",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma blue expression"
        },
        {
          "name": "cr_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma red expression"
        },
        {
          "name": "cr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma red expression"
        },
        {
          "name": "alpha_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set alpha expression"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set alpha expression"
        },
        {
          "name": "red_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set red expression"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set red expression"
        },
        {
          "name": "green_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set green expression"
        },
        {
          "name": "g",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set green expression"
        },
        {
          "name": "blue_expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set blue expression"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set blue expression"
        },
        {
          "name": "interpolation",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interpolation method (from 0 to 1) (default bilinear)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest interpolation"
            },
            {
              "name": "n",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest interpolation"
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            }
          ]
        },
        {
          "name": "i",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interpolation method (from 0 to 1) (default bilinear)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest interpolation"
            },
            {
              "name": "n",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest interpolation"
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "gradfun",
      "label": "Debands video quickly using gradients.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "The maximum amount by which the filter will change any one pixel. (from 0.51 to 64) (default 1.2)"
        },
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "The neighborhood to fit the gradient to. (from 4 to 32) (default 16)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "graphmonitor",
      "label": "Show various filtergraph stats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set monitor size (default \"hd720\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set monitor size (default \"hd720\")"
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default full)",
          "values": [
            {
              "name": "full",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "compact",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default full)",
          "values": [
            {
              "name": "full",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "compact",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set flags (default queue)",
          "values": [
            {
              "name": "queue",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_in",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_out",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pts",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "time",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "timebase",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "format",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "size",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rate",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "eof",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set flags (default queue)",
          "values": [
            {
              "name": "queue",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_in",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_out",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pts",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "time",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "timebase",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "format",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "size",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rate",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "eof",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "greyedge",
      "label": "Estimates scene illumination by grey edge assumption.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "difford",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set differentiation order (from 0 to 2) (default 1)"
        },
        {
          "name": "minknorm",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set Minkowski norm (from 0 to 20) (default 1)"
        },
        {
          "name": "sigma",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sigma (from 0 to 1024) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "haldclut",
      "label": "Adjust colors using a Hald CLUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select interpolation mode (from 0 to 4) (default tetrahedral)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the nearest defined points"
            },
            {
              "name": "trilinear",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using the 8 points defining a cube"
            },
            {
              "name": "tetrahedral",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a tetrahedron"
            },
            {
              "name": "pyramid",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a pyramid"
            },
            {
              "name": "prism",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a prism"
            }
          ]
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "clut"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hflip",
      "label": "Horizontally flip the input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "histeq",
      "label": "Apply global color histogram equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the strength (from 0 to 1) (default 0.2)"
        },
        {
          "name": "intensity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the intensity (from 0 to 1) (default 0.21)"
        },
        {
          "name": "antibanding",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the antibanding level (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "apply no antibanding"
            },
            {
              "name": "weak",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "apply weak antibanding"
            },
            {
              "name": "strong",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "apply strong antibanding"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "histogram",
      "label": "Compute and draw a histogram.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "level_height",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set level height (from 50 to 2048) (default 200)"
        },
        {
          "name": "scale_height",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale height (from 0 to 40) (default 12)"
        },
        {
          "name": "display_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "levels_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set levels mode (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "logarithmic",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set levels mode (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "logarithmic",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "components",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color components to display (from 1 to 15) (default 7)"
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color components to display (from 1 to 15) (default 7)"
        },
        {
          "name": "fgopacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set foreground opacity (from 0 to 1) (default 0.7)"
        },
        {
          "name": "f",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set foreground opacity (from 0 to 1) (default 0.7)"
        },
        {
          "name": "bgopacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.5)"
        },
        {
          "name": "b",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hqdn3d",
      "label": "Apply a High Quality 3D Denoiser.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "luma_spatial",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "spatial luma strength (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "chroma_spatial",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "spatial chroma strength (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "luma_tmp",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "temporal luma strength (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "chroma_tmp",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "temporal chroma strength (from 0 to DBL_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hqx",
      "label": "Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale factor (from 2 to 4) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hstack",
      "label": "Stack video inputs horizontally.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 2 to INT_MAX) (default 2)"
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hue",
      "label": "Adjust the hue and saturation of the input video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the hue angle degrees expression"
        },
        {
          "name": "s",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the saturation expression (default \"1\")"
        },
        {
          "name": "H",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the hue angle radians expression"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the brightness expression (default \"0\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hwdownload",
      "label": "Download a hardware frame to a normal frame",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hwmap",
      "label": "Map hardware frames",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Frame mapping mode (default read+write)",
          "values": [
            {
              "name": "read",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Mapping should be readable"
            },
            {
              "name": "write",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Mapping should be writeable"
            },
            {
              "name": "overwrite",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Mapping will always overwrite the entire frame"
            },
            {
              "name": "direct",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Mapping should not involve any copying"
            }
          ]
        },
        {
          "name": "derive_device",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Derive a new device of this type"
        },
        {
          "name": "reverse",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Map in reverse (create and allocate in the sink) (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hwupload",
      "label": "Upload a normal frame to a hardware frame",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "derive_device",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Derive a new device of this type"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hwupload_cuda",
      "label": "Upload a system memory frame to a CUDA device.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "hysteresis",
      "label": "Grow first stream into second stream by connecting components.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        },
        {
          "name": "threshold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold (from 0 to 65535) (default 0)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "base"
        },
        {
          "type": "video",
          "name": "alt"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "identity",
      "label": "Calculate the Identity between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "idet",
      "label": "Interlace detect Filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "intl_thres",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interlacing threshold (from -1 to FLT_MAX) (default 1.04)"
        },
        {
          "name": "prog_thres",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set progressive threshold (from -1 to FLT_MAX) (default 1.5)"
        },
        {
          "name": "rep_thres",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set repeat threshold (from -1 to FLT_MAX) (default 3)"
        },
        {
          "name": "half_life",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "half life of cumulative statistics (from -1 to INT_MAX) (default 0)"
        },
        {
          "name": "analyze_interlaced_flag",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of frames to use to determine if the interlace flag is accurate (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "il",
      "label": "Deinterleave or interleave fields.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "luma_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select luma mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "l",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select luma mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "chroma_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select chroma mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select chroma mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "alpha_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select alpha mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select alpha mode (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "interleave",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "i",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "deinterleave",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "d",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "luma_swap",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap luma fields (default false)"
        },
        {
          "name": "ls",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap luma fields (default false)"
        },
        {
          "name": "chroma_swap",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap chroma fields (default false)"
        },
        {
          "name": "cs",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap chroma fields (default false)"
        },
        {
          "name": "alpha_swap",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap alpha fields (default false)"
        },
        {
          "name": "as",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "swap alpha fields (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "inflate",
      "label": "Apply inflate effect.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "threshold0",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 1st plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold1",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 2nd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold2",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 3rd plane (from 0 to 65535) (default 65535)"
        },
        {
          "name": "threshold3",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold for 4th plane (from 0 to 65535) (default 65535)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "interlace",
      "label": "Convert progressive video into interlaced.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "scan",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scanning mode (from 0 to 1) (default tff)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bottom field first"
            }
          ]
        },
        {
          "name": "lowpass",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set vertical low-pass filter (from 0 to 2) (default linear)",
          "values": [
            {
              "name": "off",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "disable vertical low-pass filter"
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear vertical low-pass filter"
            },
            {
              "name": "complex",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "complex vertical low-pass filter"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "interleave",
      "label": "Temporally interleave video inputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "nb_inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "duration",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "how to determine the end-of-stream (from 0 to 2) (default longest)",
          "values": [
            {
              "name": "longest",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of longest input"
            },
            {
              "name": "shortest",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of shortest input"
            },
            {
              "name": "first",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of first input"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "kerndeint",
      "label": "Apply kernel deinterlacing to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "thresh",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the threshold (from 0 to 255) (default 10)"
        },
        {
          "name": "map",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the map (default false)"
        },
        {
          "name": "order",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the order (default false)"
        },
        {
          "name": "sharp",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sharpening (default false)"
        },
        {
          "name": "twoway",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set twoway (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "kirsch",
      "label": "Apply kirsch operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lagfun",
      "label": "Slowly update darker pixels.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "decay",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set decay (from 0 to 1) (default 0.95)"
        },
        {
          "name": "planes",
          "type": "flags",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set what planes to filter (default F)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lenscorrection",
      "label": "Rectify the image by correcting for lens distortion.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "cx",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set relative center x (from 0 to 1) (default 0.5)"
        },
        {
          "name": "cy",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set relative center y (from 0 to 1) (default 0.5)"
        },
        {
          "name": "k1",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set quadratic distortion factor (from -1 to 1) (default 0)"
        },
        {
          "name": "k2",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set double quadratic distortion factor (from -1 to 1) (default 0)"
        },
        {
          "name": "i",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set interpolation type (from 0 to 64) (default nearest)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "nearest neighbour"
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "bilinear"
            }
          ]
        },
        {
          "name": "fc",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the color of the unmapped pixels (default \"black@0\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "limiter",
      "label": "Limit pixels components to the specified range.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "min",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set min value (from 0 to 65535) (default 0)"
        },
        {
          "name": "max",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set max value (from 0 to 65535) (default 65535)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "loop",
      "label": "Loop video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "loop",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "number of loops (from -1 to INT_MAX) (default 0)"
        },
        {
          "name": "size",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "max number of frames to loop (from 0 to 32767) (default 0)"
        },
        {
          "name": "start",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the loop start frame (from 0 to I64_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lumakey",
      "label": "Turns a certain luma into transparency.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the threshold value (from 0 to 1) (default 0)"
        },
        {
          "name": "tolerance",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the tolerance value (from 0 to 1) (default 0.01)"
        },
        {
          "name": "softness",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the softness value (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lut",
      "label": "Compute and apply a lookup table to the RGB/YUV input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"clipval\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"clipval\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"clipval\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"clipval\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set Y expression (default \"clipval\")"
        },
        {
          "name": "u",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set U expression (default \"clipval\")"
        },
        {
          "name": "v",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set V expression (default \"clipval\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set R expression (default \"clipval\")"
        },
        {
          "name": "g",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set G expression (default \"clipval\")"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set B expression (default \"clipval\")"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set A expression (default \"clipval\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lut1d",
      "label": "Adjust colors using a 1D LUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "file",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 1D LUT file name"
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select interpolation mode (from 0 to 4) (default linear)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the nearest defined points"
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the linear interpolation"
            },
            {
              "name": "cosine",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the cosine interpolation"
            },
            {
              "name": "cubic",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the cubic interpolation"
            },
            {
              "name": "spline",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the spline interpolation"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lut2",
      "label": "Compute and apply a lookup table from two video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"x\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"x\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"x\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"x\")"
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output depth (from 0 to 16) (default 0)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "srcx"
        },
        {
          "type": "video",
          "name": "srcy"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lut3d",
      "label": "Adjust colors using a 3D LUT.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "file",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3D LUT file name"
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "select interpolation mode (from 0 to 4) (default tetrahedral)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use values from the nearest defined points"
            },
            {
              "name": "trilinear",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using the 8 points defining a cube"
            },
            {
              "name": "tetrahedral",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a tetrahedron"
            },
            {
              "name": "pyramid",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a pyramid"
            },
            {
              "name": "prism",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "interpolate values using a prism"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lutrgb",
      "label": "Compute and apply a lookup table to the RGB input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"clipval\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"clipval\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"clipval\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"clipval\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set Y expression (default \"clipval\")"
        },
        {
          "name": "u",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set U expression (default \"clipval\")"
        },
        {
          "name": "v",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set V expression (default \"clipval\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set R expression (default \"clipval\")"
        },
        {
          "name": "g",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set G expression (default \"clipval\")"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set B expression (default \"clipval\")"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set A expression (default \"clipval\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "lutyuv",
      "label": "Compute and apply a lookup table to the YUV input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"clipval\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"clipval\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"clipval\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"clipval\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set Y expression (default \"clipval\")"
        },
        {
          "name": "u",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set U expression (default \"clipval\")"
        },
        {
          "name": "v",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set V expression (default \"clipval\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set R expression (default \"clipval\")"
        },
        {
          "name": "g",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set G expression (default \"clipval\")"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set B expression (default \"clipval\")"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set A expression (default \"clipval\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskedclamp",
      "label": "Clamp first stream with second stream and third stream.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "undershoot",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set undershoot (from 0 to 65535) (default 0)"
        },
        {
          "name": "overshoot",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set overshoot (from 0 to 65535) (default 0)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "base"
        },
        {
          "type": "video",
          "name": "dark"
        },
        {
          "type": "video",
          "name": "bright"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskedmax",
      "label": "Apply filtering with maximum difference of two streams.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "filter1"
        },
        {
          "type": "video",
          "name": "filter2"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskedmerge",
      "label": "Merge first stream with second stream using third stream as mask.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "base"
        },
        {
          "type": "video",
          "name": "overlay"
        },
        {
          "type": "video",
          "name": "mask"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskedmin",
      "label": "Apply filtering with minimum difference of two streams.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "filter1"
        },
        {
          "type": "video",
          "name": "filter2"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskedthreshold",
      "label": "Pick pixels comparing absolute difference of two streams with threshold.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "threshold",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set threshold (from 0 to 65535) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "maskfun",
      "label": "Create Mask.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "low",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set low threshold (from 0 to 65535) (default 10)"
        },
        {
          "name": "high",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set high threshold (from 0 to 65535) (default 10)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        },
        {
          "name": "fill",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set fill value (from 0 to 65535) (default 0)"
        },
        {
          "name": "sum",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set sum value (from 0 to 65535) (default 10)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mcdeint",
      "label": "Apply motion compensating deinterlacing.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 3) (default fast)",
          "values": [
            {
              "name": "fast",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "medium",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "slow",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "extra_slow",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the assumed picture field parity (from -1 to 1) (default bff)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume bottom field first"
            }
          ]
        },
        {
          "name": "qp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set qp (from INT_MIN to INT_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "median",
      "label": "Apply Median filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set median radius (from 1 to 127) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "radiusV",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set median vertical radius (from 0 to 127) (default 0)"
        },
        {
          "name": "percentile",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set median percentile (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mergeplanes",
      "label": "Merge planes.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mapping",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input to output plane mapping (from 0 to 8.58993e+08) (default 0)"
        },
        {
          "name": "format",
          "type": "pix_fmt",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output pixel format (default yuva444p)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mestimate",
      "label": "Generate motion vectors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "method",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "motion estimation method (from 1 to 9) (default esa)",
          "values": [
            {
              "name": "esa",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "exhaustive search"
            },
            {
              "name": "tss",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "three step search"
            },
            {
              "name": "tdls",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "two dimensional logarithmic search"
            },
            {
              "name": "ntss",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "new three step search"
            },
            {
              "name": "fss",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "four step search"
            },
            {
              "name": "ds",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diamond search"
            },
            {
              "name": "hexbs",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hexagon-based search"
            },
            {
              "name": "epzs",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enhanced predictive zonal search"
            },
            {
              "name": "umh",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uneven multi-hexagon search"
            }
          ]
        },
        {
          "name": "mb_size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "macroblock size (from 8 to INT_MAX) (default 16)"
        },
        {
          "name": "search_param",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "search parameter (from 4 to INT_MAX) (default 7)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "metadata",
      "label": "Manipulate video frame metadata.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set a mode of operation (from 0 to 4) (default select)",
          "values": [
            {
              "name": "select",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select frame"
            },
            {
              "name": "add",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "add new metadata"
            },
            {
              "name": "modify",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "modify metadata"
            },
            {
              "name": "delete",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "delete metadata"
            },
            {
              "name": "print",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "print metadata"
            }
          ]
        },
        {
          "name": "key",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set metadata key"
        },
        {
          "name": "value",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set metadata value"
        },
        {
          "name": "function",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "function for comparing values (from 0 to 6) (default same_str)",
          "values": [
            {
              "name": "same_str",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "starts_with",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "less",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "equal",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "greater",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "expr",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ends_with",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set expression for expr function"
        },
        {
          "name": "file",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set file where to print metadata information"
        },
        {
          "name": "direct",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "reduce buffering when printing to user-set file or pipe (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "midequalizer",
      "label": "Apply Midway Equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "in0"
        },
        {
          "type": "video",
          "name": "in1"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "minterpolate",
      "label": "Frame rate conversion using Motion Interpolation.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "fps",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output's frame rate (default \"60\")"
        },
        {
          "name": "mi_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "motion interpolation mode (from 0 to 2) (default mci)",
          "values": [
            {
              "name": "dup",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "duplicate frames"
            },
            {
              "name": "blend",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "blend frames"
            },
            {
              "name": "mci",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "motion compensated interpolation"
            }
          ]
        },
        {
          "name": "mc_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "motion compensation mode (from 0 to 1) (default obmc)",
          "values": [
            {
              "name": "obmc",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "overlapped block motion compensation"
            },
            {
              "name": "aobmc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "adaptive overlapped block motion compensation"
            }
          ]
        },
        {
          "name": "me_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "motion estimation mode (from 0 to 1) (default bilat)",
          "values": [
            {
              "name": "bidir",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bidirectional motion estimation"
            },
            {
              "name": "bilat",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilateral motion estimation"
            }
          ]
        },
        {
          "name": "me",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "motion estimation method (from 1 to 9) (default epzs)",
          "values": [
            {
              "name": "esa",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "exhaustive search"
            },
            {
              "name": "tss",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "three step search"
            },
            {
              "name": "tdls",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "two dimensional logarithmic search"
            },
            {
              "name": "ntss",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "new three step search"
            },
            {
              "name": "fss",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "four step search"
            },
            {
              "name": "ds",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diamond search"
            },
            {
              "name": "hexbs",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hexagon-based search"
            },
            {
              "name": "epzs",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "enhanced predictive zonal search"
            },
            {
              "name": "umh",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uneven multi-hexagon search"
            }
          ]
        },
        {
          "name": "mb_size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "macroblock size (from 4 to 16) (default 16)"
        },
        {
          "name": "search_param",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "search parameter (from 4 to INT_MAX) (default 32)"
        },
        {
          "name": "vsbmc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "variable-size block motion compensation (from 0 to 1) (default 0)"
        },
        {
          "name": "scd",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scene change detection method (from 0 to 1) (default fdiff)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "disable detection"
            },
            {
              "name": "fdiff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "frame difference"
            }
          ]
        },
        {
          "name": "scd_threshold",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scene change threshold (from 0 to 100) (default 10)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mix",
      "label": "Mix video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 2 to 32767) (default 2)"
        },
        {
          "name": "weights",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set weight for each input (default \"1 1\")"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 32767) (default 0)"
        },
        {
          "name": "duration",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "how to determine end of stream (from 0 to 2) (default longest)",
          "values": [
            {
              "name": "longest",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of longest input"
            },
            {
              "name": "shortest",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of shortest input"
            },
            {
              "name": "first",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Duration of first input"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "monochrome",
      "label": "Convert video to gray using custom color filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "cb",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chroma blue spot (from -1 to 1) (default 0)"
        },
        {
          "name": "cr",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the chroma red spot (from -1 to 1) (default 0)"
        },
        {
          "name": "size",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the color filter size (from 0.1 to 10) (default 1)"
        },
        {
          "name": "high",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the highlights strength (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mpdecimate",
      "label": "Remove near-duplicate frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "max",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the maximum number of consecutive dropped frames (positive), or the minimum interval between dropped frames (negative) (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "hi",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set high dropping threshold (from INT_MIN to INT_MAX) (default 768)"
        },
        {
          "name": "lo",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set low dropping threshold (from INT_MIN to INT_MAX) (default 320)"
        },
        {
          "name": "frac",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fraction dropping threshold (from 0 to 1) (default 0.33)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "msad",
      "label": "Calculate the MSAD between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "negate",
      "label": "Negate input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "negate_alpha",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "(default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "nlmeans",
      "label": "Non-local means denoiser.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "s",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "denoising strength (from 1 to 30) (default 1)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "patch size (from 0 to 99) (default 7)"
        },
        {
          "name": "pc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "patch size for chroma planes (from 0 to 99) (default 0)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "research window (from 0 to 99) (default 15)"
        },
        {
          "name": "rc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "research window for chroma planes (from 0 to 99) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "nlmeans_opencl",
      "label": "Non-local means denoiser through OpenCL",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "s",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "denoising strength (from 1 to 30) (default 1)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "patch size (from 0 to 99) (default 7)"
        },
        {
          "name": "pc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "patch size for chroma planes (from 0 to 99) (default 0)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "research window (from 0 to 99) (default 15)"
        },
        {
          "name": "rc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "research window for chroma planes (from 0 to 99) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "nnedi",
      "label": "Apply neural network edge directed interpolation intra-only deinterlacer.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "weights",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set weights file (default \"nnedi3_weights.bin\")"
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        },
        {
          "name": "field",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set mode of operation (from -2 to 3) (default a)",
          "values": [
            {
              "name": "af",
              "value": "-2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use frame flags, both fields"
            },
            {
              "name": "a",
              "value": "-1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use frame flags, single field"
            },
            {
              "name": "t",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use top field only"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use bottom field only"
            },
            {
              "name": "tf",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use both fields, top first"
            },
            {
              "name": "bf",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "use both fields, bottom first"
            }
          ]
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set which planes to process (from 0 to 15) (default 7)"
        },
        {
          "name": "nsize",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set size of local neighborhood around each pixel, used by the predictor neural network (from 0 to 6) (default s32x4)",
          "values": [
            {
              "name": "s8x6",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s16x6",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s32x6",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s48x6",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s8x4",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s16x4",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "s32x4",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "nns",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set number of neurons in predictor neural network (from 0 to 4) (default n32)",
          "values": [
            {
              "name": "n16",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "n32",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "n64",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "n128",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "n256",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "qual",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set quality (from 1 to 2) (default fast)",
          "values": [
            {
              "name": "fast",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "slow",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "etype",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set which set of weights to use in the predictor (from 0 to 1) (default a)",
          "values": [
            {
              "name": "a",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "weights trained to minimize absolute error"
            },
            {
              "name": "abs",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "weights trained to minimize absolute error"
            },
            {
              "name": "s",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "weights trained to minimize squared error"
            },
            {
              "name": "mse",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "weights trained to minimize squared error"
            }
          ]
        },
        {
          "name": "pscrn",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set prescreening (from 0 to 4) (default new)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "original",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "new",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "new2",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "new3",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "noformat",
      "label": "Force libavfilter not to use any of the specified pixel formats for the input to the next filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "pix_fmts",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "A '|'-separated list of pixel formats"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "noise",
      "label": "Add noise.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "all_seed",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 noise seed (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "all_strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "alls",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "all_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "allf",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c0_seed",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 noise seed (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "c0_strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c0s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c0_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c0f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #0 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c1_seed",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #1 noise seed (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "c1_strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #1 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c1s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #1 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c1_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #1 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c1f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #1 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c2_seed",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #2 noise seed (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "c2_strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #2 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c2s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #2 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c2_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #2 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c2f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #2 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c3_seed",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #3 noise seed (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "c3_strength",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #3 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c3s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #3 strength (from 0 to 100) (default 0)"
        },
        {
          "name": "c3_flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #3 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        },
        {
          "name": "c3f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set component #3 flags (default 0)",
          "values": [
            {
              "name": "a",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "averaged noise"
            },
            {
              "name": "p",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "(semi)regular pattern"
            },
            {
              "name": "t",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "temporal noise"
            },
            {
              "name": "u",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "uniform noise"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "normalize",
      "label": "Normalize RGB video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "blackpt",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "output color to which darkest input color is mapped (default \"black\")"
        },
        {
          "name": "whitept",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "output color to which brightest input color is mapped (default \"white\")"
        },
        {
          "name": "smoothing",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "amount of temporal smoothing of the input range, to reduce flicker (from 0 to 2.68435e+08) (default 0)"
        },
        {
          "name": "independence",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "proportion of independent to linked channel normalization (from 0 to 1) (default 1)"
        },
        {
          "name": "strength",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "strength of filter, from no effect to full normalization (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "null",
      "label": "Pass the source unchanged to the output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "oscilloscope",
      "label": "2D Video Oscilloscope.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "x",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope x position (from 0 to 1) (default 0.5)"
        },
        {
          "name": "y",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope y position (from 0 to 1) (default 0.5)"
        },
        {
          "name": "s",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope size (from 0 to 1) (default 0.8)"
        },
        {
          "name": "t",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope tilt (from 0 to 1) (default 0.5)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set trace opacity (from 0 to 1) (default 0.8)"
        },
        {
          "name": "tx",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set trace x position (from 0 to 1) (default 0.5)"
        },
        {
          "name": "ty",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set trace y position (from 0 to 1) (default 0.9)"
        },
        {
          "name": "tw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set trace width (from 0.1 to 1) (default 0.8)"
        },
        {
          "name": "th",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set trace height (from 0.1 to 1) (default 0.3)"
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set components to trace (from 0 to 15) (default 7)"
        },
        {
          "name": "g",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "draw trace grid (default true)"
        },
        {
          "name": "st",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "draw statistics (default true)"
        },
        {
          "name": "sc",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "draw scope (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "overlay",
      "label": "Overlay a video source on top of the input.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x expression (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y expression (default \"0\")"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default frame)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions per-frame"
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output format (from 0 to 7) (default yuv420)",
          "values": [
            {
              "name": "yuv420",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv420p10",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv422",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv422p10",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yuv444",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rgb",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbrp",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "auto",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "repeat overlay of the last overlay frame (default true)"
        },
        {
          "name": "alpha",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "alpha format (from 0 to 1) (default straight)",
          "values": [
            {
              "name": "straight",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "premultiplied",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "overlay"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "overlay_opencl",
      "label": "Overlay one video on top of another",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay x position (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay y position (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "overlay"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "overlay_qsv",
      "label": "Quick Sync Video overlay.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay x position (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay y position (default \"0\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay width (default \"overlay_iw\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay height (default \"overlay_ih*w/overlay_iw\")"
        },
        {
          "name": "alpha",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay global alpha (from 0 to 255) (default 255)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "repeat overlay of the last overlay frame (default true)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "overlay"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "overlay_cuda",
      "label": "Overlay one video on top of another using CUDA",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay x position (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Overlay y position (from INT_MIN to INT_MAX) (default 0)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "repeat overlay of the last overlay frame (default true)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "overlay"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "owdenoise",
      "label": "Denoise using wavelets.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "depth",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set depth (from 8 to 16) (default 8)"
        },
        {
          "name": "luma_strength",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from 0 to 1000) (default 1)"
        },
        {
          "name": "ls",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from 0 to 1000) (default 1)"
        },
        {
          "name": "chroma_strength",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from 0 to 1000) (default 1)"
        },
        {
          "name": "cs",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from 0 to 1000) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pad",
      "label": "Pad the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area width expression (default \"iw\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area width expression (default \"iw\")"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area height expression (default \"ih\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area height expression (default \"ih\")"
        },
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x offset expression for the input image position (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y offset expression for the input image position (default \"0\")"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color of the padded area border (default \"black\")"
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions during initialization and per-frame"
            }
          ]
        },
        {
          "name": "aspect",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "pad to fit an aspect instead of a resolution (from 0 to DBL_MAX) (default 0/1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pad_opencl",
      "label": "Pad the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area width (default \"iw\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area width (default \"iw\")"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area height (default \"ih\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the pad area height (default \"ih\")"
        },
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x offset for the input image position (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y offset for the input image position (default \"0\")"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color of the padded area border (default \"black\")"
        },
        {
          "name": "aspect",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "pad to fit an aspect instead of a resolution (from 0 to 32767) (default 0/1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "palettegen",
      "label": "Find the optimal palette for a given stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "max_colors",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the maximum number of colors to use in the palette (from 4 to 256) (default 256)"
        },
        {
          "name": "reserve_transparent",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "reserve a palette entry for transparency (default true)"
        },
        {
          "name": "transparency_color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set a background color for transparency (default \"lime\")"
        },
        {
          "name": "stats_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set statistics mode (from 0 to 2) (default full)",
          "values": [
            {
              "name": "full",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "compute full frame histograms"
            },
            {
              "name": "diff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "compute histograms only for the part that differs from previous frame"
            },
            {
              "name": "single",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "compute new histogram for each frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "paletteuse",
      "label": "Use a palette to downsample an input video stream.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dither",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select dithering mode (from 0 to 5) (default sierra2_4a)",
          "values": [
            {
              "name": "bayer",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ordered 8x8 bayer dithering (deterministic)"
            },
            {
              "name": "heckbert",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "dithering as defined by Paul Heckbert in 1982 (simple error diffusion)"
            },
            {
              "name": "floyd_steinberg",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Floyd and Steingberg dithering (error diffusion)"
            },
            {
              "name": "sierra2",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Frankie Sierra dithering v2 (error diffusion)"
            },
            {
              "name": "sierra2_4a",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Frankie Sierra dithering v2 \"Lite\" (error diffusion)"
            }
          ]
        },
        {
          "name": "bayer_scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale for bayer dithering (from 0 to 5) (default 2)"
        },
        {
          "name": "diff_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame difference mode (from 0 to 1) (default 0)",
          "values": [
            {
              "name": "rectangle",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "process smallest different rectangle"
            }
          ]
        },
        {
          "name": "new",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "take new palette for each output frame (default false)"
        },
        {
          "name": "alpha_threshold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the alpha threshold for transparency (from 0 to 255) (default 128)"
        },
        {
          "name": "debug_kdtree",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "save Graphviz graph of the kdtree in specified file"
        },
        {
          "name": "color_search",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set reverse colormap color search method (from 0 to 2) (default nns_iterative)",
          "values": [
            {
              "name": "nns_iterative",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "iterative search"
            },
            {
              "name": "nns_recursive",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "recursive search"
            },
            {
              "name": "bruteforce",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "brute-force into the palette"
            }
          ]
        },
        {
          "name": "mean_err",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "compute and print mean error (default false)"
        },
        {
          "name": "debug_accuracy",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "test color search accuracy (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        },
        {
          "type": "video",
          "name": "palette"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "perms",
      "label": "Set permissions for the output video frame.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "select permissions mode (from 0 to 4) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "do nothing"
            },
            {
              "name": "ro",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set all output frames read-only"
            },
            {
              "name": "rw",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set all output frames writable"
            },
            {
              "name": "toggle",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "switch permissions"
            },
            {
              "name": "random",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "A"
              ],
              "desc": "set permissions randomly"
            }
          ]
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set the seed for the random mode (from -1 to UINT32_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "perspective",
      "label": "Correct the perspective of video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "x0",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set top left x coordinate (default \"0\")"
        },
        {
          "name": "y0",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set top left y coordinate (default \"0\")"
        },
        {
          "name": "x1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set top right x coordinate (default \"W\")"
        },
        {
          "name": "y1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set top right y coordinate (default \"0\")"
        },
        {
          "name": "x2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bottom left x coordinate (default \"0\")"
        },
        {
          "name": "y2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bottom left y coordinate (default \"H\")"
        },
        {
          "name": "x3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bottom right x coordinate (default \"W\")"
        },
        {
          "name": "y3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bottom right y coordinate (default \"H\")"
        },
        {
          "name": "interpolation",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interpolation (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "cubic",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "sense",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the sense of the coordinates (from 0 to 1) (default source)",
          "values": [
            {
              "name": "source",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "specify locations in source to send to corners in destination"
            },
            {
              "name": "destination",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "specify locations in destination to send corners of source"
            }
          ]
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions per-frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "phase",
      "label": "Phase shift fields.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set phase mode (from 0 to 8) (default A)",
          "values": [
            {
              "name": "p",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "progressive"
            },
            {
              "name": "t",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "top first"
            },
            {
              "name": "b",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "bottom first"
            },
            {
              "name": "T",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "top first analyze"
            },
            {
              "name": "B",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "bottom first analyze"
            },
            {
              "name": "u",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "analyze"
            },
            {
              "name": "U",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "full analyze"
            },
            {
              "name": "a",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "auto"
            },
            {
              "name": "A",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "auto analyze"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "photosensitivity",
      "label": "Filter out photosensitive epilepsy seizure-inducing flashes.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "frames",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to use (from 2 to 240) (default 30)"
        },
        {
          "name": "f",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to use (from 2 to 240) (default 30)"
        },
        {
          "name": "threshold",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set detection threshold factor (lower is stricter) (from 0.1 to FLT_MAX) (default 1)"
        },
        {
          "name": "t",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set detection threshold factor (lower is stricter) (from 0.1 to FLT_MAX) (default 1)"
        },
        {
          "name": "skip",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set pixels to skip when sampling frames (from 1 to 1024) (default 1)"
        },
        {
          "name": "bypass",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "leave frames unchanged (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pixdesctest",
      "label": "Test pixel format definitions.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pixscope",
      "label": "Pixel data analysis.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "x",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope x offset (from 0 to 1) (default 0.5)"
        },
        {
          "name": "y",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope y offset (from 0 to 1) (default 0.5)"
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope width (from 1 to 80) (default 7)"
        },
        {
          "name": "h",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scope height (from 1 to 80) (default 7)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set window opacity (from 0 to 1) (default 0.5)"
        },
        {
          "name": "wx",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set window x offset (from -1 to 1) (default -1)"
        },
        {
          "name": "wy",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set window y offset (from -1 to 1) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pp",
      "label": "Filter video using libpostproc.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "subfilters",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set postprocess subfilters (default \"de\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pp7",
      "label": "Apply Postprocessing 7 filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "qp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force a constant quantizer parameter (from 0 to 64) (default 0)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set thresholding mode (from 0 to 2) (default medium)",
          "values": [
            {
              "name": "hard",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hard thresholding"
            },
            {
              "name": "soft",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "soft thresholding"
            },
            {
              "name": "medium",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "medium thresholding"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "premultiply",
      "label": "PreMultiply first stream with first plane of second stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        },
        {
          "name": "inplace",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable inplace mode (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "prewitt",
      "label": "Apply prewitt operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "prewitt_opencl",
      "label": "Apply prewitt operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "procamp_vaapi",
      "label": "ProcAmp (color balance) adjustments for hue, saturation, brightness, contrast",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "b",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video brightness (from -100 to 100) (default 0)"
        },
        {
          "name": "brightness",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video brightness (from -100 to 100) (default 0)"
        },
        {
          "name": "s",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video saturation (from 0 to 10) (default 1)"
        },
        {
          "name": "saturatio",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video saturation (from 0 to 10) (default 1)"
        },
        {
          "name": "c",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video contrast (from 0 to 10) (default 1)"
        },
        {
          "name": "contrast",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video contrast (from 0 to 10) (default 1)"
        },
        {
          "name": "h",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video hue (from -180 to 180) (default 0)"
        },
        {
          "name": "hue",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video hue (from -180 to 180) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "program_opencl",
      "label": "Filter video using an OpenCL program",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "source",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "OpenCL program source file"
        },
        {
          "name": "kernel",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Kernel name in program"
        },
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of inputs (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video size"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video size"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pseudocolor",
      "label": "Make pseudocolored video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"val\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"val\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"val\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"val\")"
        },
        {
          "name": "index",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component as base (from 0 to 3) (default 0)"
        },
        {
          "name": "i",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component as base (from 0 to 3) (default 0)"
        },
        {
          "name": "preset",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set preset (from -1 to 9) (default none)",
          "values": [
            {
              "name": "none",
              "value": "-1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "magma",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "inferno",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "plasma",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "viridis",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "turbo",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "cividis",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "range1",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "range2",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "shadows",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "highlights",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set preset (from -1 to 9) (default none)",
          "values": [
            {
              "name": "none",
              "value": "-1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "magma",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "inferno",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "plasma",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "viridis",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "turbo",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "cividis",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "range1",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "range2",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "shadows",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "highlights",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set pseudocolor opacity (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "psnr",
      "label": "Calculate the PSNR between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "stats_file",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set file where to store per-frame difference information"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set file where to store per-frame difference information"
        },
        {
          "name": "stats_version",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set the format version for the stats file. (from 1 to 2) (default 1)"
        },
        {
          "name": "output_max",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Add raw stats (max values) to the output log. (default false)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pullup",
      "label": "Pullup from field sequence to frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "jl",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set left junk size (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "jr",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set right junk size (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "jt",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set top junk size (from 1 to INT_MAX) (default 4)"
        },
        {
          "name": "jb",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bottom junk size (from 1 to INT_MAX) (default 4)"
        },
        {
          "name": "sb",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set strict breaks (default false)"
        },
        {
          "name": "mp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set metric plane (from 0 to 2) (default y)",
          "values": [
            {
              "name": "y",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "luma"
            },
            {
              "name": "u",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "chroma blue"
            },
            {
              "name": "v",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "chroma red"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "qp",
      "label": "Change video quantization parameters.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "qp",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set qp expression"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "random",
      "label": "Return random frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "frames",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of frames in cache (from 2 to 512) (default 30)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed (from -1 to UINT32_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "readeia608",
      "label": "Read EIA-608 Closed Caption codes from input video and write them to frame metadata.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "scan_min",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set from which line to scan for codes (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "scan_max",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set to which line to scan for codes (from 0 to INT_MAX) (default 29)"
        },
        {
          "name": "spw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set ratio of width reserved for sync code detection (from 0.1 to 0.7) (default 0.27)"
        },
        {
          "name": "chp",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "check and apply parity bit (default false)"
        },
        {
          "name": "lp",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "lowpass line prior to processing (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "readvitc",
      "label": "Read vertical interval timecode and write it to frame metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "scan_max",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "maximum line numbers to scan for VITC data (from -1 to INT_MAX) (default 45)"
        },
        {
          "name": "thr_b",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "black color threshold (from 0 to 1) (default 0.2)"
        },
        {
          "name": "thr_w",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "white color threshold (from 0 to 1) (default 0.6)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "realtime",
      "label": "Slow down filtering to match realtime.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "limit",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "sleep time limit (default 2)"
        },
        {
          "name": "speed",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "speed factor (from DBL_MIN to DBL_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "remap",
      "label": "Remap pixels.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output format (from 0 to 1) (default color)",
          "values": [
            {
              "name": "color",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gray",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "fill",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color of the unmapped pixels (default \"black\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "source"
        },
        {
          "type": "video",
          "name": "xmap"
        },
        {
          "type": "video",
          "name": "ymap"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "removegrain",
      "label": "Remove grain.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "m0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode for 1st plane (from 0 to 24) (default 0)"
        },
        {
          "name": "m1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode for 2nd plane (from 0 to 24) (default 0)"
        },
        {
          "name": "m2",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode for 3rd plane (from 0 to 24) (default 0)"
        },
        {
          "name": "m3",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode for 4th plane (from 0 to 24) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "removelogo",
      "label": "Remove a TV logo based on a mask image.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bitmap filename"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bitmap filename"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "repeatfields",
      "label": "Hard repeat fields based on MPEG repeat field flag.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "reverse",
      "label": "Reverse a clip.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "rgbashift",
      "label": "Shift RGBA.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "rh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift red horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "rv",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift red vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "gh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift green horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "gv",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift green vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "bh",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift blue horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "bv",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift blue vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "ah",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift alpha horizontally (from -255 to 255) (default 0)"
        },
        {
          "name": "av",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "shift alpha vertically (from -255 to 255) (default 0)"
        },
        {
          "name": "edge",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set edge operation (from 0 to 1) (default smear)",
          "values": [
            {
              "name": "smear",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "wrap",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "roberts",
      "label": "Apply roberts cross operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "roberts_opencl",
      "label": "Apply roberts operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "rotate",
      "label": "Rotate the input image.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "angle",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set angle (in radians) (default \"0\")"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set angle (in radians) (default \"0\")"
        },
        {
          "name": "out_w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output width expression (default \"iw\")"
        },
        {
          "name": "ow",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output width expression (default \"iw\")"
        },
        {
          "name": "out_h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output height expression (default \"ih\")"
        },
        {
          "name": "oh",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output height expression (default \"ih\")"
        },
        {
          "name": "fillcolor",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background fill color (default \"black\")"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background fill color (default \"black\")"
        },
        {
          "name": "bilinear",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "use bilinear interpolation (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sab",
      "label": "Apply shape adaptive blur.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "luma_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma radius (from 0.1 to 4) (default 1)"
        },
        {
          "name": "lr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma radius (from 0.1 to 4) (default 1)"
        },
        {
          "name": "luma_pre_filter_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma pre-filter radius (from 0.1 to 2) (default 1)"
        },
        {
          "name": "lpfr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma pre-filter radius (from 0.1 to 2) (default 1)"
        },
        {
          "name": "luma_strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from 0.1 to 100) (default 1)"
        },
        {
          "name": "ls",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from 0.1 to 100) (default 1)"
        },
        {
          "name": "chroma_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma radius (from -0.9 to 4) (default -0.9)"
        },
        {
          "name": "cr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma radius (from -0.9 to 4) (default -0.9)"
        },
        {
          "name": "chroma_pre_filter_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma pre-filter radius (from -0.9 to 2) (default -0.9)"
        },
        {
          "name": "cpfr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma pre-filter radius (from -0.9 to 2) (default -0.9)"
        },
        {
          "name": "chroma_strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from -0.9 to 100) (default -0.9)"
        },
        {
          "name": "cs",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from -0.9 to 100) (default -0.9)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scale",
      "label": "Scale the input video size and/or convert the image format.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "flags",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Flags to pass to libswscale (default \"bilinear\")"
        },
        {
          "name": "interl",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interlacing (default false)"
        },
        {
          "name": "in_color_matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input YCbCr type (default \"auto\")",
          "values": [
            {
              "name": "auto",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "out_color_matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output YCbCr type",
          "values": [
            {
              "name": "auto",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "in_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color range (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "out_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output color range (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "in_v_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "in_h_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "out_v_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "out_h_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "force_original_aspect_ratio",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "decrease or increase w/h if necessary to keep the original AR (from 0 to 2) (default disable)",
          "values": [
            {
              "name": "disable",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "decrease",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "increase",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "force_divisible_by",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used (from 1 to 256) (default 1)"
        },
        {
          "name": "param0",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Scaler param 0 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "param1",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Scaler param 1 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "nb_slices",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of slices (debug purpose only) (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions during initialization and per-frame"
            }
          ]
        },
        {
          "name": "-sws_flags",
          "type": "flags",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler flags (default bicubic)",
          "values": [
            {
              "name": "fast_bilinear",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "fast bilinear"
            },
            {
              "name": "bilinear",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bilinear"
            },
            {
              "name": "bicubic",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bicubic"
            },
            {
              "name": "experimental",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "experimental"
            },
            {
              "name": "neighbor",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "nearest neighbor"
            },
            {
              "name": "area",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "averaging area"
            },
            {
              "name": "bicublin",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "luma bicubic, chroma bilinear"
            },
            {
              "name": "gauss",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "Gaussian"
            },
            {
              "name": "sinc",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "sinc"
            },
            {
              "name": "lanczos",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "spline",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "natural bicubic spline"
            },
            {
              "name": "print_info",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "print info"
            },
            {
              "name": "accurate_rnd",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "accurate rounding"
            },
            {
              "name": "full_chroma_int",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "full chroma interpolation"
            },
            {
              "name": "full_chroma_inp",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "full chroma input"
            },
            {
              "name": "bitexact",
              "ctx": [
                "E",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "error_diffusion",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "error diffusion dither"
            }
          ]
        },
        {
          "name": "-srcw",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source width (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-srch",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source height (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-dstw",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination width (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-dsth",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination height (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-src_format",
          "type": "pix_fmt",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source format (default yuv420p)"
        },
        {
          "name": "-dst_format",
          "type": "pix_fmt",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination format (default yuv420p)"
        },
        {
          "name": "-src_range",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source is full range (default false)"
        },
        {
          "name": "-dst_range",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination is full range (default false)"
        },
        {
          "name": "-param0",
          "type": "double",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler param 0 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "-param1",
          "type": "double",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler param 1 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "-src_v_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-src_h_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-dst_v_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-dst_h_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-sws_dither",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "set dithering algorithm (from 0 to 6) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "1",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "leave choice to sws"
            },
            {
              "name": "bayer",
              "value": "2",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bayer dither"
            },
            {
              "name": "ed",
              "value": "3",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "error diffusion"
            },
            {
              "name": "a_dither",
              "value": "4",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "arithmetic addition dither"
            },
            {
              "name": "x_dither",
              "value": "5",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "arithmetic xor dither"
            }
          ]
        },
        {
          "name": "-gamma",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "gamma correct scaling (default false)"
        },
        {
          "name": "-alphablend",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "mode for alpha -> non alpha (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "ignore alpha"
            },
            {
              "name": "uniform_color",
              "value": "1",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "blend onto a uniform color"
            },
            {
              "name": "checkerboard",
              "value": "2",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "blend onto a checkerboard"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scale_cuda",
      "label": "GPU accelerated video resizer",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scale_qsv",
      "label": "QuickSync video scaling and format conversion",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video width (default \"iw\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video height (default \"ih\")"
        },
        {
          "name": "format",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output pixel format (default \"same\")"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scaling mode (from 0 to 2) (default 0)",
          "values": [
            {
              "name": "low_power",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "low power mode"
            },
            {
              "name": "hq",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "high quality mode"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scale_vaapi",
      "label": "Scale to/from VAAPI surfaces.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video width (default \"iw\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video height (default \"ih\")"
        },
        {
          "name": "format",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video format (software format of hardware frames)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Scaling mode (from 0 to 768) (default hq)",
          "values": [
            {
              "name": "default",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use the default (depend on the driver) scaling algorithm"
            },
            {
              "name": "fast",
              "value": "256",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use fast scaling algorithm"
            },
            {
              "name": "hq",
              "value": "512",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use high quality scaling algorithm"
            },
            {
              "name": "nl_anamorphic",
              "value": "768",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Use nolinear anamorphic scaling algorithm"
            }
          ]
        },
        {
          "name": "out_color_matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output colour matrix coefficient set"
        },
        {
          "name": "out_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output colour range (from 0 to 2) (default 0)",
          "values": [
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Full range"
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Limited range"
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Full range"
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Limited range"
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Limited range"
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Full range"
            }
          ]
        },
        {
          "name": "out_color_primaries",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output colour primaries"
        },
        {
          "name": "out_color_transfer",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output colour transfer characteristics"
        },
        {
          "name": "out_chroma_location",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output chroma sample location"
        },
        {
          "name": "force_original_aspect_ratio",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "decrease or increase w/h if necessary to keep the original AR (from 0 to 2) (default disable)",
          "values": [
            {
              "name": "disable",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "decrease",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "increase",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "force_divisible_by",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used (from 1 to 256) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scale2ref",
      "label": "Scale the input video size and/or convert the image format to the given reference.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "flags",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Flags to pass to libswscale (default \"bilinear\")"
        },
        {
          "name": "interl",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interlacing (default false)"
        },
        {
          "name": "in_color_matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input YCbCr type (default \"auto\")",
          "values": [
            {
              "name": "auto",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "out_color_matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output YCbCr type",
          "values": [
            {
              "name": "auto",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt601",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "in_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color range (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "out_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output color range (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "in_v_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "in_h_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "out_v_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "out_h_chr_pos",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "force_original_aspect_ratio",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "decrease or increase w/h if necessary to keep the original AR (from 0 to 2) (default disable)",
          "values": [
            {
              "name": "disable",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "decrease",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "increase",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "force_divisible_by",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used (from 1 to 256) (default 1)"
        },
        {
          "name": "param0",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Scaler param 0 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "param1",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Scaler param 1 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "nb_slices",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of slices (debug purpose only) (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions during initialization and per-frame"
            }
          ]
        },
        {
          "name": "-sws_flags",
          "type": "flags",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler flags (default bicubic)",
          "values": [
            {
              "name": "fast_bilinear",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "fast bilinear"
            },
            {
              "name": "bilinear",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bilinear"
            },
            {
              "name": "bicubic",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bicubic"
            },
            {
              "name": "experimental",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "experimental"
            },
            {
              "name": "neighbor",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "nearest neighbor"
            },
            {
              "name": "area",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "averaging area"
            },
            {
              "name": "bicublin",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "luma bicubic, chroma bilinear"
            },
            {
              "name": "gauss",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "Gaussian"
            },
            {
              "name": "sinc",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "sinc"
            },
            {
              "name": "lanczos",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "spline",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "natural bicubic spline"
            },
            {
              "name": "print_info",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "print info"
            },
            {
              "name": "accurate_rnd",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "accurate rounding"
            },
            {
              "name": "full_chroma_int",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "full chroma interpolation"
            },
            {
              "name": "full_chroma_inp",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "full chroma input"
            },
            {
              "name": "bitexact",
              "ctx": [
                "E",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "error_diffusion",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "error diffusion dither"
            }
          ]
        },
        {
          "name": "-srcw",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source width (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-srch",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source height (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-dstw",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination width (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-dsth",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination height (from 1 to INT_MAX) (default 16)"
        },
        {
          "name": "-src_format",
          "type": "pix_fmt",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source format (default yuv420p)"
        },
        {
          "name": "-dst_format",
          "type": "pix_fmt",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination format (default yuv420p)"
        },
        {
          "name": "-src_range",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source is full range (default false)"
        },
        {
          "name": "-dst_range",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination is full range (default false)"
        },
        {
          "name": "-param0",
          "type": "double",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler param 0 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "-param1",
          "type": "double",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "scaler param 1 (from INT_MIN to INT_MAX) (default 123456)"
        },
        {
          "name": "-src_v_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-src_h_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "source horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-dst_v_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination vertical chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-dst_h_chr_pos",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "destination horizontal chroma position in luma grid/256 (from -513 to 512) (default -513)"
        },
        {
          "name": "-sws_dither",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "set dithering algorithm (from 0 to 6) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "1",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "leave choice to sws"
            },
            {
              "name": "bayer",
              "value": "2",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "bayer dither"
            },
            {
              "name": "ed",
              "value": "3",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "error diffusion"
            },
            {
              "name": "a_dither",
              "value": "4",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "arithmetic addition dither"
            },
            {
              "name": "x_dither",
              "value": "5",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "arithmetic xor dither"
            }
          ]
        },
        {
          "name": "-gamma",
          "type": "boolean",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "gamma correct scaling (default false)"
        },
        {
          "name": "-alphablend",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "mode for alpha -> non alpha (from 0 to 2) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "ignore alpha"
            },
            {
              "name": "uniform_color",
              "value": "1",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "blend onto a uniform color"
            },
            {
              "name": "checkerboard",
              "value": "2",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "blend onto a checkerboard"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        },
        {
          "type": "video",
          "name": "ref"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        },
        {
          "type": "video",
          "name": "ref"
        }
      ]
    },
    {
      "id": "scdet",
      "label": "Detect video scene change",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scene change detect threshold (from 0 to 100) (default 10)"
        },
        {
          "name": "t",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scene change detect threshold (from 0 to 100) (default 10)"
        },
        {
          "name": "sc_pass",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set the flag to pass scene change frames (default false)"
        },
        {
          "name": "s",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set the flag to pass scene change frames (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "scroll",
      "label": "Scroll input video.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "horizontal",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the horizontal scrolling speed (from -1 to 1) (default 0)"
        },
        {
          "name": "h",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the horizontal scrolling speed (from -1 to 1) (default 0)"
        },
        {
          "name": "vertical",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the vertical scrolling speed (from -1 to 1) (default 0)"
        },
        {
          "name": "v",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the vertical scrolling speed (from -1 to 1) (default 0)"
        },
        {
          "name": "hpos",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set initial horizontal position (from 0 to 1) (default 0)"
        },
        {
          "name": "vpos",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set initial vertical position (from 0 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "select",
      "label": "Select video frames to pass in output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set an expression to use for selecting frames (default \"1\")"
        },
        {
          "name": "e",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set an expression to use for selecting frames (default \"1\")"
        },
        {
          "name": "outputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of outputs (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of outputs (from 1 to INT_MAX) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "selectivecolor",
      "label": "Apply CMYK adjustments to specific color ranges.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "correction_method",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select correction method (from 0 to 1) (default absolute)",
          "values": [
            {
              "name": "absolute",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "relative",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "reds",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust red regions"
        },
        {
          "name": "yellows",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust yellow regions"
        },
        {
          "name": "greens",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust green regions"
        },
        {
          "name": "cyans",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust cyan regions"
        },
        {
          "name": "blues",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust blue regions"
        },
        {
          "name": "magentas",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust magenta regions"
        },
        {
          "name": "whites",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust white regions"
        },
        {
          "name": "neutrals",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust neutral regions"
        },
        {
          "name": "blacks",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "adjust black regions"
        },
        {
          "name": "psfile",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set Photoshop selectivecolor file name"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sendcmd",
      "label": "Send commands to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "commands",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands"
        },
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands file"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set commands file"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "separatefields",
      "label": "Split input video frames into fields.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setdar",
      "label": "Set the frame display aspect ratio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dar",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display aspect ratio (default \"0\")"
        },
        {
          "name": "ratio",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display aspect ratio (default \"0\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display aspect ratio (default \"0\")"
        },
        {
          "name": "max",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max value for nominator or denominator in the ratio (from 1 to INT_MAX) (default 100)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setfield",
      "label": "Force field for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select interlace mode (from -1 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same input field"
            },
            {
              "name": "bff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as bottom-field-first"
            },
            {
              "name": "tff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as top-field-first"
            },
            {
              "name": "prog",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as progressive"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setparams",
      "label": "Force field, or color property for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "field_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select interlace mode (from -1 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same input field"
            },
            {
              "name": "bff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as bottom-field-first"
            },
            {
              "name": "tff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as top-field-first"
            },
            {
              "name": "prog",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mark as progressive"
            }
          ]
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select color range (from -1 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same color range"
            },
            {
              "name": "unspecified",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "color_primaries",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select color primaries (from -1 to 22) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same color primaries"
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "color_trc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select color transfer (from -1 to 18) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same color transfer"
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log100",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log316",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt1361e",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2084",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "arib-std-b67",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "colorspace",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select colorspace (from -1 to 14) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same colorspace"
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020c",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2085",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-nc",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-c",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ictcp",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setpts",
      "label": "Set PTS for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Expression determining the frame timestamp (default \"PTS\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setrange",
      "label": "Force color range for the output video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select color range (from -1 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep the same color range"
            },
            {
              "name": "unspecified",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mpeg",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jpeg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "setsar",
      "label": "Set the pixel sample aspect ratio.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sar",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sample (pixel) aspect ratio (default \"0\")"
        },
        {
          "name": "ratio",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sample (pixel) aspect ratio (default \"0\")"
        },
        {
          "name": "r",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sample (pixel) aspect ratio (default \"0\")"
        },
        {
          "name": "max",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max value for nominator or denominator in the ratio (from 1 to INT_MAX) (default 100)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "settb",
      "label": "Set timebase for the video output link.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set expression determining the output timebase (default \"intb\")"
        },
        {
          "name": "tb",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set expression determining the output timebase (default \"intb\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sharpness_vaapi",
      "label": "VAAPI VPP for sharpness",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sharpness",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "sharpness level (from 0 to 64) (default 44)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "shear",
      "label": "Shear transform the input image.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "shx",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set x shear factor (from -2 to 2) (default 0)"
        },
        {
          "name": "shy",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set y shear factor (from -2 to 2) (default 0)"
        },
        {
          "name": "fillcolor",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set background fill color (default \"black\")"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set background fill color (default \"black\")"
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set interpolation (from 0 to 1) (default bilinear)",
          "values": [
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "nearest neighbour"
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "bilinear"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showinfo",
      "label": "Show textual information for each video frame.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "checksum",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "calculate checksums (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showpalette",
      "label": "Display frame palette.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set pixel box size (from 1 to 100) (default 30)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "shuffleframes",
      "label": "Shuffle video frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mapping",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set destination indexes of input frames (default \"0\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "shufflepixels",
      "label": "Shuffle video pixels.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "direction",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shuffle direction (from 0 to 1) (default forward)",
          "values": [
            {
              "name": "forward",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "inverse",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shuffle direction (from 0 to 1) (default forward)",
          "values": [
            {
              "name": "forward",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "inverse",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shuffle mode (from 0 to 2) (default horizontal)",
          "values": [
            {
              "name": "horizontal",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "vertical",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "block",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set shuffle mode (from 0 to 2) (default horizontal)",
          "values": [
            {
              "name": "horizontal",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "vertical",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "block",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "width",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block width (from 1 to 8000) (default 10)"
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block width (from 1 to 8000) (default 10)"
        },
        {
          "name": "height",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block height (from 1 to 8000) (default 10)"
        },
        {
          "name": "h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set block height (from 1 to 8000) (default 10)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set random seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "s",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set random seed (from -1 to UINT32_MAX) (default -1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "shuffleplanes",
      "label": "Shuffle video planes.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "map0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Index of the input plane to be used as the first output plane (from 0 to 3) (default 0)"
        },
        {
          "name": "map1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Index of the input plane to be used as the second output plane (from 0 to 3) (default 1)"
        },
        {
          "name": "map2",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Index of the input plane to be used as the third output plane (from 0 to 3) (default 2)"
        },
        {
          "name": "map3",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Index of the input plane to be used as the fourth output plane (from 0 to 3) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sidedata",
      "label": "Manipulate video frame side data.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set a mode of operation (from 0 to 1) (default select)",
          "values": [
            {
              "name": "select",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select frame"
            },
            {
              "name": "delete",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "delete side data"
            }
          ]
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set side data type (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "PANSCAN",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "A53_CC",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "STEREO3D",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "MATRIXENCODING",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "DOWNMIX_INFO",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "REPLAYGAIN",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "DISPLAYMATRIX",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "AFD",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "MOTION_VECTORS",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "SKIP_SAMPLES",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "AUDIO_SERVICE_TYPE",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "MASTERING_DISPLAY_METADATA",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "GOP_TIMECODE",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "SPHERICAL",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "CONTENT_LIGHT_LEVEL",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ICC_PROFILE",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "QP_TABLE_PROPERTIES",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "QP_TABLE_DATA",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "S12M_TIMECOD",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "DYNAMIC_HDR_PLUS",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "REGIONS_OF_INTEREST",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "SEI_UNREGISTERED",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "signalstats",
      "label": "Generate statistics from video analysis.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "stat",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set statistics filters (default 0)",
          "values": [
            {
              "name": "tout",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "analyze pixels for temporal outliers"
            },
            {
              "name": "vrep",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "analyze video lines for vertical line repetition"
            },
            {
              "name": "brng",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "analyze for pixels outside of broadcast range"
            }
          ]
        },
        {
          "name": "out",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video filter (from -1 to 2) (default -1)",
          "values": [
            {
              "name": "tout",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "highlight pixels that depict temporal outliers"
            },
            {
              "name": "vrep",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "highlight video lines that depict vertical line repetition"
            },
            {
              "name": "brng",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "highlight pixels that are outside of broadcast range"
            }
          ]
        },
        {
          "name": "c",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set highlight color (default \"yellow\")"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set highlight color (default \"yellow\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "signature",
      "label": "Calculate the MPEG-7 video signature",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "detectmode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the detectmode (from 0 to 2) (default off)",
          "values": [
            {
              "name": "off",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fast",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "nb_inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "number of inputs (from 1 to INT_MAX) (default 1)"
        },
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "filename for output files (default \"\")"
        },
        {
          "name": "format",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output format (from 0 to 1) (default binary)",
          "values": [
            {
              "name": "binary",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "xml",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "th_d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold to detect one word as similar (from 1 to INT_MAX) (default 9000)"
        },
        {
          "name": "th_dc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold to detect all words as similar (from 1 to INT_MAX) (default 60000)"
        },
        {
          "name": "th_xh",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold to detect frames as similar (from 1 to INT_MAX) (default 116)"
        },
        {
          "name": "th_di",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "minimum length of matching sequence in frames (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "th_it",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "threshold for relation of good to all frames (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "smartblur",
      "label": "Blur the input video without impacting the outlines.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "luma_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma radius (from 0.1 to 5) (default 1)"
        },
        {
          "name": "lr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma radius (from 0.1 to 5) (default 1)"
        },
        {
          "name": "luma_strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from -1 to 1) (default 1)"
        },
        {
          "name": "ls",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma strength (from -1 to 1) (default 1)"
        },
        {
          "name": "luma_threshold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma threshold (from -30 to 30) (default 0)"
        },
        {
          "name": "lt",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma threshold (from -30 to 30) (default 0)"
        },
        {
          "name": "chroma_radius",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma radius (from -0.9 to 5) (default -0.9)"
        },
        {
          "name": "cr",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma radius (from -0.9 to 5) (default -0.9)"
        },
        {
          "name": "chroma_strength",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from -2 to 1) (default -2)"
        },
        {
          "name": "cs",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma strength (from -2 to 1) (default -2)"
        },
        {
          "name": "chroma_threshold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma threshold (from -31 to 30) (default -31)"
        },
        {
          "name": "ct",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma threshold (from -31 to 30) (default -31)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sobel",
      "label": "Apply sobel operator.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sobel_opencl",
      "label": "Apply sobel operator",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale (from 0 to 65535) (default 1)"
        },
        {
          "name": "delta",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set delta (from -65535 to 65535) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "split",
      "label": "Pass on the input to N video outputs.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "outputs",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set number of outputs (from 1 to INT_MAX) (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "spp",
      "label": "Apply a simple post processing filter.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "quality",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set quality (from 0 to 6) (default 3)"
        },
        {
          "name": "qp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force a constant quantizer parameter (from 0 to 63) (default 0)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set thresholding mode (from 0 to 1) (default hard)",
          "values": [
            {
              "name": "hard",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hard thresholding"
            },
            {
              "name": "soft",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "soft thresholding"
            }
          ]
        },
        {
          "name": "use_bframe_qp",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "use B-frames' QP (default false)"
        },
        {
          "name": "-dct",
          "type": "int",
          "ctx": [
            "E",
            "V"
          ],
          "desc": "DCT algorithm (from 0 to INT_MAX) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "autoselect a good one"
            },
            {
              "name": "fastint",
              "value": "1",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "fast integer (experimental / for debugging)"
            },
            {
              "name": "int",
              "value": "2",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "accurate integer"
            },
            {
              "name": "mmx",
              "value": "3",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "altivec",
              "value": "5",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "faan",
              "value": "6",
              "ctx": [
                "E",
                "V"
              ],
              "desc": "floating point AAN DCT (experimental / for debugging)"
            }
          ]
        },
        {
          "name": "-idct",
          "type": "int",
          "ctx": [
            "E",
            "D",
            "V"
          ],
          "desc": "select IDCT implementation (from 0 to INT_MAX) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "autoselect a good one"
            },
            {
              "name": "int",
              "value": "1",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simple",
              "value": "2",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simplemmx",
              "value": "3",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "arm",
              "value": "7",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "altivec",
              "value": "8",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simplearm",
              "value": "10",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simplearmv5te",
              "value": "16",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simplearmv6",
              "value": "17",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "simpleneon",
              "value": "22",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "xvid",
              "value": "14",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "xvidmmx",
              "value": "14",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            },
            {
              "name": "faani",
              "value": "20",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "floating point AAN IDCT (experimental / for debugging)"
            },
            {
              "name": "simpleauto",
              "value": "128",
              "ctx": [
                "E",
                "D",
                "V"
              ],
              "desc": "experimental / for debugging"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sr",
      "label": "Apply DNN-based image super resolution to the input.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dnn_backend",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "DNN backend used for model execution (from 0 to 1) (default native)",
          "values": [
            {
              "name": "native",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "native backend flag"
            }
          ]
        },
        {
          "name": "scale_factor",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scale factor for SRCNN model (from 2 to 4) (default 2)"
        },
        {
          "name": "model",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "path to model file specifying network architecture and its parameters"
        },
        {
          "name": "input",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input name of the model (default \"x\")"
        },
        {
          "name": "output",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output name of the model (default \"y\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "ssim",
      "label": "Calculate the SSIM between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "stats_file",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set file where to store per-frame difference information"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set file where to store per-frame difference information"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "stereo3d",
      "label": "Convert video stereoscopic 3D view.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "in",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input format (from 16 to 32) (default sbsl)",
          "values": [
            {
              "name": "ab2l",
              "value": "24",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height left first"
            },
            {
              "name": "tb2l",
              "value": "24",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height left first"
            },
            {
              "name": "ab2r",
              "value": "25",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height right first"
            },
            {
              "name": "tb2r",
              "value": "25",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height right first"
            },
            {
              "name": "abl",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below left first"
            },
            {
              "name": "tbl",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below left first"
            },
            {
              "name": "abr",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below right first"
            },
            {
              "name": "tbr",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below right first"
            },
            {
              "name": "al",
              "value": "26",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "alternating frames left first"
            },
            {
              "name": "ar",
              "value": "27",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "alternating frames right first"
            },
            {
              "name": "sbs2l",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side half width left first"
            },
            {
              "name": "sbs2r",
              "value": "21",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side half width right first"
            },
            {
              "name": "sbsl",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side left first"
            },
            {
              "name": "sbsr",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side right first"
            },
            {
              "name": "irl",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave rows left first"
            },
            {
              "name": "irr",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave rows right first"
            },
            {
              "name": "icl",
              "value": "30",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave columns left first"
            },
            {
              "name": "icr",
              "value": "31",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave columns right first"
            }
          ]
        },
        {
          "name": "out",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output format (from 0 to 32) (default arcd)",
          "values": [
            {
              "name": "ab2l",
              "value": "24",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height left first"
            },
            {
              "name": "tb2l",
              "value": "24",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height left first"
            },
            {
              "name": "ab2r",
              "value": "25",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height right first"
            },
            {
              "name": "tb2r",
              "value": "25",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below half height right first"
            },
            {
              "name": "abl",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below left first"
            },
            {
              "name": "tbl",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below left first"
            },
            {
              "name": "abr",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below right first"
            },
            {
              "name": "tbr",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "above below right first"
            },
            {
              "name": "agmc",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph green magenta color"
            },
            {
              "name": "agmd",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph green magenta dubois"
            },
            {
              "name": "agmg",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph green magenta gray"
            },
            {
              "name": "agmh",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph green magenta half color"
            },
            {
              "name": "al",
              "value": "26",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "alternating frames left first"
            },
            {
              "name": "ar",
              "value": "27",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "alternating frames right first"
            },
            {
              "name": "arbg",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red blue gray"
            },
            {
              "name": "arcc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red cyan color"
            },
            {
              "name": "arcd",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red cyan dubois"
            },
            {
              "name": "arcg",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red cyan gray"
            },
            {
              "name": "arch",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red cyan half color"
            },
            {
              "name": "argg",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph red green gray"
            },
            {
              "name": "aybc",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph yellow blue color"
            },
            {
              "name": "aybd",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph yellow blue dubois"
            },
            {
              "name": "aybg",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph yellow blue gray"
            },
            {
              "name": "aybh",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "anaglyph yellow blue half color"
            },
            {
              "name": "irl",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave rows left first"
            },
            {
              "name": "irr",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave rows right first"
            },
            {
              "name": "ml",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mono left"
            },
            {
              "name": "mr",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mono right"
            },
            {
              "name": "sbs2l",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side half width left first"
            },
            {
              "name": "sbs2r",
              "value": "21",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side half width right first"
            },
            {
              "name": "sbsl",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side left first"
            },
            {
              "name": "sbsr",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side right first"
            },
            {
              "name": "chl",
              "value": "28",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "checkerboard left first"
            },
            {
              "name": "chr",
              "value": "29",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "checkerboard right first"
            },
            {
              "name": "icl",
              "value": "30",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave columns left first"
            },
            {
              "name": "icr",
              "value": "31",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave columns right first"
            },
            {
              "name": "hdmi",
              "value": "32",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "HDMI frame pack"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "streamselect",
      "label": "Select video streams",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "number of input streams (from 2 to INT_MAX) (default 2)"
        },
        {
          "name": "map",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A",
            "T"
          ],
          "desc": "input indexes to remap to outputs"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "subtitles",
      "label": "Render text subtitles onto input video using the libass library.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the filename of file to read"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the filename of file to read"
        },
        {
          "name": "original_size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the size of the original video (used to scale fonts)"
        },
        {
          "name": "fontsdir",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the directory containing the fonts to read"
        },
        {
          "name": "alpha",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable processing of alpha channel (default false)"
        },
        {
          "name": "charenc",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input character encoding"
        },
        {
          "name": "stream_index",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "si",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "force_style",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force subtitle style"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "super2xsai",
      "label": "Scale the input by 2x using the Super2xSaI pixel art algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "swaprect",
      "label": "Swap 2 rectangular objects in video.",
      "timeline": true,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rect width (default \"w/2\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set rect height (default \"h/2\")"
        },
        {
          "name": "x1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 1st rect x top left coordinate (default \"w/2\")"
        },
        {
          "name": "y1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 1st rect y top left coordinate (default \"h/2\")"
        },
        {
          "name": "x2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 2nd rect x top left coordinate (default \"0\")"
        },
        {
          "name": "y2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set 2nd rect y top left coordinate (default \"0\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "swapuv",
      "label": "Swap U and V components.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tblend",
      "label": "Blend successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c1_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c2_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c3_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 blend mode (from 0 to 32) (default normal)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "all_mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blend mode for all components (from -1 to 32) (default -1)",
          "values": [
            {
              "name": "addition",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "addition128",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainmerge",
              "value": "28",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "and",
              "value": "2",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "average",
              "value": "3",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "burn",
              "value": "4",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "darken",
              "value": "5",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference",
              "value": "6",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "difference128",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "grainextract",
              "value": "7",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "divide",
              "value": "8",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "dodge",
              "value": "9",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "exclusion",
              "value": "10",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "extremity",
              "value": "32",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "freeze",
              "value": "31",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "glow",
              "value": "27",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardlight",
              "value": "11",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "hardmix",
              "value": "25",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "heat",
              "value": "30",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "lighten",
              "value": "12",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "linearlight",
              "value": "26",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply",
              "value": "13",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "multiply128",
              "value": "29",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "negation",
              "value": "14",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "normal",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "or",
              "value": "15",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "overlay",
              "value": "16",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "phoenix",
              "value": "17",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "pinlight",
              "value": "18",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "reflect",
              "value": "19",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "screen",
              "value": "20",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "softlight",
              "value": "21",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "subtract",
              "value": "22",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "vividlight",
              "value": "23",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "xor",
              "value": "24",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c0_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #0 expression"
        },
        {
          "name": "c1_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #1 expression"
        },
        {
          "name": "c2_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #2 expression"
        },
        {
          "name": "c3_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #3 expression"
        },
        {
          "name": "all_expr",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set expression for all color components"
        },
        {
          "name": "c0_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #0 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c1_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #1 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c2_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #2 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "c3_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color component #3 opacity (from 0 to 1) (default 1)"
        },
        {
          "name": "all_opacity",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set opacity for all color components (from 0 to 1) (default 1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "telecine",
      "label": "Apply a telecine pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "first_field",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select first field (from 0 to 1) (default top)",
          "values": [
            {
              "name": "top",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select top field first"
            },
            {
              "name": "t",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select top field first"
            },
            {
              "name": "bottom",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select bottom field first"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "select bottom field first"
            }
          ]
        },
        {
          "name": "pattern",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "pattern that describe for how many fields a frame is to be displayed (default \"23\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "thistogram",
      "label": "Compute and draw a temporal histogram.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "width",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set width (from 0 to 8192) (default 0)"
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set width (from 0 to 8192) (default 0)"
        },
        {
          "name": "display_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "levels_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set levels mode (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "logarithmic",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set levels mode (from 0 to 1) (default linear)",
          "values": [
            {
              "name": "linear",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "logarithmic",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "components",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color components to display (from 1 to 15) (default 7)"
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color components to display (from 1 to 15) (default 7)"
        },
        {
          "name": "bgopacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "b",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "envelope",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "display envelope (default false)"
        },
        {
          "name": "e",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "display envelope (default false)"
        },
        {
          "name": "ecolor",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope color (default \"gold\")"
        },
        {
          "name": "ec",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope color (default \"gold\")"
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set slide mode (from 0 to 4) (default replace)",
          "values": [
            {
              "name": "frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw new frames"
            },
            {
              "name": "replace",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "replace old columns with new"
            },
            {
              "name": "scroll",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from right to left"
            },
            {
              "name": "rscroll",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from left to right"
            },
            {
              "name": "picture",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display graph in single frame"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "threshold",
      "label": "Threshold first video stream using other video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        },
        {
          "type": "video",
          "name": "threshold"
        },
        {
          "type": "video",
          "name": "min"
        },
        {
          "type": "video",
          "name": "max"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "thumbnail",
      "label": "Select the most representative frame in a given sequence of consecutive frames.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the frames batch size (from 2 to INT_MAX) (default 100)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "thumbnail_cuda",
      "label": "Select the most representative frame in a given sequence of consecutive frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the frames batch size (from 2 to INT_MAX) (default 100)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tile",
      "label": "Tile several successive frames together.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "layout",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set grid size (default \"6x5\")"
        },
        {
          "name": "nb_frames",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximum number of frame to render (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "margin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set outer border margin in pixels (from 0 to 1024) (default 0)"
        },
        {
          "name": "padding",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set inner border thickness in pixels (from 0 to 1024) (default 0)"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color of the unused area (default \"black\")"
        },
        {
          "name": "overlap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to overlap for each render (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "init_padding",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many frames to initially pad (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tinterlace",
      "label": "Perform temporal field interlacing.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select interlace mode (from 0 to 7) (default merge)",
          "values": [
            {
              "name": "merge",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "merge fields"
            },
            {
              "name": "drop_even",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "drop even fields"
            },
            {
              "name": "drop_odd",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "drop odd fields"
            },
            {
              "name": "pad",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "pad alternate lines with black"
            },
            {
              "name": "interleave_top",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave top and bottom fields"
            },
            {
              "name": "interleave_bottom",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interleave bottom and top fields"
            },
            {
              "name": "interlacex2",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "interlace fields from two consecutive frames"
            },
            {
              "name": "mergex2",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "merge fields keeping same frame rate"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tlut2",
      "label": "Compute and apply a lookup table from two successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "c0",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #0 expression (default \"x\")"
        },
        {
          "name": "c1",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #1 expression (default \"x\")"
        },
        {
          "name": "c2",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #2 expression (default \"x\")"
        },
        {
          "name": "c3",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set component #3 expression (default \"x\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tmedian",
      "label": "Pick median pixels from successive frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set median filter radius (from 1 to 127) (default 1)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "percentile",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set percentile (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tmidequalizer",
      "label": "Apply Temporal Midway Equalization.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set radius (from 1 to 127) (default 5)"
        },
        {
          "name": "sigma",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sigma (from 0 to 1) (default 0.5)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tmix",
      "label": "Mix successive video frames.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "frames",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of successive frames to mix (from 1 to 128) (default 3)"
        },
        {
          "name": "weights",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set weight for each frame (default \"1 1 1\")"
        },
        {
          "name": "scale",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set scale (from 0 to 32767) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tonemap",
      "label": "Conversion to/from different dynamic ranges.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "tonemap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "tonemap algorithm selection (from 0 to 6) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "clip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "reinhard",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "hable",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mobius",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "param",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "tonemap parameter (from DBL_MIN to DBL_MAX) (default nan)"
        },
        {
          "name": "desat",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "desaturation strength (from 0 to DBL_MAX) (default 2)"
        },
        {
          "name": "peak",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "signal peak override (from 0 to DBL_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tonemap_opencl",
      "label": "Perform HDR to SDR conversion with tonemapping.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "tonemap",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "tonemap algorithm selection (from 0 to 6) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gamma",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "clip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "reinhard",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "hable",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mobius",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "transfer",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transfer characteristic (from -1 to INT_MAX) (default bt709)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transfer characteristic (from -1 to INT_MAX) (default bt709)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "matrix",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace matrix (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace matrix (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "primaries",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color primaries (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color primaries (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color range (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color range (from -1 to INT_MAX) (default -1)",
          "values": [
            {
              "name": "tv",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "format",
          "type": "pix_fmt",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output pixel format (default none)"
        },
        {
          "name": "peak",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "signal peak override (from 0 to DBL_MAX) (default 0)"
        },
        {
          "name": "param",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "tonemap parameter (from DBL_MIN to DBL_MAX) (default nan)"
        },
        {
          "name": "desat",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "desaturation parameter (from 0 to DBL_MAX) (default 0.5)"
        },
        {
          "name": "threshold",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scene detection threshold (from 0 to DBL_MAX) (default 0.2)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tonemap_vaapi",
      "label": "VAAPI VPP for tone-mapping",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "format",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output pixel format set"
        },
        {
          "name": "matrix",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color matrix coefficient set"
        },
        {
          "name": "m",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color matrix coefficient set"
        },
        {
          "name": "primaries",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color primaries set"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color primaries set"
        },
        {
          "name": "transfer",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color transfer characteristics set"
        },
        {
          "name": "t",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output color transfer characteristics set"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "tpad",
      "label": "Temporarily pad video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "start",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of frames to delay input (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "stop",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of frames to add after input finished (from -1 to INT_MAX) (default 0)"
        },
        {
          "name": "start_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the mode of added frames to start (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "add solid-color frames"
            },
            {
              "name": "clone",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "clone first/last frame"
            }
          ]
        },
        {
          "name": "stop_mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the mode of added frames to end (from 0 to 1) (default add)",
          "values": [
            {
              "name": "add",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "add solid-color frames"
            },
            {
              "name": "clone",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "clone first/last frame"
            }
          ]
        },
        {
          "name": "start_duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the duration to delay input (default 0)"
        },
        {
          "name": "stop_duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the duration to pad input (default 0)"
        },
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color of the added frames (default \"black\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "transpose",
      "label": "Transpose input video.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "dir",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transpose direction (from 0 to 7) (default cclock_flip)",
          "values": [
            {
              "name": "cclock_flip",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise with vertical flip"
            },
            {
              "name": "clock",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise"
            },
            {
              "name": "cclock",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise"
            },
            {
              "name": "clock_flip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise with vertical flip"
            }
          ]
        },
        {
          "name": "passthrough",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "do not apply transposition if the input matches the specified geometry (from 0 to INT_MAX) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "always apply transposition"
            },
            {
              "name": "portrait",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve portrait geometry"
            },
            {
              "name": "landscape",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve landscape geometry"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "transpose_opencl",
      "label": "Transpose input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dir",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transpose direction (from 0 to 3) (default cclock_flip)",
          "values": [
            {
              "name": "cclock_flip",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise with vertical flip"
            },
            {
              "name": "clock",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise"
            },
            {
              "name": "cclock",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise"
            },
            {
              "name": "clock_flip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise with vertical flip"
            }
          ]
        },
        {
          "name": "passthrough",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "do not apply transposition if the input matches the specified geometry (from 0 to INT_MAX) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "always apply transposition"
            },
            {
              "name": "portrait",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve portrait geometry"
            },
            {
              "name": "landscape",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve landscape geometry"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "transpose_vaapi",
      "label": "VAAPI VPP for transpose",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dir",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transpose direction (from 0 to 6) (default cclock_flip)",
          "values": [
            {
              "name": "cclock_flip",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise with vertical flip"
            },
            {
              "name": "clock",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise"
            },
            {
              "name": "cclock",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise"
            },
            {
              "name": "clock_flip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise with vertical flip"
            },
            {
              "name": "reversal",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate by half-turn"
            },
            {
              "name": "hflip",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "flip horizontally"
            },
            {
              "name": "vflip",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "flip vertically"
            }
          ]
        },
        {
          "name": "passthrough",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "do not apply transposition if the input matches the specified geometry (from 0 to INT_MAX) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "always apply transposition"
            },
            {
              "name": "portrait",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve portrait geometry"
            },
            {
              "name": "landscape",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "preserve landscape geometry"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "trim",
      "label": "Pick one continuous section from the input, drop the rest.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "start",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be passed (default INT64_MAX)"
        },
        {
          "name": "starti",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be passed (default INT64_MAX)"
        },
        {
          "name": "end",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (default INT64_MAX)"
        },
        {
          "name": "endi",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (default INT64_MAX)"
        },
        {
          "name": "start_pts",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be passed (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "end_pts",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Timestamp of the first frame that should be dropped again (from I64_MIN to I64_MAX) (default I64_MIN)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Maximum duration of the output (default 0)"
        },
        {
          "name": "durationi",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Maximum duration of the output (default 0)"
        },
        {
          "name": "start_frame",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of the first frame that should be passed to the output (from -1 to I64_MAX) (default -1)"
        },
        {
          "name": "end_frame",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Number of the first frame that should be dropped again (from 0 to I64_MAX) (default I64_MAX)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "unpremultiply",
      "label": "UnPreMultiply first stream with first plane of second stream.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes (from 0 to 15) (default 15)"
        },
        {
          "name": "inplace",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable inplace mode (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "unsharp",
      "label": "Sharpen or blur the input video.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "luma_msize_x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma matrix horizontal size (from 3 to 23) (default 5)"
        },
        {
          "name": "lx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma matrix horizontal size (from 3 to 23) (default 5)"
        },
        {
          "name": "luma_msize_y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma matrix vertical size (from 3 to 23) (default 5)"
        },
        {
          "name": "ly",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma matrix vertical size (from 3 to 23) (default 5)"
        },
        {
          "name": "luma_amount",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma effect strength (from -2 to 5) (default 1)"
        },
        {
          "name": "la",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set luma effect strength (from -2 to 5) (default 1)"
        },
        {
          "name": "chroma_msize_x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma matrix horizontal size (from 3 to 23) (default 5)"
        },
        {
          "name": "cx",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma matrix horizontal size (from 3 to 23) (default 5)"
        },
        {
          "name": "chroma_msize_y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma matrix vertical size (from 3 to 23) (default 5)"
        },
        {
          "name": "cy",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma matrix vertical size (from 3 to 23) (default 5)"
        },
        {
          "name": "chroma_amount",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma effect strength (from -2 to 5) (default 0)"
        },
        {
          "name": "ca",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set chroma effect strength (from -2 to 5) (default 0)"
        },
        {
          "name": "opencl",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ignored (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "unsharp_opencl",
      "label": "Apply unsharp mask to input video",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "luma_msize_x",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma mask horizontal diameter (pixels) (from 1 to 23) (default 5)"
        },
        {
          "name": "lx",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma mask horizontal diameter (pixels) (from 1 to 23) (default 5)"
        },
        {
          "name": "luma_msize_y",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma mask vertical diameter (pixels) (from 1 to 23) (default 5)"
        },
        {
          "name": "ly",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma mask vertical diameter (pixels) (from 1 to 23) (default 5)"
        },
        {
          "name": "luma_amount",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma amount (multiplier) (from -10 to 10) (default 1)"
        },
        {
          "name": "la",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set luma amount (multiplier) (from -10 to 10) (default 1)"
        },
        {
          "name": "chroma_msize_x",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma mask horizontal diameter (pixels after subsampling) (from 1 to 23) (default 5)"
        },
        {
          "name": "cx",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma mask horizontal diameter (pixels after subsampling) (from 1 to 23) (default 5)"
        },
        {
          "name": "chroma_msize_y",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma mask vertical diameter (pixels after subsampling) (from 1 to 23) (default 5)"
        },
        {
          "name": "cy",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma mask vertical diameter (pixels after subsampling) (from 1 to 23) (default 5)"
        },
        {
          "name": "chroma_amount",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma amount (multiplier) (from -10 to 10) (default 0)"
        },
        {
          "name": "ca",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set chroma amount (multiplier) (from -10 to 10) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "untile",
      "label": "Untile a frame into a sequence of frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "layout",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set grid size (default \"6x5\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "uspp",
      "label": "Apply Ultra Simple / Slow Post-processing filter.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "quality",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set quality (from 0 to 8) (default 3)"
        },
        {
          "name": "qp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force a constant quantizer parameter (from 0 to 63) (default 0)"
        },
        {
          "name": "use_bframe_qp",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "use B-frames' QP (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "v360",
      "label": "Convert 360 projection of video.",
      "timeline": false,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "input",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input projection (from 0 to 23) (default e)",
          "values": [
            {
              "name": "e",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equirectangular"
            },
            {
              "name": "equirect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equirectangular"
            },
            {
              "name": "c3x2",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 3x2"
            },
            {
              "name": "c6x1",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 6x1"
            },
            {
              "name": "eac",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equi-angular cubemap"
            },
            {
              "name": "dfisheye",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "dual fisheye"
            },
            {
              "name": "flat",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "rectilinear",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "gnomonic",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "barrel",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel facebook's 360 format"
            },
            {
              "name": "fb",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel facebook's 360 format"
            },
            {
              "name": "c1x6",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 1x6"
            },
            {
              "name": "sg",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "stereographic"
            },
            {
              "name": "mercator",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mercator"
            },
            {
              "name": "ball",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ball"
            },
            {
              "name": "hammer",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hammer"
            },
            {
              "name": "sinusoidal",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "sinusoidal"
            },
            {
              "name": "fisheye",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fisheye"
            },
            {
              "name": "pannini",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "pannini"
            },
            {
              "name": "cylindrical",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cylindrical"
            },
            {
              "name": "tetrahedron",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "tetrahedron"
            },
            {
              "name": "barrelsplit",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel split facebook's 360 format"
            },
            {
              "name": "tsp",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "truncated square pyramid"
            },
            {
              "name": "hequirect",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "half equirectangular"
            },
            {
              "name": "he",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "half equirectangular"
            },
            {
              "name": "equisolid",
              "value": "21",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equisolid"
            },
            {
              "name": "og",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "orthographic"
            },
            {
              "name": "octahedron",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "octahedron"
            }
          ]
        },
        {
          "name": "output",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output projection (from 0 to 23) (default c3x2)",
          "values": [
            {
              "name": "e",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equirectangular"
            },
            {
              "name": "equirect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equirectangular"
            },
            {
              "name": "c3x2",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 3x2"
            },
            {
              "name": "c6x1",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 6x1"
            },
            {
              "name": "eac",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equi-angular cubemap"
            },
            {
              "name": "dfisheye",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "dual fisheye"
            },
            {
              "name": "flat",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "rectilinear",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "gnomonic",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "regular video"
            },
            {
              "name": "barrel",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel facebook's 360 format"
            },
            {
              "name": "fb",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel facebook's 360 format"
            },
            {
              "name": "c1x6",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubemap 1x6"
            },
            {
              "name": "sg",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "stereographic"
            },
            {
              "name": "mercator",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mercator"
            },
            {
              "name": "ball",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "ball"
            },
            {
              "name": "hammer",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hammer"
            },
            {
              "name": "sinusoidal",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "sinusoidal"
            },
            {
              "name": "fisheye",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fisheye"
            },
            {
              "name": "pannini",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "pannini"
            },
            {
              "name": "cylindrical",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cylindrical"
            },
            {
              "name": "perspective",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "perspective"
            },
            {
              "name": "tetrahedron",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "tetrahedron"
            },
            {
              "name": "barrelsplit",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "barrel split facebook's 360 format"
            },
            {
              "name": "tsp",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "truncated square pyramid"
            },
            {
              "name": "hequirect",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "half equirectangular"
            },
            {
              "name": "he",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "half equirectangular"
            },
            {
              "name": "equisolid",
              "value": "21",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "equisolid"
            },
            {
              "name": "og",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "orthographic"
            },
            {
              "name": "octahedron",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "octahedron"
            }
          ]
        },
        {
          "name": "interp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set interpolation method (from 0 to 7) (default line)",
          "values": [
            {
              "name": "near",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest neighbour"
            },
            {
              "name": "nearest",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nearest neighbour"
            },
            {
              "name": "line",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bilinear interpolation"
            },
            {
              "name": "lagrange9",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "lagrange9 interpolation"
            },
            {
              "name": "cube",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bicubic interpolation"
            },
            {
              "name": "cubic",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bicubic interpolation"
            },
            {
              "name": "lanc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "lanczos interpolation"
            },
            {
              "name": "lanczos",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "lanczos interpolation"
            },
            {
              "name": "sp16",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "spline16 interpolation"
            },
            {
              "name": "spline16",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "spline16 interpolation"
            },
            {
              "name": "gauss",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "gaussian interpolation"
            },
            {
              "name": "gaussian",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "gaussian interpolation"
            },
            {
              "name": "mitchell",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mitchell interpolation"
            }
          ]
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output width (from 0 to 32767) (default 0)"
        },
        {
          "name": "h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output height (from 0 to 32767) (default 0)"
        },
        {
          "name": "in_stereo",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input stereo format (from 0 to 2) (default 2d)",
          "values": [
            {
              "name": "2d",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2d mono"
            },
            {
              "name": "sbs",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side"
            },
            {
              "name": "tb",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "top bottom"
            }
          ]
        },
        {
          "name": "out_stereo",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output stereo format (from 0 to 2) (default 2d)",
          "values": [
            {
              "name": "2d",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "2d mono"
            },
            {
              "name": "sbs",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "side by side"
            },
            {
              "name": "tb",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "top bottom"
            }
          ]
        },
        {
          "name": "in_forder",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input cubemap face order (default \"rludfb\")"
        },
        {
          "name": "out_forder",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output cubemap face order (default \"rludfb\")"
        },
        {
          "name": "in_frot",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "input cubemap face rotation (default \"000000\")"
        },
        {
          "name": "out_frot",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output cubemap face rotation (default \"000000\")"
        },
        {
          "name": "in_pad",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "percent input cubemap pads (from 0 to 0.1) (default 0)"
        },
        {
          "name": "out_pad",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "percent output cubemap pads (from 0 to 0.1) (default 0)"
        },
        {
          "name": "fin_pad",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "fixed input cubemap pads (from 0 to 100) (default 0)"
        },
        {
          "name": "fout_pad",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "fixed output cubemap pads (from 0 to 100) (default 0)"
        },
        {
          "name": "yaw",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "yaw rotation (from -180 to 180) (default 0)"
        },
        {
          "name": "pitch",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "pitch rotation (from -180 to 180) (default 0)"
        },
        {
          "name": "roll",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "roll rotation (from -180 to 180) (default 0)"
        },
        {
          "name": "rorder",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "rotation order (default \"ypr\")"
        },
        {
          "name": "h_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "output horizontal field of view (from 1e-05 to 360) (default 90)"
        },
        {
          "name": "v_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "output vertical field of view (from 1e-05 to 360) (default 45)"
        },
        {
          "name": "d_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "output diagonal field of view (from 0 to 360) (default 0)"
        },
        {
          "name": "h_flip",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "flip out video horizontally (default false)"
        },
        {
          "name": "v_flip",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "flip out video vertically (default false)"
        },
        {
          "name": "d_flip",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "flip out video indepth (default false)"
        },
        {
          "name": "ih_flip",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "flip in video horizontally (default false)"
        },
        {
          "name": "iv_flip",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "flip in video vertically (default false)"
        },
        {
          "name": "in_trans",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "transpose video input (default false)"
        },
        {
          "name": "out_trans",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "transpose video output (default false)"
        },
        {
          "name": "ih_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "input horizontal field of view (from 1e-05 to 360) (default 90)"
        },
        {
          "name": "iv_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "input vertical field of view (from 1e-05 to 360) (default 45)"
        },
        {
          "name": "id_fov",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "input diagonal field of view (from 0 to 360) (default 0)"
        },
        {
          "name": "alpha_mask",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "build mask in alpha plane (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vaguedenoiser",
      "label": "Apply a Wavelet based Denoiser.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "threshold",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filtering strength (from 0 to DBL_MAX) (default 2)"
        },
        {
          "name": "method",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filtering method (from 0 to 2) (default garrote)",
          "values": [
            {
              "name": "hard",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hard thresholding"
            },
            {
              "name": "soft",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "soft thresholding"
            },
            {
              "name": "garrote",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "garrote thresholding"
            }
          ]
        },
        {
          "name": "nsteps",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of steps (from 1 to 32) (default 6)"
        },
        {
          "name": "percent",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set percent of full denoising (from 0 to 100) (default 85)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set threshold type (from 0 to 1) (default universal)",
          "values": [
            {
              "name": "universal",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "universal (VisuShrink)"
            },
            {
              "name": "bayes",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bayes (BayesShrink)"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vectorscope",
      "label": "Video vectorscope.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set vectorscope mode (from 0 to 5) (default gray)",
          "values": [
            {
              "name": "gray",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tint",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color2",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color3",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color4",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color5",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set vectorscope mode (from 0 to 5) (default gray)",
          "values": [
            {
              "name": "gray",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tint",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color2",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color3",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color4",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color5",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "x",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color component on X axis (from 0 to 2) (default 1)"
        },
        {
          "name": "y",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color component on Y axis (from 0 to 2) (default 2)"
        },
        {
          "name": "intensity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set intensity (from 0 to 1) (default 0.004)"
        },
        {
          "name": "i",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set intensity (from 0 to 1) (default 0.004)"
        },
        {
          "name": "envelope",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "instant",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak+instant",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "e",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "instant",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak+instant",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "graticule",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "green",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "invert",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "g",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "green",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "invert",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule flags (default name)",
          "values": [
            {
              "name": "white",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw white point"
            },
            {
              "name": "black",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw black point"
            },
            {
              "name": "name",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw point name"
            }
          ]
        },
        {
          "name": "f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule flags (default name)",
          "values": [
            {
              "name": "white",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw white point"
            },
            {
              "name": "black",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw black point"
            },
            {
              "name": "name",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw point name"
            }
          ]
        },
        {
          "name": "bgopacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.3)"
        },
        {
          "name": "b",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.3)"
        },
        {
          "name": "lthreshold",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set low threshold (from 0 to 1) (default 0)"
        },
        {
          "name": "l",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set low threshold (from 0 to 1) (default 0)"
        },
        {
          "name": "hthreshold",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set high threshold (from 0 to 1) (default 1)"
        },
        {
          "name": "h",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set high threshold (from 0 to 1) (default 1)"
        },
        {
          "name": "colorspace",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace (from 0 to 2) (default auto)",
          "values": [
            {
              "name": "auto",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "tint0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st tint (from -1 to 1) (default 0)"
        },
        {
          "name": "t0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st tint (from -1 to 1) (default 0)"
        },
        {
          "name": "tint1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd tint (from -1 to 1) (default 0)"
        },
        {
          "name": "t1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd tint (from -1 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vflip",
      "label": "Flip the input video vertically.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vfrdet",
      "label": "Variable frame rate detect filter.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vibrance",
      "label": "Boost or alter saturation.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "intensity",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the intensity value (from -2 to 2) (default 0)"
        },
        {
          "name": "rbal",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red balance value (from -10 to 10) (default 1)"
        },
        {
          "name": "gbal",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green balance value (from -10 to 10) (default 1)"
        },
        {
          "name": "bbal",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue balance value (from -10 to 10) (default 1)"
        },
        {
          "name": "rlum",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the red luma coefficient (from 0 to 1) (default 0.072186)"
        },
        {
          "name": "glum",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the green luma coefficient (from 0 to 1) (default 0.715158)"
        },
        {
          "name": "blum",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set the blue luma coefficient (from 0 to 1) (default 0.212656)"
        },
        {
          "name": "alternate",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "use alternate colors (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vidstabdetect",
      "label": "Extract relative transformations, pass 1 of 2 for stabilization (see vidstabtransform for pass 2).",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "result",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "path to the file used to write the transforms (default \"transforms.trf\")"
        },
        {
          "name": "shakiness",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "how shaky is the video and how quick is the camera? 1: little (fast) 10: very strong/quick (slow) (from 1 to 10) (default 5)"
        },
        {
          "name": "accuracy",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(>=shakiness) 1: low 15: high (slow) (from 1 to 15) (default 15)"
        },
        {
          "name": "stepsize",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "region around minimum is scanned with 1 pixel resolution (from 1 to 32) (default 6)"
        },
        {
          "name": "mincontrast",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "below this contrast a field is discarded (0-1) (from 0 to 1) (default 0.25)"
        },
        {
          "name": "show",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "0: draw nothing; 1,2: show fields and transforms (from 0 to 2) (default 0)"
        },
        {
          "name": "tripod",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "virtual tripod mode (if >0): motion is compared to a reference reference frame (frame # is the value) (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vidstabtransform",
      "label": "Transform the frames, pass 2 of 2 for stabilization (see vidstabdetect for pass 1).",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "input",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set path to the file storing the transforms (default \"transforms.trf\")"
        },
        {
          "name": "smoothing",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of frames*2 + 1 used for lowpass filtering (from 0 to 1000) (default 15)"
        },
        {
          "name": "optalgo",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set camera path optimization algo (from 0 to 2) (default opt)",
          "values": [
            {
              "name": "opt",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "global optimization"
            },
            {
              "name": "gauss",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "gaussian kernel"
            },
            {
              "name": "avg",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "simple averaging on motion"
            }
          ]
        },
        {
          "name": "maxshift",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximal number of pixels to translate image (from -1 to 500) (default -1)"
        },
        {
          "name": "maxangle",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximal angle in rad to rotate image (from -1 to 3.14) (default -1)"
        },
        {
          "name": "crop",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cropping mode (from 0 to 1) (default keep)",
          "values": [
            {
              "name": "keep",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "keep border"
            },
            {
              "name": "black",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "black border"
            }
          ]
        },
        {
          "name": "invert",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "invert transforms (from 0 to 1) (default 0)"
        },
        {
          "name": "relative",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "consider transforms as relative (from 0 to 1) (default 1)"
        },
        {
          "name": "zoom",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set percentage to zoom (>0: zoom in, <0: zoom out (from -100 to 100) (default 0)"
        },
        {
          "name": "optzoom",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set optimal zoom (0: nothing, 1: optimal static zoom, 2: optimal dynamic zoom) (from 0 to 2) (default 1)"
        },
        {
          "name": "zoomspeed",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "for adative zoom: percent to zoom maximally each frame (from 0 to 5) (default 0.25)"
        },
        {
          "name": "interpol",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set type of interpolation (from 0 to 3) (default bilinear)",
          "values": [
            {
              "name": "no",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "no interpolation"
            },
            {
              "name": "linear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear (horizontal)"
            },
            {
              "name": "bilinear",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bi-linear"
            },
            {
              "name": "bicubic",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bi-cubic"
            }
          ]
        },
        {
          "name": "tripod",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable virtual tripod mode (same as relative=0:smoothing=0) (default false)"
        },
        {
          "name": "debug",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enable debug mode and writer global motions information to file (default false)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vif",
      "label": "Calculate the VIF between two video streams.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vignette",
      "label": "Make or reverse a vignette effect.",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "angle",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set lens angle (default \"PI/5\")"
        },
        {
          "name": "a",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set lens angle (default \"PI/5\")"
        },
        {
          "name": "x0",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set circle center position on x-axis (default \"w/2\")"
        },
        {
          "name": "y0",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set circle center position on y-axis (default \"h/2\")"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set forward/backward mode (from 0 to 1) (default forward)",
          "values": [
            {
              "name": "forward",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "backward",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "eval",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify when to evaluate expressions (from 0 to 1) (default init)",
          "values": [
            {
              "name": "init",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions once during initialization"
            },
            {
              "name": "frame",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "eval expressions for each frame"
            }
          ]
        },
        {
          "name": "dither",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set dithering (default true)"
        },
        {
          "name": "aspect",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set aspect ratio (from 0 to DBL_MAX) (default 1/1)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vmafmotion",
      "label": "Calculate the VMAF Motion score.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "stats_file",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set file where to store per-frame difference information"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "reference"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vpp_qsv",
      "label": "Quick Sync Video VPP.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "deinterlace",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "deinterlace mode: 0=off, 1=bob, 2=advanced (from 0 to 2) (default 0)",
          "values": [
            {
              "name": "bob",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bob deinterlace mode."
            },
            {
              "name": "advanced",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Advanced deinterlace mode."
            }
          ]
        },
        {
          "name": "denoise",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "denoise level [0, 100] (from 0 to 100) (default 0)"
        },
        {
          "name": "detail",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "enhancement level [0, 100] (from 0 to 100) (default 0)"
        },
        {
          "name": "framerate",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "output framerate (from 0 to DBL_MAX) (default 0/1)"
        },
        {
          "name": "procamp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Enable ProcAmp (from 0 to 1) (default 0)"
        },
        {
          "name": "hue",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ProcAmp hue (from -180 to 180) (default 0)"
        },
        {
          "name": "saturation",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ProcAmp saturation (from 0 to 10) (default 1)"
        },
        {
          "name": "contrast",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ProcAmp contrast (from 0 to 10) (default 1)"
        },
        {
          "name": "brightness",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "ProcAmp brightness (from -100 to 100) (default 0)"
        },
        {
          "name": "transpose",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transpose direction (from -1 to 6) (default -1)",
          "values": [
            {
              "name": "cclock_hflip",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise with horizontal flip"
            },
            {
              "name": "clock",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise"
            },
            {
              "name": "cclock",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate counter-clockwise"
            },
            {
              "name": "clock_hflip",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate clockwise with horizontal flip"
            },
            {
              "name": "reversal",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rotate by half-turn"
            },
            {
              "name": "hflip",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "flip horizontally"
            },
            {
              "name": "vflip",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "flip vertically"
            }
          ]
        },
        {
          "name": "cw",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the width crop area expression (default \"iw\")"
        },
        {
          "name": "ch",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the height crop area expression (default \"ih\")"
        },
        {
          "name": "cx",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x crop area expression (default \"(in_w-out_w)/2\")"
        },
        {
          "name": "cy",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y crop area expression (default \"(in_h-out_h)/2\")"
        },
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video width (default \"cw\")"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video width (default \"cw\")"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video height (default \"w*ch/cw\")"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output video height (default \"w*ch/cw\")"
        },
        {
          "name": "format",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Output pixel format (default \"same\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "vstack",
      "label": "Stack video inputs vertically.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 2 to INT_MAX) (default 2)"
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "w3fdif",
      "label": "Apply Martin Weston three field deinterlace.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "filter",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the filter (from 0 to 1) (default complex)",
          "values": [
            {
              "name": "simple",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            },
            {
              "name": "complex",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the interlacing mode (from 0 to 1) (default field)",
          "values": [
            {
              "name": "frame",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "send one frame for each frame"
            },
            {
              "name": "field",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "send one frame for each field"
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify the assumed picture field parity (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "auto detect parity"
            }
          ]
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "specify which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V",
                "T"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "waveform",
      "label": "Video waveform monitor.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default column)",
          "values": [
            {
              "name": "row",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "column",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default column)",
          "values": [
            {
              "name": "row",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "column",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "intensity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set intensity (from 0 to 1) (default 0.04)"
        },
        {
          "name": "i",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set intensity (from 0 to 1) (default 0.04)"
        },
        {
          "name": "mirror",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mirroring (default true)"
        },
        {
          "name": "r",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mirroring (default true)"
        },
        {
          "name": "display",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default stack)",
          "values": [
            {
              "name": "overlay",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "stack",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "parade",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "components",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set components to display (from 1 to 15) (default 1)"
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set components to display (from 1 to 15) (default 1)"
        },
        {
          "name": "envelope",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope to display (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "instant",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak+instant",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "e",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set envelope to display (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "instant",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "peak+instant",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "filter",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter (from 0 to 7) (default lowpass)",
          "values": [
            {
              "name": "lowpass",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "flat",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "aflat",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "acolor",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "xflat",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yflat",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "f",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter (from 0 to 7) (default lowpass)",
          "values": [
            {
              "name": "lowpass",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "flat",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "aflat",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "color",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "acolor",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "xflat",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "yflat",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "graticule",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "green",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "orange",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "invert",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "g",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "green",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "orange",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "invert",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule flags (default numbers)",
          "values": [
            {
              "name": "numbers",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw numbers"
            },
            {
              "name": "dots",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw dots instead of lines"
            }
          ]
        },
        {
          "name": "fl",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graticule flags (default numbers)",
          "values": [
            {
              "name": "numbers",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw numbers"
            },
            {
              "name": "dots",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw dots instead of lines"
            }
          ]
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale (from 0 to 2) (default digital)",
          "values": [
            {
              "name": "digital",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "millivolts",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ire",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale (from 0 to 2) (default digital)",
          "values": [
            {
              "name": "digital",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "millivolts",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ire",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "bgopacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "b",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0.75)"
        },
        {
          "name": "tint0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st tint (from -1 to 1) (default 0)"
        },
        {
          "name": "t0",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st tint (from -1 to 1) (default 0)"
        },
        {
          "name": "tint1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd tint (from -1 to 1) (default 0)"
        },
        {
          "name": "t1",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd tint (from -1 to 1) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "weave",
      "label": "Weave input video fields into frames.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "first_field",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set first field (from 0 to 1) (default top)",
          "values": [
            {
              "name": "top",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set top field first"
            },
            {
              "name": "t",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set top field first"
            },
            {
              "name": "bottom",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set bottom field first"
            },
            {
              "name": "b",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set bottom field first"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "xbr",
      "label": "Scale the input using xBR algorithm.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale factor (from 2 to 4) (default 3)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "xfade",
      "label": "Cross fade one video with another video.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "transition",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade transition (from -1 to 42) (default fade)",
          "values": [
            {
              "name": "custom",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "custom transition"
            },
            {
              "name": "fade",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade transition"
            },
            {
              "name": "wipeleft",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe left transition"
            },
            {
              "name": "wiperight",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe right transition"
            },
            {
              "name": "wipeup",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe up transition"
            },
            {
              "name": "wipedown",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe down transition"
            },
            {
              "name": "slideleft",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide left transition"
            },
            {
              "name": "slideright",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide right transition"
            },
            {
              "name": "slideup",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide up transition"
            },
            {
              "name": "slidedown",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide down transition"
            },
            {
              "name": "circlecrop",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "circle crop transition"
            },
            {
              "name": "rectcrop",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rect crop transition"
            },
            {
              "name": "distance",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "distance transition"
            },
            {
              "name": "fadeblack",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fadeblack transition"
            },
            {
              "name": "fadewhite",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fadewhite transition"
            },
            {
              "name": "radial",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "radial transition"
            },
            {
              "name": "smoothleft",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smoothleft transition"
            },
            {
              "name": "smoothright",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smoothright transition"
            },
            {
              "name": "smoothup",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smoothup transition"
            },
            {
              "name": "smoothdown",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smoothdown transition"
            },
            {
              "name": "circleopen",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "circleopen transition"
            },
            {
              "name": "circleclose",
              "value": "20",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "circleclose transition"
            },
            {
              "name": "vertopen",
              "value": "21",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "vert open transition"
            },
            {
              "name": "vertclose",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "vert close transition"
            },
            {
              "name": "horzopen",
              "value": "23",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "horz open transition"
            },
            {
              "name": "horzclose",
              "value": "24",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "horz close transition"
            },
            {
              "name": "dissolve",
              "value": "25",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "dissolve transition"
            },
            {
              "name": "pixelize",
              "value": "26",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "pixelize transition"
            },
            {
              "name": "diagtl",
              "value": "27",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diag tl transition"
            },
            {
              "name": "diagtr",
              "value": "28",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diag tr transition"
            },
            {
              "name": "diagbl",
              "value": "29",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diag bl transition"
            },
            {
              "name": "diagbr",
              "value": "30",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "diag br transition"
            },
            {
              "name": "hlslice",
              "value": "31",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hl slice transition"
            },
            {
              "name": "hrslice",
              "value": "32",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hr slice transition"
            },
            {
              "name": "vuslice",
              "value": "33",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "vu slice transition"
            },
            {
              "name": "vdslice",
              "value": "34",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "vd slice transition"
            },
            {
              "name": "hblur",
              "value": "35",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "hblur transition"
            },
            {
              "name": "fadegrays",
              "value": "36",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fadegrays transition"
            },
            {
              "name": "wipetl",
              "value": "37",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe tl transition"
            },
            {
              "name": "wipetr",
              "value": "38",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe tr transition"
            },
            {
              "name": "wipebl",
              "value": "39",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe bl transition"
            },
            {
              "name": "wipebr",
              "value": "40",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe br transition"
            },
            {
              "name": "squeezeh",
              "value": "41",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "squeeze h transition"
            },
            {
              "name": "squeezev",
              "value": "42",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "squeeze v transition"
            }
          ]
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade duration (default 1)"
        },
        {
          "name": "offset",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade start relative to first input stream (default 0)"
        },
        {
          "name": "expr",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set expression for custom transition"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "xfade"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "xfade_opencl",
      "label": "Cross fade one video with another video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "transition",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade transition (from 0 to 9) (default fade)",
          "values": [
            {
              "name": "custom",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "custom transition"
            },
            {
              "name": "fade",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fade transition"
            },
            {
              "name": "wipeleft",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe left transition"
            },
            {
              "name": "wiperight",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe right transition"
            },
            {
              "name": "wipeup",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe up transition"
            },
            {
              "name": "wipedown",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "wipe down transition"
            },
            {
              "name": "slideleft",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide left transition"
            },
            {
              "name": "slideright",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide right transition"
            },
            {
              "name": "slideup",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide up transition"
            },
            {
              "name": "slidedown",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "slide down transition"
            }
          ]
        },
        {
          "name": "source",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set OpenCL program source file for custom transition"
        },
        {
          "name": "kernel",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set kernel name in program file for custom transition"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade duration (default 1)"
        },
        {
          "name": "offset",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set cross fade start relative to first input stream (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "main"
        },
        {
          "type": "video",
          "name": "xfade"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "xmedian",
      "label": "Pick median pixels from several video inputs.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 3 to 255) (default 3)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 15)"
        },
        {
          "name": "percentile",
          "type": "float",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set percentile (from 0 to 1) (default 0.5)"
        },
        {
          "name": "eof_action",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Action to take when encountering EOF from secondary input (from 0 to 2) (default repeat)",
          "values": [
            {
              "name": "repeat",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Repeat the previous frame."
            },
            {
              "name": "endall",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "End both streams."
            },
            {
              "name": "pass",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Pass through the main input."
            }
          ]
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "repeatlast",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "extend last frame of secondary streams beyond EOF (default true)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "xstack",
      "label": "Stack video inputs into custom layout.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "inputs",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of inputs (from 2 to INT_MAX) (default 2)"
        },
        {
          "name": "layout",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set custom layout"
        },
        {
          "name": "shortest",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "force termination when the shortest input terminates (default false)"
        },
        {
          "name": "fill",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the color for unused pixels (default \"none\")"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "yadif",
      "label": "Deinterlace the input image.",
      "timeline": true,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the interlacing mode (from 0 to 3) (default send_frame)",
          "values": [
            {
              "name": "send_frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each frame"
            },
            {
              "name": "send_field",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each field"
            },
            {
              "name": "send_frame_nospatial",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each frame, but skip spatial interlacing check"
            },
            {
              "name": "send_field_nospatial",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each field, but skip spatial interlacing check"
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the assumed picture field parity (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "auto detect parity"
            }
          ]
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "yadif_cuda",
      "label": "Deinterlace CUDA frames",
      "timeline": true,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the interlacing mode (from 0 to 3) (default send_frame)",
          "values": [
            {
              "name": "send_frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each frame"
            },
            {
              "name": "send_field",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each field"
            },
            {
              "name": "send_frame_nospatial",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each frame, but skip spatial interlacing check"
            },
            {
              "name": "send_field_nospatial",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "send one frame for each field, but skip spatial interlacing check"
            }
          ]
        },
        {
          "name": "parity",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the assumed picture field parity (from -1 to 1) (default auto)",
          "values": [
            {
              "name": "tff",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume top field first"
            },
            {
              "name": "bff",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "assume bottom field first"
            },
            {
              "name": "auto",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "auto detect parity"
            }
          ]
        },
        {
          "name": "deint",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify which frames to deinterlace (from 0 to 1) (default all)",
          "values": [
            {
              "name": "all",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "deinterlace all frames"
            },
            {
              "name": "interlaced",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "only deinterlace frames marked as interlaced"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "yaepblur",
      "label": "Yet another edge preserving blur filter.",
      "timeline": true,
      "slice": true,
      "command": true,
      "options": [
        {
          "name": "radius",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set window radius (from 0 to INT_MAX) (default 3)"
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set window radius (from 0 to INT_MAX) (default 3)"
        },
        {
          "name": "planes",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 1)"
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set planes to filter (from 0 to 15) (default 1)"
        },
        {
          "name": "sigma",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blur strength (from 1 to INT_MAX) (default 128)"
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set blur strength (from 1 to INT_MAX) (default 128)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "zmq",
      "label": "Receive commands through ZMQ and broker them to filters.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "bind_address",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set bind address (default \"tcp://*:5555\")"
        },
        {
          "name": "b",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set bind address (default \"tcp://*:5555\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "zoompan",
      "label": "Apply Zoom & Pan effect.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "zoom",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the zoom expression (default \"1\")"
        },
        {
          "name": "z",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the zoom expression (default \"1\")"
        },
        {
          "name": "x",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the x expression (default \"0\")"
        },
        {
          "name": "y",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the y expression (default \"0\")"
        },
        {
          "name": "d",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the duration expression (default \"90\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the output image size (default \"hd720\")"
        },
        {
          "name": "fps",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the output framerate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "zscale",
      "label": "Apply resizing, colorspace and bit depth conversion.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "w",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "width",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video width"
        },
        {
          "name": "h",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "height",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "Output video height"
        },
        {
          "name": "size",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "s",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "dither",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set dither type (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ordered",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "random",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "error_diffusion",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "d",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set dither type (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ordered",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "random",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "error_diffusion",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "filter",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter type (from 0 to 5) (default bilinear)",
          "values": [
            {
              "name": "point",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bicubic",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "spline16",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "spline36",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "lanczos",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "f",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter type (from 0 to 5) (default bilinear)",
          "values": [
            {
              "name": "point",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bilinear",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bicubic",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "spline16",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "spline36",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "lanczos",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "out_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "r",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "primaries",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color primaries (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "p",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color primaries (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "transfer",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transfer characteristic (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log100",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log316",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2084",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "arib-std-b67",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transfer characteristic (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log100",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log316",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2084",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "arib-std-b67",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "matrix",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace matrix (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_cl",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2400m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020c",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-nc",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-c",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ictcp",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set colorspace matrix (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_cl",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2400m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020c",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-nc",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-c",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ictcp",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "in_range",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rangein",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color range (from -1 to 1) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "limited",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "tv",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pc",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "primariesin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color primaries (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "pin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input color primaries (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "film",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte428",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte431",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte432",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "jedec-p22",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ebu3213",
              "value": "22",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "transferin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input transfer characteristic (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log100",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log316",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2084",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "arib-std-b67",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "tin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input transfer characteristic (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "601",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470m",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "linear",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log100",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "log316",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-10",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020-12",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2084",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-4",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "iec61966-2-1",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "arib-std-b67",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "matrixin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input colorspace matrix (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_cl",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2400m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020c",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-nc",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-c",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ictcp",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "min",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input colorspace matrix (from -1 to INT_MAX) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "2020_cl",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "unknown",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "gbr",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "smpte2400m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ycgco",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020nc",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bt2020c",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-nc",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "chroma-derived-c",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ictcp",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "chromal",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output chroma location (from -1 to 5) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "left",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "center",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "topleft",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "top",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottomleft",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottom",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "c",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set output chroma location (from -1 to 5) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "left",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "center",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "topleft",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "top",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottomleft",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottom",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "chromalin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input chroma location (from -1 to 5) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "left",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "center",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "topleft",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "top",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottomleft",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottom",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "cin",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input chroma location (from -1 to 5) (default input)",
          "values": [
            {
              "name": "input",
              "value": "-1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "left",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "center",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "topleft",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "top",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottomleft",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "bottom",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "npl",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set nominal peak luminance (from 0 to DBL_MAX) (default nan)"
        },
        {
          "name": "agamma",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "allow approximate gamma (default true)"
        },
        {
          "name": "param_a",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "parameter A, which is parameter \"b\" for bicubic, and the number of filter taps for lanczos (from -DBL_MAX to DBL_MAX) (default nan)"
        },
        {
          "name": "param_b",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "parameter B, which is parameter \"c\" for bicubic (from -DBL_MAX to DBL_MAX) (default nan)"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "allrgb",
      "label": "Generate all RGB colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "allyuv",
      "label": "Generate all yuv colors.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "cellauto",
      "label": "Create pattern generated by an elementary cellular automaton.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "read initial pattern from file"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "read initial pattern from file"
        },
        {
          "name": "pattern",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set initial pattern"
        },
        {
          "name": "p",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set initial pattern"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "rule",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rule (from 0 to 255) (default 110)"
        },
        {
          "name": "random_fill_ratio",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fill ratio for filling initial grid randomly (from 0 to 1) (default 0.618034)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fill ratio for filling initial grid randomly (from 0 to 1) (default 0.618034)"
        },
        {
          "name": "random_seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed for filling the initial grid randomly (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed for filling the initial grid randomly (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "scroll",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "scroll pattern downward (default true)"
        },
        {
          "name": "start_full",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "start filling the whole video (default false)"
        },
        {
          "name": "full",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "start filling the whole video (default true)"
        },
        {
          "name": "stitch",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "stitch boundaries (default true)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "color",
      "label": "Provide an uniformly colored input.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "color",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color (default \"black\")"
        },
        {
          "name": "c",
          "type": "color",
          "ctx": [
            "F",
            "V",
            "T"
          ],
          "desc": "set color (default \"black\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "frei0r_src",
      "label": "Generate a frei0r source.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Dimensions of the generated video. (default \"320x240\")"
        },
        {
          "name": "framerate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(default \"25\")"
        },
        {
          "name": "filter_name",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": ""
        },
        {
          "name": "filter_params",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": ""
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "gradients",
      "label": "Draw a gradients.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "c0",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st color (default \"random\")"
        },
        {
          "name": "c1",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd color (default \"random\")"
        },
        {
          "name": "c2",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3rd color (default \"random\")"
        },
        {
          "name": "c3",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 4th color (default \"random\")"
        },
        {
          "name": "c4",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 5th color (default \"random\")"
        },
        {
          "name": "c5",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 6th color (default \"random\")"
        },
        {
          "name": "c6",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 7th color (default \"random\")"
        },
        {
          "name": "c7",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 8th color (default \"random\")"
        },
        {
          "name": "x0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gradient line source x0 (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "y0",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gradient line source y0 (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "x1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gradient line destination x1 (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "y1",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gradient line destination y1 (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "nb_colors",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of colors (from 2 to 8) (default 2)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the number of colors (from 2 to 8) (default 2)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "speed",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set gradients rotation speed (from 1e-05 to 1) (default 0.01)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "haldclutsrc",
      "label": "Provide an identity Hald CLUT.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "level",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set level (from 2 to 16) (default 6)"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "life",
      "label": "Create life.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source file"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set source file"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "rule",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set rule (default \"B3/S23\")"
        },
        {
          "name": "random_fill_ratio",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fill ratio for filling initial grid randomly (from 0 to 1) (default 0.618034)"
        },
        {
          "name": "ratio",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fill ratio for filling initial grid randomly (from 0 to 1) (default 0.618034)"
        },
        {
          "name": "random_seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed for filling the initial grid randomly (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed for filling the initial grid randomly (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "stitch",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "stitch boundaries (default true)"
        },
        {
          "name": "mold",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mold speed for dead cells (from 0 to 255) (default 0)"
        },
        {
          "name": "life_color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set life color (default \"white\")"
        },
        {
          "name": "death_color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set death color (default \"black\")"
        },
        {
          "name": "mold_color",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mold color (default \"black\")"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mandelbrot",
      "label": "Render a Mandelbrot fractal.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "maxiter",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set max iterations number (from 1 to INT_MAX) (default 7189)"
        },
        {
          "name": "start_x",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the initial x position (from -100 to 100) (default -0.743644)"
        },
        {
          "name": "start_y",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the initial y position (from -100 to 100) (default -0.131826)"
        },
        {
          "name": "start_scale",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the initial scale value (from 0 to FLT_MAX) (default 3)"
        },
        {
          "name": "end_scale",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the terminal scale value (from 0 to FLT_MAX) (default 0.3)"
        },
        {
          "name": "end_pts",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the terminal pts value (from 0 to I64_MAX) (default 400)"
        },
        {
          "name": "bailout",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the bailout value (from 0 to FLT_MAX) (default 10)"
        },
        {
          "name": "morphxf",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set morph x frequency (from -FLT_MAX to FLT_MAX) (default 0.01)"
        },
        {
          "name": "morphyf",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set morph y frequency (from -FLT_MAX to FLT_MAX) (default 0.0123)"
        },
        {
          "name": "morphamp",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set morph amplitude (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        {
          "name": "outer",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set outer coloring mode (from 0 to INT_MAX) (default normalized_iteration_count)",
          "values": [
            {
              "name": "iteration_count",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set iteration count mode"
            },
            {
              "name": "normalized_iteration_count",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set normalized iteration count mode"
            },
            {
              "name": "white",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set white mode"
            },
            {
              "name": "outz",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set outz mode"
            }
          ]
        },
        {
          "name": "inner",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set inner coloring mode (from 0 to INT_MAX) (default mincol)",
          "values": [
            {
              "name": "black",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set black mode"
            },
            {
              "name": "period",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "set period mode"
            },
            {
              "name": "convergence",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show time until convergence"
            },
            {
              "name": "mincol",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "color based on point closest to the origin of the iterations"
            }
          ]
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "mptestsrc",
      "label": "Generate various test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "test",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set test to perform (from 0 to INT_MAX) (default all)",
          "values": [
            {
              "name": "dc_luma",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "dc_chroma",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "freq_luma",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "freq_chroma",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "amp_luma",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "amp_chroma",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "cbp",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mv",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ring1",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ring2",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "t",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set test to perform (from 0 to INT_MAX) (default all)",
          "values": [
            {
              "name": "dc_luma",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "dc_chroma",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "freq_luma",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "freq_chroma",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "amp_luma",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "amp_chroma",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "cbp",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "mv",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ring1",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "ring2",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "all",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "max_frames",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set the maximum number of frames generated for each test (from 1 to I64_MAX) (default 30)"
        },
        {
          "name": "m",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Set the maximum number of frames generated for each test (from 1 to I64_MAX) (default 30)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "nullsrc",
      "label": "Null video source, return unprocessed video frames.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "openclsrc",
      "label": "Generate video using an OpenCL program",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "source",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "OpenCL program source file"
        },
        {
          "name": "kernel",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Kernel name in program"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video size"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video size"
        },
        {
          "name": "format",
          "type": "pix_fmt",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video format (default none)"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video frame rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "Video frame rate (default \"25\")"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pal75bars",
      "label": "Generate PAL 75% color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "pal100bars",
      "label": "Generate PAL 100% color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "rgbtestsrc",
      "label": "Generate RGB test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        },
        {
          "name": "complement",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set complement colors (default false)"
        },
        {
          "name": "co",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set complement colors (default false)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "sierpinski",
      "label": "Render a Sierpinski fractal.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame size (default \"640x480\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frame rate (default \"25\")"
        },
        {
          "name": "seed",
          "type": "int64",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the seed (from -1 to UINT32_MAX) (default -1)"
        },
        {
          "name": "jump",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the jump (from 1 to 10000) (default 100)"
        },
        {
          "name": "type",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fractal type (from 0 to 1) (default carpet)",
          "values": [
            {
              "name": "carpet",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "sierpinski carpet"
            },
            {
              "name": "triangle",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "sierpinski triangle"
            }
          ]
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "smptebars",
      "label": "Generate SMPTE color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "smptehdbars",
      "label": "Generate SMPTE HD color bars.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "testsrc",
      "label": "Generate test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        },
        {
          "name": "decimals",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of decimals to show (from 0 to 17) (default 0)"
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set number of decimals to show (from 0 to 17) (default 0)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "testsrc2",
      "label": "Generate another test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        },
        {
          "name": "alpha",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set global alpha (opacity) (from 0 to 255) (default 255)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "yuvtestsrc",
      "label": "Generate YUV test pattern.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"320x240\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video duration (default -0.000001)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video sample aspect ratio (from 0 to INT_MAX) (default 1/1)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "nullsink",
      "label": "Do absolutely nothing with the input video.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": []
    },
    {
      "id": "abitscope",
      "label": "Convert input audio to audio bit scope video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1024x256\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1024x256\")"
        },
        {
          "name": "colors",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channels colors (default \"red|green|blue|yellow|orange|lime|pink|magenta|brown\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "adrawgraph",
      "label": "Draw a graph using input audio metadata.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "m1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st metadata key (default \"\")"
        },
        {
          "name": "fg1",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 1st foreground color expression (default \"0xffff0000\")"
        },
        {
          "name": "m2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd metadata key (default \"\")"
        },
        {
          "name": "fg2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 2nd foreground color expression (default \"0xff00ff00\")"
        },
        {
          "name": "m3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3rd metadata key (default \"\")"
        },
        {
          "name": "fg3",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 3rd foreground color expression (default \"0xffff00ff\")"
        },
        {
          "name": "m4",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 4th metadata key (default \"\")"
        },
        {
          "name": "fg4",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set 4th foreground color expression (default \"0xffffff00\")"
        },
        {
          "name": "bg",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background color (default \"white\")"
        },
        {
          "name": "min",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimal value (from INT_MIN to INT_MAX) (default -1)"
        },
        {
          "name": "max",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set maximal value (from INT_MIN to INT_MAX) (default 1)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph mode (from 0 to 2) (default line)",
          "values": [
            {
              "name": "bar",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw bars"
            },
            {
              "name": "dot",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw dots"
            },
            {
              "name": "line",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw lines"
            }
          ]
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set slide mode (from 0 to 4) (default frame)",
          "values": [
            {
              "name": "frame",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw new frames"
            },
            {
              "name": "replace",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "replace old columns with new"
            },
            {
              "name": "scroll",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from right to left"
            },
            {
              "name": "rscroll",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from left to right"
            },
            {
              "name": "picture",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "display graph in single frame"
            }
          ]
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph size (default \"900x256\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set graph size (default \"900x256\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "agraphmonitor",
      "label": "Show various filtergraph stats.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set monitor size (default \"hd720\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set monitor size (default \"hd720\")"
        },
        {
          "name": "opacity",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "o",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video opacity (from 0 to 1) (default 0.9)"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default full)",
          "values": [
            {
              "name": "full",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "compact",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default full)",
          "values": [
            {
              "name": "full",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "compact",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "flags",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set flags (default queue)",
          "values": [
            {
              "name": "queue",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_in",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_out",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pts",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "time",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "timebase",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "format",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "size",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rate",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "eof",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "f",
          "type": "flags",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set flags (default queue)",
          "values": [
            {
              "name": "queue",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_in",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "frame_count_out",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "pts",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "time",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "timebase",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "format",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "size",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "rate",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "eof",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "ahistogram",
      "label": "Convert input audio to histogram video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "dmode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set method to display channels (from 0 to 1) (default single)",
          "values": [
            {
              "name": "single",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "all channels use single histogram"
            },
            {
              "name": "separate",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "each channel have own histogram"
            }
          ]
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"hd720\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"hd720\")"
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display scale (from 0 to 4) (default log)",
          "values": [
            {
              "name": "log",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "sqrt",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            },
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "rlog",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "reverse logarithmic"
            }
          ]
        },
        {
          "name": "ascale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amplitude scale (from 0 to 1) (default log)",
          "values": [
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            }
          ]
        },
        {
          "name": "acount",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "how much frames to accumulate (from -1 to 100) (default 1)"
        },
        {
          "name": "rheight",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set histogram ratio of window height (from 0 to 1) (default 0.1)"
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram sliding (from 0 to 1) (default replace)",
          "values": [
            {
              "name": "replace",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "replace old rows with new"
            },
            {
              "name": "scroll",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from top to bottom"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "aphasemeter",
      "label": "Convert input audio to phase meter video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"800x400\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"800x400\")"
        },
        {
          "name": "rc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set red contrast (from 0 to 255) (default 2)"
        },
        {
          "name": "gc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set green contrast (from 0 to 255) (default 7)"
        },
        {
          "name": "bc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set blue contrast (from 0 to 255) (default 1)"
        },
        {
          "name": "mpc",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set median phase color (default \"none\")"
        },
        {
          "name": "video",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video output (default true)"
        },
        {
          "name": "phasing",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mono and out-of-phase detection output (default false)"
        },
        {
          "name": "tolerance",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set phase tolerance for mono detection (from 0 to 1) (default 0)"
        },
        {
          "name": "t",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set phase tolerance for mono detection (from 0 to 1) (default 0)"
        },
        {
          "name": "angle",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set angle threshold for out-of-phase detection (from 90 to 180) (default 170)"
        },
        {
          "name": "a",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set angle threshold for out-of-phase detection (from 90 to 180) (default 170)"
        },
        {
          "name": "duration",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum mono or out-of-phase duration in seconds (default 2)"
        },
        {
          "name": "d",
          "type": "duration",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum mono or out-of-phase duration in seconds (default 2)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "avectorscope",
      "label": "Convert input audio to vectorscope video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 2) (default lissajous)",
          "values": [
            {
              "name": "lissajous",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "lissajous_xy",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "polar",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 2) (default lissajous)",
          "values": [
            {
              "name": "lissajous",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "lissajous_xy",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "polar",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"400x400\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"400x400\")"
        },
        {
          "name": "rc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set red contrast (from 0 to 255) (default 40)"
        },
        {
          "name": "gc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set green contrast (from 0 to 255) (default 160)"
        },
        {
          "name": "bc",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set blue contrast (from 0 to 255) (default 80)"
        },
        {
          "name": "ac",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set alpha contrast (from 0 to 255) (default 255)"
        },
        {
          "name": "rf",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set red fade (from 0 to 255) (default 15)"
        },
        {
          "name": "gf",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set green fade (from 0 to 255) (default 10)"
        },
        {
          "name": "bf",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set blue fade (from 0 to 255) (default 5)"
        },
        {
          "name": "af",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set alpha fade (from 0 to 255) (default 5)"
        },
        {
          "name": "zoom",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set zoom factor (from 0 to 10) (default 1)"
        },
        {
          "name": "draw",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set draw mode (from 0 to 1) (default dot)",
          "values": [
            {
              "name": "dot",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "line",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amplitude scale mode (from 0 to 3) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "sqrt",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cube root"
            },
            {
              "name": "log",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "swap",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "swap x axis with y axis (default true)"
        },
        {
          "name": "mirror",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "mirror axis (from 0 to 3) (default none)",
          "values": [
            {
              "name": "none",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "no mirror"
            },
            {
              "name": "x",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mirror x"
            },
            {
              "name": "y",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mirror y"
            },
            {
              "name": "xy",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "mirror both"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "concat",
      "label": "Concatenate audio and video streams.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "specify the number of segments (from 1 to INT_MAX) (default 2)"
        },
        {
          "name": "v",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "specify the number of video streams (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "a",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "specify the number of audio streams (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "unsafe",
          "type": "boolean",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "enable unsafe mode (default false)"
        }
      ],
      "inputs": [
        {
          "type": "dynamic"
        }
      ],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "showcqt",
      "label": "Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1920x1080\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1920x1080\")"
        },
        {
          "name": "fps",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "bar_h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bargraph height (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "axis_h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set axis height (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "sono_h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram height (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "fullhd",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fullhd size (default true)"
        },
        {
          "name": "sono_v",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram volume (default \"16\")"
        },
        {
          "name": "volume",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram volume (default \"16\")"
        },
        {
          "name": "bar_v",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bargraph volume (default \"sono_v\")"
        },
        {
          "name": "volume2",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bargraph volume (default \"sono_v\")"
        },
        {
          "name": "sono_g",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram gamma (from 1 to 7) (default 3)"
        },
        {
          "name": "gamma",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sonogram gamma (from 1 to 7) (default 3)"
        },
        {
          "name": "bar_g",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bargraph gamma (from 1 to 7) (default 1)"
        },
        {
          "name": "gamma2",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bargraph gamma (from 1 to 7) (default 1)"
        },
        {
          "name": "bar_t",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set bar transparency (from 0 to 1) (default 1)"
        },
        {
          "name": "timeclamp",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set timeclamp (from 0.002 to 1) (default 0.17)"
        },
        {
          "name": "tc",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set timeclamp (from 0.002 to 1) (default 0.17)"
        },
        {
          "name": "attack",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set attack time (from 0 to 1) (default 0)"
        },
        {
          "name": "basefreq",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set base frequency (from 10 to 100000) (default 20.0152)"
        },
        {
          "name": "endfreq",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set end frequency (from 10 to 100000) (default 20495.6)"
        },
        {
          "name": "coeffclamp",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set coeffclamp (from 0.1 to 10) (default 1)"
        },
        {
          "name": "tlength",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set tlength (default \"384*tc/(384+tc*f)\")"
        },
        {
          "name": "count",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set transform count (from 1 to 30) (default 6)"
        },
        {
          "name": "fcount",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frequency count (from 0 to 10) (default 0)"
        },
        {
          "name": "fontfile",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set axis font file"
        },
        {
          "name": "font",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set axis font"
        },
        {
          "name": "fontcolor",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set font color (default \"st(0, (midi(f)-59.5)/12);st(1, if(between(ld(0),0,1), 0.5-0.5*cos(2*PI*ld(0)), 0));r(1-ld(1)) + b(ld(1))\")"
        },
        {
          "name": "axisfile",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set axis image"
        },
        {
          "name": "axis",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw axis (default true)"
        },
        {
          "name": "text",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw axis (default true)"
        },
        {
          "name": "csp",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color space (from 0 to INT_MAX) (default unspecified)",
          "values": [
            {
              "name": "unspecified",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "unspecified"
            },
            {
              "name": "bt709",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bt709"
            },
            {
              "name": "fcc",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fcc"
            },
            {
              "name": "bt470bg",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bt470bg"
            },
            {
              "name": "smpte170m",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smpte170m"
            },
            {
              "name": "smpte240m",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "smpte240m"
            },
            {
              "name": "bt2020ncl",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "bt2020ncl"
            }
          ]
        },
        {
          "name": "cscheme",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color scheme (default \"1|0.5|0|0|0.5|1\")"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showfreqs",
      "label": "Convert input audio to a frequencies video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1024x512\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"1024x512\")"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display mode (from 0 to 2) (default bar)",
          "values": [
            {
              "name": "line",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show lines"
            },
            {
              "name": "bar",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show bars"
            },
            {
              "name": "dot",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show dots"
            }
          ]
        },
        {
          "name": "ascale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amplitude scale (from 0 to 3) (default log)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "sqrt",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            },
            {
              "name": "log",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "fscale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frequency scale (from 0 to 2) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "rlog",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "reverse logarithmic"
            }
          ]
        },
        {
          "name": "win_size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window size (from 16 to 65536) (default 2048)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window function (from 0 to 19) (default hanning)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window overlap (from 0 to 1) (default 1)"
        },
        {
          "name": "averaging",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set time averaging (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "colors",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channels colors (default \"red|green|blue|yellow|orange|lime|pink|magenta|brown\")"
        },
        {
          "name": "cmode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel mode (from 0 to 1) (default combined)",
          "values": [
            {
              "name": "combined",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show all channels in same window"
            },
            {
              "name": "separate",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show each channel in own window"
            }
          ]
        },
        {
          "name": "minamp",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set minimum amplitude (from FLT_MIN to 1e-06) (default 1e-06)"
        },
        {
          "name": "data",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set data mode (from 0 to 2) (default magnitude)",
          "values": [
            {
              "name": "magnitude",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show magnitude"
            },
            {
              "name": "phase",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show phase"
            },
            {
              "name": "delay",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "show group delay"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showspatial",
      "label": "Convert input audio to a spatial video output.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"512x512\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"512x512\")"
        },
        {
          "name": "win_size",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window size (from 1024 to 65536) (default 4096)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window function (from 0 to 19) (default hann)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window overlap (from 0 to 1) (default 0.5)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showspectrum",
      "label": "Convert input audio to a spectrum video output.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"640x512\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"640x512\")"
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set sliding mode (from 0 to 3) (default replace)",
          "values": [
            {
              "name": "replace",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "replace old columns with new"
            },
            {
              "name": "scroll",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from right to left"
            },
            {
              "name": "fullframe",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "return full frames"
            },
            {
              "name": "rscroll",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scroll from left to right"
            }
          ]
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel display mode (from 0 to 1) (default combined)",
          "values": [
            {
              "name": "combined",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "combined mode"
            },
            {
              "name": "separate",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "separate mode"
            }
          ]
        },
        {
          "name": "color",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel coloring (from 0 to 14) (default channel)",
          "values": [
            {
              "name": "channel",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "separate color for each channel"
            },
            {
              "name": "intensity",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "intensity based coloring"
            },
            {
              "name": "rainbow",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rainbow based coloring"
            },
            {
              "name": "moreland",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "moreland based coloring"
            },
            {
              "name": "nebulae",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nebulae based coloring"
            },
            {
              "name": "fire",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fire based coloring"
            },
            {
              "name": "fiery",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fiery based coloring"
            },
            {
              "name": "fruit",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fruit based coloring"
            },
            {
              "name": "cool",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cool based coloring"
            },
            {
              "name": "magma",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "magma based coloring"
            },
            {
              "name": "green",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "green based coloring"
            },
            {
              "name": "viridis",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "viridis based coloring"
            },
            {
              "name": "plasma",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "plasma based coloring"
            },
            {
              "name": "cividis",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cividis based coloring"
            },
            {
              "name": "terrain",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "terrain based coloring"
            }
          ]
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display scale (from 0 to 5) (default sqrt)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "sqrt",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            },
            {
              "name": "log",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "4thrt",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "4th root"
            },
            {
              "name": "5thrt",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "5th root"
            }
          ]
        },
        {
          "name": "fscale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frequency scale (from 0 to 1) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "saturation",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "color saturation multiplier (from -10 to 10) (default 1)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window function (from 0 to 19) (default hann)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "orientation",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set orientation (from 0 to 1) (default vertical)",
          "values": [
            {
              "name": "vertical",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "horizontal",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window overlap (from 0 to 1) (default 0)"
        },
        {
          "name": "gain",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale gain (from 0 to 128) (default 1)"
        },
        {
          "name": "data",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set data mode (from 0 to 1) (default magnitude)",
          "values": [
            {
              "name": "magnitude",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "phase",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "rotation",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "color rotation (from -1 to 1) (default 0)"
        },
        {
          "name": "start",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "start frequency (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "stop",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "stop frequency (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "fps",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"auto\")"
        },
        {
          "name": "legend",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw legend (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showspectrumpic",
      "label": "Convert input audio to a spectrum video output single picture.",
      "timeline": false,
      "slice": true,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"4096x2048\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"4096x2048\")"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel display mode (from 0 to 1) (default combined)",
          "values": [
            {
              "name": "combined",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "combined mode"
            },
            {
              "name": "separate",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "separate mode"
            }
          ]
        },
        {
          "name": "color",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel coloring (from 0 to 14) (default intensity)",
          "values": [
            {
              "name": "channel",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "separate color for each channel"
            },
            {
              "name": "intensity",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "intensity based coloring"
            },
            {
              "name": "rainbow",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rainbow based coloring"
            },
            {
              "name": "moreland",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "moreland based coloring"
            },
            {
              "name": "nebulae",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "nebulae based coloring"
            },
            {
              "name": "fire",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fire based coloring"
            },
            {
              "name": "fiery",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fiery based coloring"
            },
            {
              "name": "fruit",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "fruit based coloring"
            },
            {
              "name": "cool",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cool based coloring"
            },
            {
              "name": "magma",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "magma based coloring"
            },
            {
              "name": "green",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "green based coloring"
            },
            {
              "name": "viridis",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "viridis based coloring"
            },
            {
              "name": "plasma",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "plasma based coloring"
            },
            {
              "name": "cividis",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cividis based coloring"
            },
            {
              "name": "terrain",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "terrain based coloring"
            }
          ]
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display scale (from 0 to 5) (default log)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "sqrt",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            },
            {
              "name": "log",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "4thrt",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "4th root"
            },
            {
              "name": "5thrt",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "5th root"
            }
          ]
        },
        {
          "name": "fscale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set frequency scale (from 0 to 1) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "saturation",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "color saturation multiplier (from -10 to 10) (default 1)"
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set window function (from 0 to 19) (default hann)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Hamming"
            },
            {
              "name": "blackman",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman"
            },
            {
              "name": "welch",
              "value": "5",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Welch"
            },
            {
              "name": "flattop",
              "value": "6",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Flat-top"
            },
            {
              "name": "bharris",
              "value": "7",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Harris"
            },
            {
              "name": "bnuttall",
              "value": "8",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Blackman-Nuttall"
            },
            {
              "name": "bhann",
              "value": "11",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bartlett-Hann"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Sine"
            },
            {
              "name": "nuttall",
              "value": "10",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Nuttall"
            },
            {
              "name": "lanczos",
              "value": "12",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Lanczos"
            },
            {
              "name": "gauss",
              "value": "13",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Gauss"
            },
            {
              "name": "tukey",
              "value": "14",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Tukey"
            },
            {
              "name": "dolph",
              "value": "15",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Dolph-Chebyshev"
            },
            {
              "name": "cauchy",
              "value": "16",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Cauchy"
            },
            {
              "name": "parzen",
              "value": "17",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Parzen"
            },
            {
              "name": "poisson",
              "value": "18",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Poisson"
            },
            {
              "name": "bohman",
              "value": "19",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "Bohman"
            }
          ]
        },
        {
          "name": "orientation",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set orientation (from 0 to 1) (default vertical)",
          "values": [
            {
              "name": "vertical",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "horizontal",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        },
        {
          "name": "gain",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set scale gain (from 0 to 128) (default 1)"
        },
        {
          "name": "legend",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw legend (default true)"
        },
        {
          "name": "rotation",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "color rotation (from -1 to 1) (default 0)"
        },
        {
          "name": "start",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "start frequency (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "stop",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "stop frequency (from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showvolume",
      "label": "Convert input audio volume to video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "b",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set border width (from 0 to 5) (default 1)"
        },
        {
          "name": "w",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel width (from 80 to 8192) (default 400)"
        },
        {
          "name": "h",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channel height (from 1 to 900) (default 20)"
        },
        {
          "name": "f",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set fade (from 0 to 1) (default 0.95)"
        },
        {
          "name": "c",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set volume color expression (default \"PEAK*255+floor((1-PEAK)*255)*256+0xff000000\")"
        },
        {
          "name": "t",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "display channel names (default true)"
        },
        {
          "name": "v",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "display volume value (default true)"
        },
        {
          "name": "dm",
          "type": "double",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "duration for max value display (from 0 to 9000) (default 0)"
        },
        {
          "name": "dmc",
          "type": "color",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set color of the max value line (default \"orange\")"
        },
        {
          "name": "o",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set orientation (from 0 to 1) (default h)",
          "values": [
            {
              "name": "h",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "horizontal"
            },
            {
              "name": "v",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "vertical"
            }
          ]
        },
        {
          "name": "s",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set step size (from 0 to 5) (default 0)"
        },
        {
          "name": "p",
          "type": "float",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set background opacity (from 0 to 1) (default 0)"
        },
        {
          "name": "m",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set mode (from 0 to 1) (default p)",
          "values": [
            {
              "name": "p",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "peak"
            },
            {
              "name": "r",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "rms"
            }
          ]
        },
        {
          "name": "ds",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set display scale (from 0 to 1) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "log"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showwaves",
      "label": "Convert input audio to a video output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"600x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"600x240\")"
        },
        {
          "name": "mode",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "select display mode (from 0 to 3) (default point)",
          "values": [
            {
              "name": "point",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw a point for each sample"
            },
            {
              "name": "line",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw a line for each sample"
            },
            {
              "name": "p2p",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw a line between samples"
            },
            {
              "name": "cline",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw a centered line for each sample"
            }
          ]
        },
        {
          "name": "n",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set how many samples to show in the same point (from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "rate",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "r",
          "type": "video_rate",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video rate (default \"25\")"
        },
        {
          "name": "split_channels",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw channels separately (default false)"
        },
        {
          "name": "colors",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channels colors (default \"red|green|blue|yellow|orange|lime|pink|magenta|brown\")"
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amplitude scale (from 0 to 3) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "sqrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            }
          ]
        },
        {
          "name": "draw",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set draw mode (from 0 to 1) (default scale)",
          "values": [
            {
              "name": "scale",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scale pixel values for each drawn sample"
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw every pixel for sample directly"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "showwavespic",
      "label": "Convert input audio to a video output single picture.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"600x240\")"
        },
        {
          "name": "s",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set video size (default \"600x240\")"
        },
        {
          "name": "split_channels",
          "type": "boolean",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "draw channels separately (default false)"
        },
        {
          "name": "colors",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set channels colors (default \"red|green|blue|yellow|orange|lime|pink|magenta|brown\")"
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set amplitude scale (from 0 to 3) (default lin)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            },
            {
              "name": "sqrt",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "square root"
            },
            {
              "name": "cbrt",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "cubic root"
            }
          ]
        },
        {
          "name": "draw",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set draw mode (from 0 to 1) (default scale)",
          "values": [
            {
              "name": "scale",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "scale pixel values for each drawn sample"
            },
            {
              "name": "full",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "draw every pixel for sample directly"
            }
          ]
        },
        {
          "name": "filter",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set filter mode (from 0 to 1) (default average)",
          "values": [
            {
              "name": "average",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "use average samples"
            },
            {
              "name": "peak",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "use peak samples"
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "spectrumsynth",
      "label": "Convert input spectrum videos to audio output.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set sample rate (from 15 to INT_MAX) (default 44100)"
        },
        {
          "name": "channels",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set channels (from 1 to 8) (default 1)"
        },
        {
          "name": "scale",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input amplitude scale (from 0 to 1) (default log)",
          "values": [
            {
              "name": "lin",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "linear"
            },
            {
              "name": "log",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "logarithmic"
            }
          ]
        },
        {
          "name": "slide",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set input sliding mode (from 0 to 3) (default fullframe)",
          "values": [
            {
              "name": "replace",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "consume old columns with new"
            },
            {
              "name": "scroll",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "consume only most right column"
            },
            {
              "name": "fullframe",
              "value": "2",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "consume full frames"
            },
            {
              "name": "rscroll",
              "value": "3",
              "ctx": [
                "F",
                "V"
              ],
              "desc": "consume only most left column"
            }
          ]
        },
        {
          "name": "win_func",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window function (from 0 to 19) (default rect)",
          "values": [
            {
              "name": "rect",
              "value": "0",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Rectangular"
            },
            {
              "name": "bartlett",
              "value": "4",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Bartlett"
            },
            {
              "name": "hann",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hann"
            },
            {
              "name": "hanning",
              "value": "1",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hanning"
            },
            {
              "name": "hamming",
              "value": "2",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Hamming"
            },
            {
              "name": "sine",
              "value": "9",
              "ctx": [
                "F",
                "A"
              ],
              "desc": "Sine"
            }
          ]
        },
        {
          "name": "overlap",
          "type": "float",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set window overlap (from 0 to 1) (default 1)"
        },
        {
          "name": "orientation",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set orientation (from 0 to 1) (default vertical)",
          "values": [
            {
              "name": "vertical",
              "value": "0",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            },
            {
              "name": "horizontal",
              "value": "1",
              "ctx": [
                "F",
                "V"
              ],
              "desc": ""
            }
          ]
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "magnitude"
        },
        {
          "type": "video",
          "name": "phase"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "amovie",
      "label": "Read audio from a movie source.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": ""
        },
        {
          "name": "format_name",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set format name"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set format name"
        },
        {
          "name": "stream_index",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "si",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "seek_point",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set seekpoint (seconds) (from 0 to 9.22337e+12) (default 0)"
        },
        {
          "name": "sp",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set seekpoint (seconds) (from 0 to 9.22337e+12) (default 0)"
        },
        {
          "name": "streams",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set streams"
        },
        {
          "name": "s",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set streams"
        },
        {
          "name": "loop",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set loop count (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "discontinuity",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set discontinuity threshold (default 0)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "movie",
      "label": "Read from a movie source.",
      "timeline": false,
      "slice": false,
      "command": true,
      "options": [
        {
          "name": "filename",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": ""
        },
        {
          "name": "format_name",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set format name"
        },
        {
          "name": "f",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set format name"
        },
        {
          "name": "stream_index",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "si",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set stream index (from -1 to INT_MAX) (default -1)"
        },
        {
          "name": "seek_point",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set seekpoint (seconds) (from 0 to 9.22337e+12) (default 0)"
        },
        {
          "name": "sp",
          "type": "double",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set seekpoint (seconds) (from 0 to 9.22337e+12) (default 0)"
        },
        {
          "name": "streams",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set streams"
        },
        {
          "name": "s",
          "type": "string",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set streams"
        },
        {
          "name": "loop",
          "type": "int",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set loop count (from 0 to INT_MAX) (default 1)"
        },
        {
          "name": "discontinuity",
          "type": "duration",
          "ctx": [
            "F",
            "V",
            "A"
          ],
          "desc": "set discontinuity threshold (default 0)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "dynamic"
        }
      ]
    },
    {
      "id": "afifo",
      "label": "Buffer input frames and send them when they are requested.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "fifo",
      "label": "Buffer input images and send them when they are requested.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "abuffer",
      "label": "Buffer audio frames, and make them accessible to the filterchain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "time_base",
          "type": "rational",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from 0 to INT_MAX) (default 0/1)"
        },
        {
          "name": "sample_rate",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "sample_fmt",
          "type": "sample_fmt",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(default none)"
        },
        {
          "name": "channel_layout",
          "type": "string",
          "ctx": [
            "F",
            "A"
          ],
          "desc": ""
        },
        {
          "name": "channels",
          "type": "int",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ]
    },
    {
      "id": "buffer",
      "label": "Buffer video frames, and make them accessible to the filterchain.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "width",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "video_size",
          "type": "image_size",
          "ctx": [
            "F",
            "V"
          ],
          "desc": ""
        },
        {
          "name": "height",
          "type": "int",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to INT_MAX) (default 0)"
        },
        {
          "name": "pix_fmt",
          "type": "pix_fmt",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(default none)"
        },
        {
          "name": "sar",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "sample aspect ratio (from 0 to DBL_MAX) (default 0/1)"
        },
        {
          "name": "pixel_aspect",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "sample aspect ratio (from 0 to DBL_MAX) (default 0/1)"
        },
        {
          "name": "time_base",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to DBL_MAX) (default 0/1)"
        },
        {
          "name": "frame_rate",
          "type": "rational",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "(from 0 to DBL_MAX) (default 0/1)"
        },
        {
          "name": "sws_param",
          "type": "string",
          "ctx": [
            "F",
            "V"
          ],
          "desc": ""
        }
      ],
      "inputs": [],
      "outputs": [
        {
          "type": "video",
          "name": "default"
        }
      ]
    },
    {
      "id": "abuffersink",
      "label": "Buffer audio frames, and make them available to the end of the filter graph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "sample_fmts",
          "type": "binary",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the supported sample formats"
        },
        {
          "name": "sample_rates",
          "type": "binary",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the supported sample rates"
        },
        {
          "name": "channel_layouts",
          "type": "binary",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the supported channel layouts"
        },
        {
          "name": "channel_counts",
          "type": "binary",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "set the supported channel counts"
        },
        {
          "name": "all_channel_counts",
          "type": "boolean",
          "ctx": [
            "F",
            "A"
          ],
          "desc": "accept all channel counts (default false)"
        }
      ],
      "inputs": [
        {
          "type": "audio",
          "name": "default"
        }
      ],
      "outputs": []
    },
    {
      "id": "buffersink",
      "label": "Buffer video frames, and make them available to the end of the filter graph.",
      "timeline": false,
      "slice": false,
      "command": false,
      "options": [
        {
          "name": "pix_fmts",
          "type": "binary",
          "ctx": [
            "F",
            "V"
          ],
          "desc": "set the supported pixel formats"
        }
      ],
      "inputs": [
        {
          "type": "video",
          "name": "default"
        }
      ],
      "outputs": []
    }
  ],
  "pix_fmts": [
    {
      "id": "yuv420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "yuyv422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "bgr24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuv444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv410p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 9
    },
    {
      "id": "yuv411p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "gray",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 8
    },
    {
      "id": "monow",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 1,
      "bitsPerPixel": 1
    },
    {
      "id": "monob",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 1,
      "bitsPerPixel": 1
    },
    {
      "id": "pal8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": true,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 8
    },
    {
      "id": "yuvj420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "yuvj422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuvj444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "uyvy422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "uyyvyy411",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bgr4",
      "input": false,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "bgr4_byte",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "rgb8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "rgb4",
      "input": false,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": true,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "rgb4_byte",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 4
    },
    {
      "id": "nv12",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "nv21",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "argb",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "rgba",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "abgr",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "bgra",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "gray16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 16
    },
    {
      "id": "gray16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 16
    },
    {
      "id": "yuv440p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuvj440p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "yuva420p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 20
    },
    {
      "id": "rgb48be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "rgb48le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "rgb565be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb565le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "rgb555be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "rgb555le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "bgr565be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr565le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr555be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "bgr555le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "vaapi_moco",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "vaapi_idct",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "vaapi_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "yuv420p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv420p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 32
    },
    {
      "id": "yuv422p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 32
    },
    {
      "id": "yuv444p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuv444p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "dxva2_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "rgb444le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "rgb444be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr444le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bgr444be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "ya8",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 16
    },
    {
      "id": "bgr48be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "bgr48le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuv420p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 13
    },
    {
      "id": "yuv420p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 13
    },
    {
      "id": "yuv420p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "yuv420p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "yuv422p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv422p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv444p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "yuv444p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "yuv444p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "yuv444p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "yuv422p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv422p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "gbrp",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "gbrp9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "gbrp9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 27
    },
    {
      "id": "gbrp10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "gbrp10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "gbrp16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrp16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva422p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 24
    },
    {
      "id": "yuva444p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "yuva420p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 22
    },
    {
      "id": "yuva420p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 22
    },
    {
      "id": "yuva422p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 27
    },
    {
      "id": "yuva422p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 27
    },
    {
      "id": "yuva444p9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva444p9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva420p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 25
    },
    {
      "id": "yuva420p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 25
    },
    {
      "id": "yuva422p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 30
    },
    {
      "id": "yuva422p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 30
    },
    {
      "id": "yuva444p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva444p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva420p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva420p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "yuva422p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva422p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva444p16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "yuva444p16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "vdpau",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "xyz12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "xyz12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "nv16",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "nv20le",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "nv20be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "rgba64be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "rgba64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "bgra64be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "bgra64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "yvyu422",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "ya16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 32
    },
    {
      "id": "ya16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 2,
      "bitsPerPixel": 32
    },
    {
      "id": "gbrap",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 32
    },
    {
      "id": "gbrap16be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "gbrap16le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "qsv",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "mmal",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "d3d11va_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "cuda",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "0rgb",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "rgb0",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "0bgr",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "bgr0",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv420p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv420p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 18
    },
    {
      "id": "yuv420p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 21
    },
    {
      "id": "yuv420p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 21
    },
    {
      "id": "yuv422p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv422p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 28
    },
    {
      "id": "yuv422p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 28
    },
    {
      "id": "yuv444p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "yuv444p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "yuv444p14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "yuv444p14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "gbrp12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "gbrp12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 36
    },
    {
      "id": "gbrp14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "gbrp14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 42
    },
    {
      "id": "yuvj411p",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 12
    },
    {
      "id": "bayer_bggr8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_rggb8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_gbrg8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_grbg8",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 8
    },
    {
      "id": "bayer_bggr16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_bggr16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_rggb16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_rggb16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_gbrg16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_gbrg16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_grbg16le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "bayer_grbg16be",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 16
    },
    {
      "id": "xvmc",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "yuv440p10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv440p10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "yuv440p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "yuv440p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "ayuv64le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "ayuv64be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 64
    },
    {
      "id": "videotoolbox_vld",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "p010le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "p010be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 15
    },
    {
      "id": "gbrap12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrap12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "gbrap10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "gbrap10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 40
    },
    {
      "id": "mediacodec",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 12
    },
    {
      "id": "gray12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 12
    },
    {
      "id": "gray10be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 10
    },
    {
      "id": "gray10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 10
    },
    {
      "id": "p016le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "p016be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "d3d11",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray9be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 9
    },
    {
      "id": "gray9le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 9
    },
    {
      "id": "gbrpf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 96
    },
    {
      "id": "gbrpf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 96
    },
    {
      "id": "gbrapf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 128
    },
    {
      "id": "gbrapf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 128
    },
    {
      "id": "drm_prime",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "opencl",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "gray14be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 14
    },
    {
      "id": "gray14le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 14
    },
    {
      "id": "grayf32be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 32
    },
    {
      "id": "grayf32le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 1,
      "bitsPerPixel": 32
    },
    {
      "id": "yuva422p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva422p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 36
    },
    {
      "id": "yuva444p12be",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "yuva444p12le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 4,
      "bitsPerPixel": 48
    },
    {
      "id": "nv24",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "nv42",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 24
    },
    {
      "id": "vulkan",
      "input": false,
      "output": false,
      "hardware": true,
      "palette": false,
      "bitstream": false,
      "nbComponents": 0,
      "bitsPerPixel": 0
    },
    {
      "id": "y210be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "y210le",
      "input": true,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 20
    },
    {
      "id": "x2rgb10le",
      "input": true,
      "output": true,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    },
    {
      "id": "x2rgb10be",
      "input": false,
      "output": false,
      "hardware": false,
      "palette": false,
      "bitstream": false,
      "nbComponents": 3,
      "bitsPerPixel": 30
    }
  ],
  "layouts": {
    "channels": [
      {
        "id": "FL",
        "label": "front left"
      },
      {
        "id": "FR",
        "label": "front right"
      },
      {
        "id": "FC",
        "label": "front center"
      },
      {
        "id": "LFE",
        "label": "low frequency"
      },
      {
        "id": "BL",
        "label": "back left"
      },
      {
        "id": "BR",
        "label": "back right"
      },
      {
        "id": "FLC",
        "label": "front left-of-center"
      },
      {
        "id": "FRC",
        "label": "front right-of-center"
      },
      {
        "id": "BC",
        "label": "back center"
      },
      {
        "id": "SL",
        "label": "side left"
      },
      {
        "id": "SR",
        "label": "side right"
      },
      {
        "id": "TC",
        "label": "top center"
      },
      {
        "id": "TFL",
        "label": "top front left"
      },
      {
        "id": "TFC",
        "label": "top front center"
      },
      {
        "id": "TFR",
        "label": "top front right"
      },
      {
        "id": "TBL",
        "label": "top back left"
      },
      {
        "id": "TBC",
        "label": "top back center"
      },
      {
        "id": "TBR",
        "label": "top back right"
      },
      {
        "id": "DL",
        "label": "downmix left"
      },
      {
        "id": "DR",
        "label": "downmix right"
      },
      {
        "id": "WL",
        "label": "wide left"
      },
      {
        "id": "WR",
        "label": "wide right"
      },
      {
        "id": "SDL",
        "label": "surround direct left"
      },
      {
        "id": "SDR",
        "label": "surround direct right"
      },
      {
        "id": "LFE2",
        "label": "low frequency 2"
      },
      {
        "id": "TSL",
        "label": "top side left"
      },
      {
        "id": "TSR",
        "label": "top side right"
      },
      {
        "id": "BFC",
        "label": "bottom front center"
      },
      {
        "id": "BFL",
        "label": "bottom front left"
      },
      {
        "id": "BFR",
        "label": "bottom front right"
      }
    ],
    "aliases": [
      {
        "id": "mono",
        "value": "FC"
      },
      {
        "id": "stereo",
        "value": "FL+FR"
      },
      {
        "id": "2.1",
        "value": "FL+FR+LFE"
      },
      {
        "id": "3.0",
        "value": "FL+FR+FC"
      },
      {
        "id": "3.0(back)",
        "value": "FL+FR+BC"
      },
      {
        "id": "4.0",
        "value": "FL+FR+FC+BC"
      },
      {
        "id": "quad",
        "value": "FL+FR+BL+BR"
      },
      {
        "id": "quad(side)",
        "value": "FL+FR+SL+SR"
      },
      {
        "id": "3.1",
        "value": "FL+FR+FC+LFE"
      },
      {
        "id": "5.0",
        "value": "FL+FR+FC+BL+BR"
      },
      {
        "id": "5.0(side)",
        "value": "FL+FR+FC+SL+SR"
      },
      {
        "id": "4.1",
        "value": "FL+FR+FC+LFE+BC"
      },
      {
        "id": "5.1",
        "value": "FL+FR+FC+LFE+BL+BR"
      },
      {
        "id": "5.1(side)",
        "value": "FL+FR+FC+LFE+SL+SR"
      },
      {
        "id": "6.0",
        "value": "FL+FR+FC+BC+SL+SR"
      },
      {
        "id": "6.0(front)",
        "value": "FL+FR+FLC+FRC+SL+SR"
      },
      {
        "id": "hexagonal",
        "value": "FL+FR+FC+BL+BR+BC"
      },
      {
        "id": "6.1",
        "value": "FL+FR+FC+LFE+BC+SL+SR"
      },
      {
        "id": "6.1(back)",
        "value": "FL+FR+FC+LFE+BL+BR+BC"
      },
      {
        "id": "6.1(front)",
        "value": "FL+FR+LFE+FLC+FRC+SL+SR"
      },
      {
        "id": "7.0",
        "value": "FL+FR+FC+BL+BR+SL+SR"
      },
      {
        "id": "7.0(front)",
        "value": "FL+FR+FC+FLC+FRC+SL+SR"
      },
      {
        "id": "7.1",
        "value": "FL+FR+FC+LFE+BL+BR+SL+SR"
      },
      {
        "id": "7.1(wide)",
        "value": "FL+FR+FC+LFE+BL+BR+FLC+FRC"
      },
      {
        "id": "7.1(wide-side)",
        "value": "FL+FR+FC+LFE+FLC+FRC+SL+SR"
      },
      {
        "id": "octagonal",
        "value": "FL+FR+FC+BL+BR+BC+SL+SR"
      },
      {
        "id": "hexadecagonal",
        "value": "FL+FR+FC+BL+BR+BC+SL+SR+TFL+TFC+TFR+TBL+TBC+TBR+WL+WR"
      },
      {
        "id": "downmix",
        "value": "DL+DR"
      },
      {
        "id": "22.2",
        "value": "FL+FR+FC+LFE+BL+BR+FLC+FRC+BC+SL+SR+TC+TFL+TFC+TFR+TBL+TBC+TBR+LFE2+TSL+TSR+BFC+BFL+BFR"
      }
    ]
  },
  "sample_fmts": [
    {
      "id": "u8",
      "depth": 8
    },
    {
      "id": "s16",
      "depth": 16
    },
    {
      "id": "s32",
      "depth": 32
    },
    {
      "id": "flt",
      "depth": 32
    },
    {
      "id": "dbl",
      "depth": 64
    },
    {
      "id": "u8p",
      "depth": 8
    },
    {
      "id": "s16p",
      "depth": 16
    },
    {
      "id": "s32p",
      "depth": 32
    },
    {
      "id": "fltp",
      "depth": 32
    },
    {
      "id": "dblp",
      "depth": 64
    },
    {
      "id": "s64",
      "depth": 64
    },
    {
      "id": "s64p",
      "depth": 64
    }
  ],
  "colors": [
    {
      "id": "AliceBlue",
      "color": "#f0f8ff"
    },
    {
      "id": "AntiqueWhite",
      "color": "#faebd7"
    },
    {
      "id": "Aqua",
      "color": "#00ffff"
    },
    {
      "id": "Aquamarine",
      "color": "#7fffd4"
    },
    {
      "id": "Azure",
      "color": "#f0ffff"
    },
    {
      "id": "Beige",
      "color": "#f5f5dc"
    },
    {
      "id": "Bisque",
      "color": "#ffe4c4"
    },
    {
      "id": "Black",
      "color": "#000000"
    },
    {
      "id": "BlanchedAlmond",
      "color": "#ffebcd"
    },
    {
      "id": "Blue",
      "color": "#0000ff"
    },
    {
      "id": "BlueViolet",
      "color": "#8a2be2"
    },
    {
      "id": "Brown",
      "color": "#a52a2a"
    },
    {
      "id": "BurlyWood",
      "color": "#deb887"
    },
    {
      "id": "CadetBlue",
      "color": "#5f9ea0"
    },
    {
      "id": "Chartreuse",
      "color": "#7fff00"
    },
    {
      "id": "Chocolate",
      "color": "#d2691e"
    },
    {
      "id": "Coral",
      "color": "#ff7f50"
    },
    {
      "id": "CornflowerBlue",
      "color": "#6495ed"
    },
    {
      "id": "Cornsilk",
      "color": "#fff8dc"
    },
    {
      "id": "Crimson",
      "color": "#dc143c"
    },
    {
      "id": "Cyan",
      "color": "#00ffff"
    },
    {
      "id": "DarkBlue",
      "color": "#00008b"
    },
    {
      "id": "DarkCyan",
      "color": "#008b8b"
    },
    {
      "id": "DarkGoldenRod",
      "color": "#b8860b"
    },
    {
      "id": "DarkGray",
      "color": "#a9a9a9"
    },
    {
      "id": "DarkGreen",
      "color": "#006400"
    },
    {
      "id": "DarkKhaki",
      "color": "#bdb76b"
    },
    {
      "id": "DarkMagenta",
      "color": "#8b008b"
    },
    {
      "id": "DarkOliveGreen",
      "color": "#556b2f"
    },
    {
      "id": "Darkorange",
      "color": "#ff8c00"
    },
    {
      "id": "DarkOrchid",
      "color": "#9932cc"
    },
    {
      "id": "DarkRed",
      "color": "#8b0000"
    },
    {
      "id": "DarkSalmon",
      "color": "#e9967a"
    },
    {
      "id": "DarkSeaGreen",
      "color": "#8fbc8f"
    },
    {
      "id": "DarkSlateBlue",
      "color": "#483d8b"
    },
    {
      "id": "DarkSlateGray",
      "color": "#2f4f4f"
    },
    {
      "id": "DarkTurquoise",
      "color": "#00ced1"
    },
    {
      "id": "DarkViolet",
      "color": "#9400d3"
    },
    {
      "id": "DeepPink",
      "color": "#ff1493"
    },
    {
      "id": "DeepSkyBlue",
      "color": "#00bfff"
    },
    {
      "id": "DimGray",
      "color": "#696969"
    },
    {
      "id": "DodgerBlue",
      "color": "#1e90ff"
    },
    {
      "id": "FireBrick",
      "color": "#b22222"
    },
    {
      "id": "FloralWhite",
      "color": "#fffaf0"
    },
    {
      "id": "ForestGreen",
      "color": "#228b22"
    },
    {
      "id": "Fuchsia",
      "color": "#ff00ff"
    },
    {
      "id": "Gainsboro",
      "color": "#dcdcdc"
    },
    {
      "id": "GhostWhite",
      "color": "#f8f8ff"
    },
    {
      "id": "Gold",
      "color": "#ffd700"
    },
    {
      "id": "GoldenRod",
      "color": "#daa520"
    },
    {
      "id": "Gray",
      "color": "#808080"
    },
    {
      "id": "Green",
      "color": "#008000"
    },
    {
      "id": "GreenYellow",
      "color": "#adff2f"
    },
    {
      "id": "HoneyDew",
      "color": "#f0fff0"
    },
    {
      "id": "HotPink",
      "color": "#ff69b4"
    },
    {
      "id": "IndianRed",
      "color": "#cd5c5c"
    },
    {
      "id": "Indigo",
      "color": "#4b0082"
    },
    {
      "id": "Ivory",
      "color": "#fffff0"
    },
    {
      "id": "Khaki",
      "color": "#f0e68c"
    },
    {
      "id": "Lavender",
      "color": "#e6e6fa"
    },
    {
      "id": "LavenderBlush",
      "color": "#fff0f5"
    },
    {
      "id": "LawnGreen",
      "color": "#7cfc00"
    },
    {
      "id": "LemonChiffon",
      "color": "#fffacd"
    },
    {
      "id": "LightBlue",
      "color": "#add8e6"
    },
    {
      "id": "LightCoral",
      "color": "#f08080"
    },
    {
      "id": "LightCyan",
      "color": "#e0ffff"
    },
    {
      "id": "LightGoldenRodYellow",
      "color": "#fafad2"
    },
    {
      "id": "LightGreen",
      "color": "#90ee90"
    },
    {
      "id": "LightGrey",
      "color": "#d3d3d3"
    },
    {
      "id": "LightPink",
      "color": "#ffb6c1"
    },
    {
      "id": "LightSalmon",
      "color": "#ffa07a"
    },
    {
      "id": "LightSeaGreen",
      "color": "#20b2aa"
    },
    {
      "id": "LightSkyBlue",
      "color": "#87cefa"
    },
    {
      "id": "LightSlateGray",
      "color": "#778899"
    },
    {
      "id": "LightSteelBlue",
      "color": "#b0c4de"
    },
    {
      "id": "LightYellow",
      "color": "#ffffe0"
    },
    {
      "id": "Lime",
      "color": "#00ff00"
    },
    {
      "id": "LimeGreen",
      "color": "#32cd32"
    },
    {
      "id": "Linen",
      "color": "#faf0e6"
    },
    {
      "id": "Magenta",
      "color": "#ff00ff"
    },
    {
      "id": "Maroon",
      "color": "#800000"
    },
    {
      "id": "MediumAquaMarine",
      "color": "#66cdaa"
    },
    {
      "id": "MediumBlue",
      "color": "#0000cd"
    },
    {
      "id": "MediumOrchid",
      "color": "#ba55d3"
    },
    {
      "id": "MediumPurple",
      "color": "#9370d8"
    },
    {
      "id": "MediumSeaGreen",
      "color": "#3cb371"
    },
    {
      "id": "MediumSlateBlue",
      "color": "#7b68ee"
    },
    {
      "id": "MediumSpringGreen",
      "color": "#00fa9a"
    },
    {
      "id": "MediumTurquoise",
      "color": "#48d1cc"
    },
    {
      "id": "MediumVioletRed",
      "color": "#c71585"
    },
    {
      "id": "MidnightBlue",
      "color": "#191970"
    },
    {
      "id": "MintCream",
      "color": "#f5fffa"
    },
    {
      "id": "MistyRose",
      "color": "#ffe4e1"
    },
    {
      "id": "Moccasin",
      "color": "#ffe4b5"
    },
    {
      "id": "NavajoWhite",
      "color": "#ffdead"
    },
    {
      "id": "Navy",
      "color": "#000080"
    },
    {
      "id": "OldLace",
      "color": "#fdf5e6"
    },
    {
      "id": "Olive",
      "color": "#808000"
    },
    {
      "id": "OliveDrab",
      "color": "#6b8e23"
    },
    {
      "id": "Orange",
      "color": "#ffa500"
    },
    {
      "id": "OrangeRed",
      "color": "#ff4500"
    },
    {
      "id": "Orchid",
      "color": "#da70d6"
    },
    {
      "id": "PaleGoldenRod",
      "color": "#eee8aa"
    },
    {
      "id": "PaleGreen",
      "color": "#98fb98"
    },
    {
      "id": "PaleTurquoise",
      "color": "#afeeee"
    },
    {
      "id": "PaleVioletRed",
      "color": "#d87093"
    },
    {
      "id": "PapayaWhip",
      "color": "#ffefd5"
    },
    {
      "id": "PeachPuff",
      "color": "#ffdab9"
    },
    {
      "id": "Peru",
      "color": "#cd853f"
    },
    {
      "id": "Pink",
      "color": "#ffc0cb"
    },
    {
      "id": "Plum",
      "color": "#dda0dd"
    },
    {
      "id": "PowderBlue",
      "color": "#b0e0e6"
    },
    {
      "id": "Purple",
      "color": "#800080"
    },
    {
      "id": "Red",
      "color": "#ff0000"
    },
    {
      "id": "RosyBrown",
      "color": "#bc8f8f"
    },
    {
      "id": "RoyalBlue",
      "color": "#4169e1"
    },
    {
      "id": "SaddleBrown",
      "color": "#8b4513"
    },
    {
      "id": "Salmon",
      "color": "#fa8072"
    },
    {
      "id": "SandyBrown",
      "color": "#f4a460"
    },
    {
      "id": "SeaGreen",
      "color": "#2e8b57"
    },
    {
      "id": "SeaShell",
      "color": "#fff5ee"
    },
    {
      "id": "Sienna",
      "color": "#a0522d"
    },
    {
      "id": "Silver",
      "color": "#c0c0c0"
    },
    {
      "id": "SkyBlue",
      "color": "#87ceeb"
    },
    {
      "id": "SlateBlue",
      "color": "#6a5acd"
    },
    {
      "id": "SlateGray",
      "color": "#708090"
    },
    {
      "id": "Snow",
      "color": "#fffafa"
    },
    {
      "id": "SpringGreen",
      "color": "#00ff7f"
    },
    {
      "id": "SteelBlue",
      "color": "#4682b4"
    },
    {
      "id": "Tan",
      "color": "#d2b48c"
    },
    {
      "id": "Teal",
      "color": "#008080"
    },
    {
      "id": "Thistle",
      "color": "#d8bfd8"
    },
    {
      "id": "Tomato",
      "color": "#ff6347"
    },
    {
      "id": "Turquoise",
      "color": "#40e0d0"
    },
    {
      "id": "Violet",
      "color": "#ee82ee"
    },
    {
      "id": "Wheat",
      "color": "#f5deb3"
    },
    {
      "id": "White",
      "color": "#ffffff"
    },
    {
      "id": "WhiteSmoke",
      "color": "#f5f5f5"
    },
    {
      "id": "Yellow",
      "color": "#ffff00"
    },
    {
      "id": "YellowGreen",
      "color": "#9acd32"
    }
  ],
  "hwaccels": [
    "vdpau",
    "cuda",
    "vaapi",
    "qsv",
    "drm",
    "opencl"
  ]
}